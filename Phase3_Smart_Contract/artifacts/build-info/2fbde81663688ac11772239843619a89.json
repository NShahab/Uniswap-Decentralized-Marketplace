{"id":"2fbde81663688ac11772239843619a89","_format":"hh-sol-build-info-1","solcVersion":"0.7.6","solcLongVersion":"0.7.6+commit.7338295f","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"../utils/Context.sol\";\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}\n"},"@openzeppelin/contracts/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/math/SafeMath.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\n * checks.\n *\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\n * in bugs, because programmers usually assume that an overflow raises an\n * error, which is the standard behavior in high level programming languages.\n * `SafeMath` restores this intuition by reverting the transaction when an\n * operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        uint256 c = a + b;\n        if (c < a) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b > a) return (false, 0);\n        return (true, a - b);\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) return (true, 0);\n        uint256 c = a * b;\n        if (c / a != b) return (false, 0);\n        return (true, c);\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a / b);\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     *\n     * _Available since v3.4._\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        if (b == 0) return (false, 0);\n        return (true, a % b);\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b <= a, \"SafeMath: subtraction overflow\");\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (a == 0) return 0;\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: division by zero\");\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        require(b > 0, \"SafeMath: modulo by zero\");\n        return a % b;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {trySub}.\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        return a - b;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a / b;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * reverting with custom message when dividing by zero.\n     *\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\n     * message unnecessarily. For custom revert reasons use {tryMod}.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        return a % b;\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}\n"},"@openzeppelin/contracts/token/ERC20/SafeERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"../../math/SafeMath.sol\";\nimport \"../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\nimport \"../../introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n\n    /**\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\n      *\n      * Requirements:\n      *\n      * - `from` cannot be the zero address.\n      * - `to` cannot be the zero address.\n      * - `tokenId` token must exist and be owned by `from`.\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n      *\n      * Emits a {Transfer} event.\n      */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Enumerable is IERC721 {\n\n    /**\n     * @dev Returns the total amount of tokens stored by the contract.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\n     */\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\n\n    /**\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n     * Use along with {totalSupply} to enumerate all tokens.\n     */\n    function tokenByIndex(uint256 index) external view returns (uint256);\n}\n"},"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\nimport \"./IERC721.sol\";\n\n/**\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n * @dev See https://eips.ethereum.org/EIPS/eip-721\n */\ninterface IERC721Metadata is IERC721 {\n\n    /**\n     * @dev Returns the token collection name.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the token collection symbol.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\n     */\n    function tokenURI(uint256 tokenId) external view returns (string memory);\n}\n"},"@openzeppelin/contracts/utils/Address.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.2 <0.8.0;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionDelegateCall(target, data, \"Address: low-level delegate call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a delegate call.\n     *\n     * _Available since v3.4._\n     */\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        require(isContract(target), \"Address: delegate call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with GSN meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"content":"// SPDX-License-Identifier: MIT\n\npragma solidity >=0.6.0 <0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor () internal {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and make it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#mint\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\ninterface IUniswapV3MintCallback {\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#mint call\n    function uniswapV3MintCallback(\n        uint256 amount0Owed,\n        uint256 amount1Owed,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Callback for IUniswapV3PoolActions#swap\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\ninterface IUniswapV3SwapCallback {\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\n    function uniswapV3SwapCallback(\n        int256 amount0Delta,\n        int256 amount1Delta,\n        bytes calldata data\n    ) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title The interface for the Uniswap V3 Factory\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\ninterface IUniswapV3Factory {\n    /// @notice Emitted when the owner of the factory is changed\n    /// @param oldOwner The owner before the owner was changed\n    /// @param newOwner The owner after the owner was changed\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\n\n    /// @notice Emitted when a pool is created\n    /// @param token0 The first token of the pool by address sort order\n    /// @param token1 The second token of the pool by address sort order\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\n    /// @param pool The address of the created pool\n    event PoolCreated(\n        address indexed token0,\n        address indexed token1,\n        uint24 indexed fee,\n        int24 tickSpacing,\n        address pool\n    );\n\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\n    /// @param fee The enabled fee, denominated in hundredths of a bip\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\n\n    /// @notice Returns the current owner of the factory\n    /// @dev Can be changed by the current owner via setOwner\n    /// @return The address of the factory owner\n    function owner() external view returns (address);\n\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n    /// @return The tick spacing\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\n\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n    /// @param tokenA The contract address of either token0 or token1\n    /// @param tokenB The contract address of the other token\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n    /// @return pool The pool address\n    function getPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external view returns (address pool);\n\n    /// @notice Creates a pool for the given two tokens and fee\n    /// @param tokenA One of the two tokens in the desired pool\n    /// @param tokenB The other of the two tokens in the desired pool\n    /// @param fee The desired fee for the pool\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n    /// are invalid.\n    /// @return pool The address of the newly created pool\n    function createPool(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) external returns (address pool);\n\n    /// @notice Updates the owner of the factory\n    /// @dev Must be called by the current owner\n    /// @param _owner The new owner of the factory\n    function setOwner(address _owner) external;\n\n    /// @notice Enables a fee amount with the given tickSpacing\n    /// @dev Fee amounts may never be removed once enabled\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\nimport './pool/IUniswapV3PoolImmutables.sol';\nimport './pool/IUniswapV3PoolState.sol';\nimport './pool/IUniswapV3PoolDerivedState.sol';\nimport './pool/IUniswapV3PoolActions.sol';\nimport './pool/IUniswapV3PoolOwnerActions.sol';\nimport './pool/IUniswapV3PoolEvents.sol';\n\n/// @title The interface for a Uniswap V3 Pool\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n/// to the ERC20 specification\n/// @dev The pool interface is broken up into many smaller pieces\ninterface IUniswapV3Pool is\n    IUniswapV3PoolImmutables,\n    IUniswapV3PoolState,\n    IUniswapV3PoolDerivedState,\n    IUniswapV3PoolActions,\n    IUniswapV3PoolOwnerActions,\n    IUniswapV3PoolEvents\n{\n\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissionless pool actions\n/// @notice Contains pool methods that can be called by anyone\ninterface IUniswapV3PoolActions {\n    /// @notice Sets the initial price for the pool\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\n    function initialize(uint160 sqrtPriceX96) external;\n\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\n    /// @param recipient The address for which the liquidity will be created\n    /// @param tickLower The lower tick of the position in which to add liquidity\n    /// @param tickUpper The upper tick of the position in which to add liquidity\n    /// @param amount The amount of liquidity to mint\n    /// @param data Any data that should be passed through to the callback\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\n    function mint(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount,\n        bytes calldata data\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Collects tokens owed to a position\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n    /// @param recipient The address which should receive the fees collected\n    /// @param tickLower The lower tick of the position for which to collect fees\n    /// @param tickUpper The upper tick of the position for which to collect fees\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(\n        address recipient,\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n    /// @dev Fees must be collected separately via a call to #collect\n    /// @param tickLower The lower tick of the position for which to burn liquidity\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\n    /// @param amount How much liquidity to burn\n    /// @return amount0 The amount of token0 sent to the recipient\n    /// @return amount1 The amount of token1 sent to the recipient\n    function burn(\n        int24 tickLower,\n        int24 tickUpper,\n        uint128 amount\n    ) external returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Swap token0 for token1, or token1 for token0\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n    /// @param recipient The address to receive the output of the swap\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\n    /// @param data Any data to be passed through to the callback\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\n    function swap(\n        address recipient,\n        bool zeroForOne,\n        int256 amountSpecified,\n        uint160 sqrtPriceLimitX96,\n        bytes calldata data\n    ) external returns (int256 amount0, int256 amount1);\n\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\n    /// @param recipient The address which will receive the token0 and token1 amounts\n    /// @param amount0 The amount of token0 to send\n    /// @param amount1 The amount of token1 to send\n    /// @param data Any data to be passed through to the callback\n    function flash(\n        address recipient,\n        uint256 amount0,\n        uint256 amount1,\n        bytes calldata data\n    ) external;\n\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n    /// the input observationCardinalityNext.\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that is not stored\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n/// blockchain. The functions here may have variable gas costs.\ninterface IUniswapV3PoolDerivedState {\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n    /// you must call it with secondsAgos = [3600, 0].\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n    /// timestamp\n    function observe(uint32[] calldata secondsAgos)\n        external\n        view\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\n\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n    /// snapshot is taken and the second snapshot is taken.\n    /// @param tickLower The lower tick of the range\n    /// @param tickUpper The upper tick of the range\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\n        external\n        view\n        returns (\n            int56 tickCumulativeInside,\n            uint160 secondsPerLiquidityInsideX128,\n            uint32 secondsInside\n        );\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Events emitted by a pool\n/// @notice Contains all events emitted by the pool\ninterface IUniswapV3PoolEvents {\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\n\n    /// @notice Emitted when liquidity is minted for a given position\n    /// @param sender The address that minted the liquidity\n    /// @param owner The owner of the position and recipient of any minted liquidity\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity minted to the position range\n    /// @param amount0 How much token0 was required for the minted liquidity\n    /// @param amount1 How much token1 was required for the minted liquidity\n    event Mint(\n        address sender,\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted when fees are collected by the owner of a position\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n    /// @param owner The owner of the position for which fees are collected\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount0 The amount of token0 fees collected\n    /// @param amount1 The amount of token1 fees collected\n    event Collect(\n        address indexed owner,\n        address recipient,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount0,\n        uint128 amount1\n    );\n\n    /// @notice Emitted when a position's liquidity is removed\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n    /// @param owner The owner of the position for which liquidity is removed\n    /// @param tickLower The lower tick of the position\n    /// @param tickUpper The upper tick of the position\n    /// @param amount The amount of liquidity to remove\n    /// @param amount0 The amount of token0 withdrawn\n    /// @param amount1 The amount of token1 withdrawn\n    event Burn(\n        address indexed owner,\n        int24 indexed tickLower,\n        int24 indexed tickUpper,\n        uint128 amount,\n        uint256 amount0,\n        uint256 amount1\n    );\n\n    /// @notice Emitted by the pool for any swaps between token0 and token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the output of the swap\n    /// @param amount0 The delta of the token0 balance of the pool\n    /// @param amount1 The delta of the token1 balance of the pool\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n    /// @param liquidity The liquidity of the pool after the swap\n    /// @param tick The log base 1.0001 of price of the pool after the swap\n    event Swap(\n        address indexed sender,\n        address indexed recipient,\n        int256 amount0,\n        int256 amount1,\n        uint160 sqrtPriceX96,\n        uint128 liquidity,\n        int24 tick\n    );\n\n    /// @notice Emitted by the pool for any flashes of token0/token1\n    /// @param sender The address that initiated the swap call, and that received the callback\n    /// @param recipient The address that received the tokens from flash\n    /// @param amount0 The amount of token0 that was flashed\n    /// @param amount1 The amount of token1 that was flashed\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\n    event Flash(\n        address indexed sender,\n        address indexed recipient,\n        uint256 amount0,\n        uint256 amount1,\n        uint256 paid0,\n        uint256 paid1\n    );\n\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n    /// just before a mint/swap/burn.\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\n    event IncreaseObservationCardinalityNext(\n        uint16 observationCardinalityNextOld,\n        uint16 observationCardinalityNextNew\n    );\n\n    /// @notice Emitted when the protocol fee is changed by the pool\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\n\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\n    /// @param sender The address that collects the protocol fees\n    /// @param recipient The address that receives the collected protocol fees\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that never changes\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\ninterface IUniswapV3PoolImmutables {\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n    /// @return The contract address\n    function factory() external view returns (address);\n\n    /// @notice The first of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token0() external view returns (address);\n\n    /// @notice The second of the two tokens of the pool, sorted by address\n    /// @return The token contract address\n    function token1() external view returns (address);\n\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\n    /// @return The fee\n    function fee() external view returns (uint24);\n\n    /// @notice The pool tick spacing\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n    /// This value is an int24 to avoid casting even though it is always positive.\n    /// @return The tick spacing\n    function tickSpacing() external view returns (int24);\n\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n    /// @return The max amount of liquidity per tick\n    function maxLiquidityPerTick() external view returns (uint128);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Permissioned pool actions\n/// @notice Contains pool methods that may only be called by the factory owner\ninterface IUniswapV3PoolOwnerActions {\n    /// @notice Set the denominator of the protocol's % share of the fees\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\n\n    /// @notice Collect the protocol fee accrued to the pool\n    /// @param recipient The address to which collected protocol fees should be sent\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n    /// @return amount0 The protocol fee collected in token0\n    /// @return amount1 The protocol fee collected in token1\n    function collectProtocol(\n        address recipient,\n        uint128 amount0Requested,\n        uint128 amount1Requested\n    ) external returns (uint128 amount0, uint128 amount1);\n}\n"},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Pool state that can change\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\n/// per transaction\ninterface IUniswapV3PoolState {\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n    /// when accessed externally.\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n    /// boundary.\n    /// observationIndex The index of the last oracle observation that was written,\n    /// observationCardinality The current maximum number of observations stored in the pool,\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n    /// feeProtocol The protocol fee for both tokens of the pool.\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n    /// unlocked Whether the pool is currently locked to reentrancy\n    function slot0()\n        external\n        view\n        returns (\n            uint160 sqrtPriceX96,\n            int24 tick,\n            uint16 observationIndex,\n            uint16 observationCardinality,\n            uint16 observationCardinalityNext,\n            uint8 feeProtocol,\n            bool unlocked\n        );\n\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal0X128() external view returns (uint256);\n\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n    /// @dev This value can overflow the uint256\n    function feeGrowthGlobal1X128() external view returns (uint256);\n\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\n    /// @dev Protocol fees will never exceed uint128 max in either token\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\n\n    /// @notice The currently in range liquidity available to the pool\n    /// @dev This value has no relationship to the total liquidity across all ticks\n    function liquidity() external view returns (uint128);\n\n    /// @notice Look up information about a specific tick in the pool\n    /// @param tick The tick to look up\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n    /// tick upper,\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\n    /// a specific position.\n    function ticks(int24 tick)\n        external\n        view\n        returns (\n            uint128 liquidityGross,\n            int128 liquidityNet,\n            uint256 feeGrowthOutside0X128,\n            uint256 feeGrowthOutside1X128,\n            int56 tickCumulativeOutside,\n            uint160 secondsPerLiquidityOutsideX128,\n            uint32 secondsOutside,\n            bool initialized\n        );\n\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\n\n    /// @notice Returns the information about a position by the position's key\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n    /// @return _liquidity The amount of liquidity in the position,\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\n    function positions(bytes32 key)\n        external\n        view\n        returns (\n            uint128 _liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    /// @notice Returns data about a specific observation index\n    /// @param index The element of the observations array to fetch\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n    /// ago, rather than at a specific index in the array.\n    /// @return blockTimestamp The timestamp of the observation,\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\n    function observations(uint256 index)\n        external\n        view\n        returns (\n            uint32 blockTimestamp,\n            int56 tickCumulative,\n            uint160 secondsPerLiquidityCumulativeX128,\n            bool initialized\n        );\n}\n"},"@uniswap/v3-core/contracts/libraries/TickMath.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Math library for computing sqrt prices from ticks and vice versa\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n/// prices between 2**-128 and 2**128\nlibrary TickMath {\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\n    int24 internal constant MIN_TICK = -887272;\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\n    int24 internal constant MAX_TICK = -MIN_TICK;\n\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\n\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\n    /// @dev Throws if |tick| > max tick\n    /// @param tick The input tick for the above formula\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n    /// at the given tick\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\n        require(absTick <= uint256(MAX_TICK), 'T');\n\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\n\n        if (tick > 0) ratio = type(uint256).max / ratio;\n\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\n    }\n\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n    /// ever return.\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\n        // second inequality must be < because the price can never reach the price at the max tick\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\n\n        uint256 r = ratio;\n        uint256 msb = 0;\n\n        assembly {\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(5, gt(r, 0xFFFFFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(4, gt(r, 0xFFFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(3, gt(r, 0xFF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(2, gt(r, 0xF))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := shl(1, gt(r, 0x3))\n            msb := or(msb, f)\n            r := shr(f, r)\n        }\n        assembly {\n            let f := gt(r, 0x1)\n            msb := or(msb, f)\n        }\n\n        if (msb >= 128) r = ratio >> (msb - 127);\n        else r = ratio << (127 - msb);\n\n        int256 log_2 = (int256(msb) - 128) << 64;\n\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(63, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(62, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(61, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(60, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(59, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(58, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(57, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(56, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(55, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(54, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(53, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(52, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(51, f))\n            r := shr(f, r)\n        }\n        assembly {\n            r := shr(127, mul(r, r))\n            let f := shr(128, r)\n            log_2 := or(log_2, shl(50, f))\n        }\n\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\n\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\n\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\n    }\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity =0.7.6;\n\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\n\n/// @title Interface for WETH9\ninterface IWETH9 is IERC20 {\n    /// @notice Deposit ether to get wrapped ether\n    function deposit() external payable;\n\n    /// @notice Withdraw wrapped ether to get ether\n    function withdraw(uint256) external;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\n\n/// @title ERC721 with permit\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\ninterface IERC721Permit is IERC721 {\n    /// @notice The permit typehash used in the permit signature\n    /// @return The typehash for the permit\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    /// @notice The domain separator used in the permit signature\n    /// @return The domain seperator used in encoding of permit signature\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    /// @notice Approve of a specific token ID for spending by spender via signature\n    /// @param spender The account that is being approved\n    /// @param tokenId The ID of the token that is being approved for spending\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\n    function permit(\n        address spender,\n        uint256 tokenId,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external payable;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\n\nimport './IPoolInitializer.sol';\nimport './IERC721Permit.sol';\nimport './IPeripheryPayments.sol';\nimport './IPeripheryImmutableState.sol';\nimport '../libraries/PoolAddress.sol';\n\n/// @title Non-fungible token for positions\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n/// and authorized.\ninterface INonfungiblePositionManager is\n    IPoolInitializer,\n    IPeripheryPayments,\n    IPeripheryImmutableState,\n    IERC721Metadata,\n    IERC721Enumerable,\n    IERC721Permit\n{\n    /// @notice Emitted when liquidity is increased for a position NFT\n    /// @dev Also emitted when a token is minted\n    /// @param tokenId The ID of the token for which liquidity was increased\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when liquidity is decreased for a position NFT\n    /// @param tokenId The ID of the token for which liquidity was decreased\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\n    /// @notice Emitted when tokens are collected for a position NFT\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n    /// @param tokenId The ID of the token for which underlying tokens were collected\n    /// @param recipient The address of the account that received the collected tokens\n    /// @param amount0 The amount of token0 owed to the position that was collected\n    /// @param amount1 The amount of token1 owed to the position that was collected\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\n\n    /// @notice Returns the position information associated with a given token ID.\n    /// @dev Throws if the token ID is not valid.\n    /// @param tokenId The ID of the token that represents the position\n    /// @return nonce The nonce for permits\n    /// @return operator The address that is approved for spending\n    /// @return token0 The address of the token0 for a specific pool\n    /// @return token1 The address of the token1 for a specific pool\n    /// @return fee The fee associated with the pool\n    /// @return tickLower The lower end of the tick range for the position\n    /// @return tickUpper The higher end of the tick range for the position\n    /// @return liquidity The liquidity of the position\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\n    function positions(uint256 tokenId)\n        external\n        view\n        returns (\n            uint96 nonce,\n            address operator,\n            address token0,\n            address token1,\n            uint24 fee,\n            int24 tickLower,\n            int24 tickUpper,\n            uint128 liquidity,\n            uint256 feeGrowthInside0LastX128,\n            uint256 feeGrowthInside1LastX128,\n            uint128 tokensOwed0,\n            uint128 tokensOwed1\n        );\n\n    struct MintParams {\n        address token0;\n        address token1;\n        uint24 fee;\n        int24 tickLower;\n        int24 tickUpper;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        address recipient;\n        uint256 deadline;\n    }\n\n    /// @notice Creates a new position wrapped in a NFT\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n    /// @return tokenId The ID of the token that represents the minted position\n    /// @return liquidity The amount of liquidity for this position\n    /// @return amount0 The amount of token0\n    /// @return amount1 The amount of token1\n    function mint(MintParams calldata params)\n        external\n        payable\n        returns (\n            uint256 tokenId,\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct IncreaseLiquidityParams {\n        uint256 tokenId;\n        uint256 amount0Desired;\n        uint256 amount1Desired;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\n    /// amount0Desired The desired amount of token0 to be spent,\n    /// amount1Desired The desired amount of token1 to be spent,\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return liquidity The new liquidity amount as a result of the increase\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (\n            uint128 liquidity,\n            uint256 amount0,\n            uint256 amount1\n        );\n\n    struct DecreaseLiquidityParams {\n        uint256 tokenId;\n        uint128 liquidity;\n        uint256 amount0Min;\n        uint256 amount1Min;\n        uint256 deadline;\n    }\n\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\n    /// amount The amount by which liquidity will be decreased,\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n    /// deadline The time by which the transaction must be included to effect the change\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\n        external\n        payable\n        returns (uint256 amount0, uint256 amount1);\n\n    struct CollectParams {\n        uint256 tokenId;\n        address recipient;\n        uint128 amount0Max;\n        uint128 amount1Max;\n    }\n\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\n    /// recipient The account that should receive the tokens,\n    /// amount0Max The maximum amount of token0 to collect,\n    /// amount1Max The maximum amount of token1 to collect\n    /// @return amount0 The amount of fees collected in token0\n    /// @return amount1 The amount of fees collected in token1\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\n\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n    /// must be collected first.\n    /// @param tokenId The ID of the token that is being burned\n    function burn(uint256 tokenId) external payable;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Immutable state\n/// @notice Functions that return immutable state of the router\ninterface IPeripheryImmutableState {\n    /// @return Returns the address of the Uniswap V3 factory\n    function factory() external view returns (address);\n\n    /// @return Returns the address of WETH9\n    function WETH9() external view returns (address);\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\n\n/// @title Periphery Payments\n/// @notice Functions to ease deposits and withdrawals of ETH\ninterface IPeripheryPayments {\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\n    /// @param recipient The address receiving ETH\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\n\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n    /// that use ether for the input amount\n    function refundETH() external payable;\n\n    /// @notice Transfers the full amount of a token held by this contract to recipient\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n    /// @param token The contract address of the token which will be transferred to `recipient`\n    /// @param amountMinimum The minimum amount of token required for a transfer\n    /// @param recipient The destination address of the token\n    function sweepToken(\n        address token,\n        uint256 amountMinimum,\n        address recipient\n    ) external payable;\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\n/// @title Creates and initializes V3 Pools\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n/// require the pool to exist.\ninterface IPoolInitializer {\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n    /// @param token0 The contract address of token0 of the pool\n    /// @param token1 The contract address of token1 of the pool\n    /// @param fee The fee amount of the v3 pool for the specified token pair\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\n    function createAndInitializePoolIfNecessary(\n        address token0,\n        address token1,\n        uint24 fee,\n        uint160 sqrtPriceX96\n    ) external payable returns (address pool);\n}\n"},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.7.5;\npragma abicoder v2;\n\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\n\n/// @title Router token swapping functionality\n/// @notice Functions for swapping tokens via Uniswap V3\ninterface ISwapRouter is IUniswapV3SwapCallback {\n    struct ExactInputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactInputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountIn;\n        uint256 amountOutMinimum;\n    }\n\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n    /// @return amountOut The amount of the received token\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\n\n    struct ExactOutputSingleParams {\n        address tokenIn;\n        address tokenOut;\n        uint24 fee;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n        uint160 sqrtPriceLimitX96;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\n\n    struct ExactOutputParams {\n        bytes path;\n        address recipient;\n        uint256 deadline;\n        uint256 amountOut;\n        uint256 amountInMaximum;\n    }\n\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n    /// @return amountIn The amount of the input token\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\n}\n"},"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol":{"content":"// SPDX-License-Identifier: GPL-2.0-or-later\npragma solidity >=0.5.0;\n\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\nlibrary PoolAddress {\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\n\n    /// @notice The identifying key of the pool\n    struct PoolKey {\n        address token0;\n        address token1;\n        uint24 fee;\n    }\n\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\n    /// @param tokenA The first token of a pool, unsorted\n    /// @param tokenB The second token of a pool, unsorted\n    /// @param fee The fee level of the pool\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\n    function getPoolKey(\n        address tokenA,\n        address tokenB,\n        uint24 fee\n    ) internal pure returns (PoolKey memory) {\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\n    }\n\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\n    /// @param factory The Uniswap V3 factory contract address\n    /// @param key The PoolKey\n    /// @return pool The contract address of the V3 pool\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\n        require(key.token0 < key.token1);\n        pool = address(\n            uint256(\n                keccak256(\n                    abi.encodePacked(\n                        hex'ff',\n                        factory,\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\n                        POOL_INIT_CODE_HASH\n                    )\n                )\n            )\n        );\n    }\n}\n"},"contracts/libraries/SqrtMath.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\n\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\"; // Import OZ 3.4 SafeMath\r\n\r\n/**\r\n * @title Safe Square Root Math Library for Solidity 0.7.x\r\n * @author Adapted from OpenZeppelin Contracts & other sources\r\n * @notice Provides square root functionality using SafeMath for uint256.\r\n */\r\nlibrary SqrtMath {\r\n    using SafeMath for uint256;\r\n\r\n    // Optional: Include Rounding enum if your main contract needs the rounding variant\r\n    enum Rounding {\r\n        Floor,\r\n        Ceil\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the integer square root of a number rounded down (floor).\r\n     * Uses Babylonian method with SafeMath. 6 iterations are sufficient for uint256.\r\n     */\r\n    function sqrt(uint256 a) internal pure returns (uint256) {\r\n        if (a == 0) return 0;\r\n\r\n        // Initial estimate - can start with a simple estimate like a/2 or use log2 based estimate\r\n        // Using roughly x = 2**(log2(a)/2) based estimate (safer)\r\n        uint256 estimate = 1 << (log2(a) >> 1);\r\n        if (estimate == 0) estimate = 1; // Ensure estimate is not zero if a > 0\r\n\r\n        // Babylonian method iterations using SafeMath\r\n        // result = (estimate + a / estimate) / 2;\r\n        uint256 result = estimate.add(a.div(estimate)).div(2);\r\n        result = result.add(a.div(result)).div(2);\r\n        result = result.add(a.div(result)).div(2);\r\n        result = result.add(a.div(result)).div(2);\r\n        result = result.add(a.div(result)).div(2);\r\n        result = result.add(a.div(result)).div(2);\r\n\r\n        // Final check for floor rounding (integer truncation might overshoot)\r\n        // Check if result * result > a\r\n        // Avoid direct multiplication if result can be large, use division check: result > a / result\r\n        if (result > a.div(result)) {\r\n            // If result > a/result, it means result*result > a (potential overflow avoided)\r\n            // So, the floor value is result - 1\r\n            return result.sub(1);\r\n        } else {\r\n            // Otherwise, result*result <= a, so result is the floor value\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Calculates sqrt(a), following the selected rounding direction.\r\n     */\r\n    function sqrt(\r\n        uint256 a,\r\n        Rounding rounding\r\n    ) internal pure returns (uint256) {\r\n        uint256 resultFloor = sqrt(a); // Calculate floor value first\r\n        if (rounding == Rounding.Floor) {\r\n            return resultFloor;\r\n        } else {\r\n            // rounding == Rounding.Ceil\r\n            // Check if ceil is needed (i.e., if a is not a perfect square)\r\n            // If resultFloor * resultFloor < a, then we need to round up\r\n            if (resultFloor.mul(resultFloor) < a) {\r\n                // Use SafeMath for the check\r\n                return resultFloor.add(1);\r\n            } else {\r\n                return resultFloor; // a was a perfect square, floor == ceil\r\n            }\r\n        }\r\n    }\r\n\r\n    // --- Internal helper: log2 needed for initial estimate ---\r\n    /**\r\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\r\n     * Returns 0 if given 0. Adapted from OZ 4.x for 0.7.6 compatibility using assembly.\r\n     */\r\n    function log2(uint256 x) internal pure returns (uint256 r) {\r\n        assembly {\r\n            let v := x\r\n            if iszero(v) {\r\n                r := 0\r\n            }\r\n            if gt(v, 0xffffffffffffffffffffffffffffffff) {\r\n                r := add(r, 128)\r\n                v := shr(128, v)\r\n            }\r\n            if gt(v, 0xffffffffffffffff) {\r\n                r := add(r, 64)\r\n                v := shr(64, v)\r\n            }\r\n            if gt(v, 0xffffffff) {\r\n                r := add(r, 32)\r\n                v := shr(32, v)\r\n            }\r\n            if gt(v, 0xffff) {\r\n                r := add(r, 16)\r\n                v := shr(16, v)\r\n            }\r\n            if gt(v, 0xff) {\r\n                r := add(r, 8)\r\n                v := shr(8, v)\r\n            }\r\n            if gt(v, 0xf) {\r\n                r := add(r, 4)\r\n                v := shr(4, v)\r\n            }\r\n            if gt(v, 0x3) {\r\n                r := add(r, 2)\r\n                v := shr(2, v)\r\n            }\r\n            if gt(v, 0x1) {\r\n                r := add(r, 1)\r\n            }\r\n        }\r\n    }\r\n}\r\n"},"contracts/PredictiveLiquidityManagerFinal.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.7.6;\r\npragma abicoder v2; // اضافه کردن این خط برای پشتیبانی از struct ها در پارامترها\r\n\r\n// OpenZeppelin ~3.4.0 Imports --- Updated Paths ---\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n// import \"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\"; // Not available in OZ 3.4, decimals usually called directly on IERC20\r\nimport \"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\"; // Path updated\r\nimport \"@openzeppelin/contracts/math/SafeMath.sol\"; // --- Added SafeMath ---\r\nimport \"@openzeppelin/contracts/utils/ReentrancyGuard.sol\"; // Path updated\r\n\r\n// Local Math Library (copied from OZ 4.x, made 0.7.6 compatible)\r\nimport \"./libraries/SqrtMath.sol\"; // --- Added Local Math Import ---\r\n\r\n// Uniswap V3 Core (نسخه 1.0.0)\r\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\";\r\nimport \"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\";\r\nimport \"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\";\r\nimport \"@uniswap/v3-core/contracts/libraries/TickMath.sol\";\r\n\r\n// Uniswap V3 Periphery (نسخه 1.4.3)\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\";\r\nimport \"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol\";\r\n// import \"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\"; // --- Removed Import ---\r\n\r\n// اضافه کردن این اینترفیس قبل از تعریف قرارداد اصلی\r\ninterface IERC20Decimals {\r\n    function decimals() external view returns (uint8);\r\n}\r\n\r\n// --- Contract Definition ---\r\ncontract PredictiveLiquidityManagerFinal is\r\n    Ownable,\r\n    ReentrancyGuard,\r\n    IUniswapV3MintCallback\r\n    // IPeripheryPayments  -- Removed inheritance\r\n{\r\n    using SafeERC20 for IERC20;\r\n    using SafeMath for uint256; // --- Using SafeMath for uint256 ---\r\n    // using Math for uint256; // Use local Math library directly where needed\r\n\r\n    // --- State Variables ---\r\n    IUniswapV3Factory public immutable factory;\r\n    INonfungiblePositionManager public immutable positionManager;\r\n    ISwapRouter public immutable swapRouter;\r\n    address public immutable token0;\r\n    address public immutable token1;\r\n    uint8 public immutable token0Decimals;\r\n    uint8 public immutable token1Decimals;\r\n    uint24 public immutable fee;\r\n    int24 public immutable tickSpacing;\r\n    address public immutable WETH9;\r\n\r\n    struct Position {\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        int24 tickLower;\r\n        int24 tickUpper;\r\n        bool active;\r\n    }\r\n    Position public currentPosition;\r\n\r\n    // Strategy Parameters\r\n    uint24 public rangeWidthMultiplier = 4;\r\n\r\n    // Swap Parameters Struct\r\n    struct SwapParams {\r\n        address tokenIn;\r\n        address tokenOut;\r\n        uint24 poolFee;\r\n        uint256 amountIn;\r\n        uint256 amountOutMinimum;\r\n        uint160 sqrtPriceLimitX96;\r\n    }\r\n\r\n    // ایونت‌های اصلی\r\n    event OperationReported(\r\n        uint256 actualPrice,\r\n        uint256 predictedPrice,\r\n        int24 currentTick,\r\n        int24 predictedTick,\r\n        bool adjusted,\r\n        uint256 gasUsed\r\n    );\r\n\r\n    event LiquidityAdjusted(\r\n        uint256 tokenId,\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint128 liquidity\r\n    );\r\n\r\n    event LiquidityRemoved(\r\n        uint256 indexed tokenId,\r\n        uint256 amount0,\r\n        uint256 amount1\r\n    );\r\n\r\n    event Swapped(\r\n        address indexed tokenIn,\r\n        address indexed tokenOut,\r\n        uint256 amountIn,\r\n        uint256 amountOut\r\n    );\r\n\r\n    event Deposited(\r\n        address indexed token,\r\n        address indexed sender,\r\n        uint256 amount\r\n    );\r\n\r\n    event Withdrawn(\r\n        address indexed token,\r\n        address indexed recipient,\r\n        uint256 amount\r\n    );\r\n\r\n    event LiquidityMintFailed(\r\n        uint256 amount0Desired,\r\n        uint256 amount1Desired,\r\n        string reason\r\n    );\r\n\r\n    event LiquidityRemoveFailed(uint256 indexed tokenId, string reason);\r\n\r\n    event StrategyParamUpdated(string paramName, uint256 newValue);\r\n\r\n    // ایونت جدید برای جمع‌آوری داده‌ها\r\n    event LiquidityManagementMetrics(\r\n        uint256 timestamp, // زمان عملیات\r\n        uint256 actualPrice, // قیمت واقعی\r\n        uint256 predictedPrice, // قیمت پیش‌بینی شده LSTM\r\n        int24 currentTick, // تیک فعلی\r\n        int24 predictedTick, // تیک پیش‌بینی شده\r\n        int24 tickLower, // تیک پایین محدوده نقدینگی\r\n        int24 tickUpper, // تیک بالای محدوده نقدینگی\r\n        uint128 liquidity, // مقدار نقدینگی\r\n        uint256 amount0, // مقدار توکن 0\r\n        uint256 amount1 // مقدار توکن 1\r\n    );\r\n\r\n    // --- Constructor ---\r\n    constructor(\r\n        address _factory,\r\n        address _positionManager,\r\n        address _swapRouter,\r\n        address _token0,\r\n        address _token1,\r\n        uint24 _fee,\r\n        address _weth9,\r\n        address _initialOwner\r\n    ) {\r\n        // ذخیره مقادیر در متغیرهای immutable\r\n        factory = IUniswapV3Factory(_factory);\r\n        positionManager = INonfungiblePositionManager(_positionManager);\r\n        swapRouter = ISwapRouter(_swapRouter);\r\n        token0 = _token0;\r\n        token1 = _token1;\r\n        fee = _fee;\r\n        WETH9 = _weth9;\r\n\r\n        // بررسی decimals با استفاده از try-catch\r\n        try IERC20Decimals(_token0).decimals() returns (uint8 _decimals) {\r\n            token0Decimals = _decimals;\r\n        } catch {\r\n            revert(\"Token0 does not support decimals()\");\r\n        }\r\n\r\n        try IERC20Decimals(_token1).decimals() returns (uint8 _decimals) {\r\n            token1Decimals = _decimals;\r\n        } catch {\r\n            revert(\"Token1 does not support decimals()\");\r\n        }\r\n\r\n        // ذخیره tickSpacing در یک متغیر موقت\r\n        address poolAddress = IUniswapV3Factory(_factory).getPool(\r\n            _token0,\r\n            _token1,\r\n            _fee\r\n        );\r\n        require(poolAddress != address(0), \"Pool does not exist\");\r\n        tickSpacing = IUniswapV3Pool(poolAddress).tickSpacing();\r\n\r\n        // تنظیم مجوزها با استفاده از آدرس‌های ورودی به جای متغیرهای immutable\r\n        IERC20(_token0).safeApprove(\r\n            address(_positionManager),\r\n            type(uint256).max\r\n        );\r\n        IERC20(_token1).safeApprove(\r\n            address(_positionManager),\r\n            type(uint256).max\r\n        );\r\n        IERC20(_token0).safeApprove(address(_swapRouter), type(uint256).max);\r\n        IERC20(_token1).safeApprove(address(_swapRouter), type(uint256).max);\r\n\r\n        if (_weth9 != address(0)) {\r\n            IERC20(_weth9).safeApprove(\r\n                address(_positionManager),\r\n                type(uint256).max\r\n            );\r\n            IERC20(_weth9).safeApprove(address(_swapRouter), type(uint256).max);\r\n        }\r\n\r\n        if (_initialOwner != address(0)) {\r\n            transferOwnership(_initialOwner);\r\n        }\r\n    }\r\n\r\n    // --- Automated Liquidity Management (Owner Only) ---\r\n    function updatePredictionAndAdjust(\r\n        uint256 predictedPriceDecimal\r\n    ) external nonReentrant onlyOwner {\r\n        uint256 gasStart = gasleft();\r\n        bool adjusted = false;\r\n\r\n        // دریافت اطلاعات قیمت و تیک فعلی\r\n        (\r\n            uint160 sqrtPriceX96,\r\n            int24 currentTick\r\n        ) = _getCurrentSqrtPriceAndTick();\r\n        uint256 currentPriceDecimal = _sqrtPriceX96ToPrice(sqrtPriceX96);\r\n        int24 predictedTick = _priceToTick(predictedPriceDecimal);\r\n\r\n        // محاسبه موقعیت جدید\r\n        (int24 targetTickLower, int24 targetTickUpper) = _calculateTicks(\r\n            predictedTick\r\n        );\r\n\r\n        // بروزرسانی موقعیت در صورت نیاز\r\n        if (\r\n            !currentPosition.active ||\r\n            targetTickLower != currentPosition.tickLower ||\r\n            targetTickUpper != currentPosition.tickUpper\r\n        ) {\r\n            _adjustLiquidity(targetTickLower, targetTickUpper);\r\n            adjusted = true;\r\n        }\r\n\r\n        // ارسال داده‌ها برای گزارش عملیاتی\r\n        emit OperationReported(\r\n            currentPriceDecimal,\r\n            predictedPriceDecimal,\r\n            currentTick,\r\n            predictedTick,\r\n            adjusted,\r\n            gasStart - gasleft()\r\n        );\r\n\r\n        // ارسال داده‌ها برای تحلیل\r\n        emit LiquidityManagementMetrics(\r\n            block.timestamp,\r\n            currentPriceDecimal,\r\n            predictedPriceDecimal,\r\n            currentTick,\r\n            predictedTick,\r\n            currentPosition.tickLower,\r\n            currentPosition.tickUpper,\r\n            currentPosition.liquidity,\r\n            IERC20(token0).balanceOf(address(this)),\r\n            IERC20(token1).balanceOf(address(this))\r\n        );\r\n    }\r\n\r\n    function swap(\r\n        SwapParams calldata params\r\n    ) external nonReentrant onlyOwner returns (uint256 amountOut) {\r\n        require(\r\n            params.tokenIn == token0 || params.tokenIn == token1,\r\n            \"Invalid tokenIn\"\r\n        );\r\n        require(\r\n            params.tokenOut == token0 || params.tokenOut == token1,\r\n            \"Invalid tokenOut\"\r\n        );\r\n\r\n        // انتقال توکن‌ها\r\n        IERC20(params.tokenIn).safeTransferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            params.amountIn\r\n        );\r\n        IERC20(params.tokenIn).safeApprove(\r\n            address(swapRouter),\r\n            params.amountIn\r\n        );\r\n\r\n        // انجام سواپ\r\n        ISwapRouter.ExactInputSingleParams memory swapParams = ISwapRouter\r\n            .ExactInputSingleParams({\r\n                tokenIn: params.tokenIn,\r\n                tokenOut: params.tokenOut,\r\n                fee: params.poolFee,\r\n                recipient: address(this),\r\n                deadline: block.timestamp,\r\n                amountIn: params.amountIn,\r\n                amountOutMinimum: params.amountOutMinimum,\r\n                sqrtPriceLimitX96: params.sqrtPriceLimitX96\r\n            });\r\n\r\n        amountOut = swapRouter.exactInputSingle(swapParams);\r\n        emit Swapped(\r\n            params.tokenIn,\r\n            params.tokenOut,\r\n            params.amountIn,\r\n            amountOut\r\n        );\r\n\r\n        // ریست تأییدیه\r\n        IERC20(params.tokenIn).safeApprove(address(swapRouter), 0);\r\n\r\n        return amountOut;\r\n    }\r\n\r\n    // --- Internal Liquidity Management Helpers ---\r\n    function _adjustLiquidity(int24 tickLower, int24 tickUpper) internal {\r\n        if (currentPosition.active) {\r\n            _removeLiquidity();\r\n        }\r\n        uint256 balance0 = IERC20(token0).balanceOf(address(this));\r\n        uint256 balance1 = IERC20(token1).balanceOf(address(this));\r\n        if (balance0 > 0 || balance1 > 0) {\r\n            _mintLiquidity(tickLower, tickUpper, balance0, balance1);\r\n        } else {\r\n            currentPosition.active = false;\r\n            currentPosition.tokenId = 0;\r\n            currentPosition.liquidity = 0;\r\n        }\r\n    }\r\n\r\n    function _removeLiquidity() internal {\r\n        require(\r\n            currentPosition.active && currentPosition.tokenId != 0,\r\n            \"No active position\"\r\n        );\r\n        uint256 currentTokenId = currentPosition.tokenId;\r\n        uint128 currentLiquidity = currentPosition.liquidity;\r\n\r\n        // پاک کردن وضعیت قبل از فراخوانی خارجی\r\n        currentPosition.active = false;\r\n        uint256 _tokenId = currentPosition.tokenId;\r\n        currentPosition.tokenId = 0;\r\n        currentPosition.liquidity = 0;\r\n        currentPosition.tickLower = 0;\r\n        currentPosition.tickUpper = 0;\r\n\r\n        bool decreased = false;\r\n        bool collected = false;\r\n        string memory errorMsg = \"\";\r\n\r\n        // کاهش نقدینگی\r\n        if (currentLiquidity > 0) {\r\n            try\r\n                positionManager.decreaseLiquidity(\r\n                    INonfungiblePositionManager.DecreaseLiquidityParams({\r\n                        tokenId: _tokenId,\r\n                        liquidity: currentLiquidity,\r\n                        amount0Min: 0,\r\n                        amount1Min: 0,\r\n                        deadline: block.timestamp\r\n                    })\r\n                )\r\n            {\r\n                decreased = true;\r\n            } catch Error(string memory reason) {\r\n                errorMsg = reason;\r\n            } catch {\r\n                errorMsg = \"Decrease failed\";\r\n            }\r\n        } else {\r\n            decreased = true;\r\n        }\r\n\r\n        // جمع‌آوری توکن‌ها\r\n        (uint256 amount0, uint256 amount1) = (0, 0);\r\n        try\r\n            positionManager.collect(\r\n                INonfungiblePositionManager.CollectParams({\r\n                    tokenId: _tokenId,\r\n                    recipient: address(this),\r\n                    amount0Max: type(uint128).max,\r\n                    amount1Max: type(uint128).max\r\n                })\r\n            )\r\n        returns (uint256 a0, uint256 a1) {\r\n            (amount0, amount1) = (a0, a1);\r\n            collected = true;\r\n        } catch Error(string memory reason) {\r\n            if (bytes(errorMsg).length == 0) errorMsg = reason;\r\n        } catch {\r\n            if (bytes(errorMsg).length == 0) errorMsg = \"Collect failed\";\r\n        }\r\n\r\n        // سوزاندن NFT\r\n        if (decreased) {\r\n            try positionManager.burn(_tokenId) {} catch {}\r\n        }\r\n\r\n        if (!decreased || !collected) {\r\n            emit LiquidityRemoveFailed(_tokenId, errorMsg);\r\n        }\r\n\r\n        emit LiquidityRemoved(_tokenId, amount0, amount1);\r\n    }\r\n\r\n    function _mintLiquidity(\r\n        int24 tickLower,\r\n        int24 tickUpper,\r\n        uint256 amount0Desired,\r\n        uint256 amount1Desired\r\n    ) internal {\r\n        require(!currentPosition.active, \"Position already active\");\r\n\r\n        INonfungiblePositionManager.MintParams\r\n            memory params = INonfungiblePositionManager.MintParams({\r\n                token0: token0,\r\n                token1: token1,\r\n                fee: fee,\r\n                tickLower: tickLower,\r\n                tickUpper: tickUpper,\r\n                amount0Desired: amount0Desired,\r\n                amount1Desired: amount1Desired,\r\n                amount0Min: 0,\r\n                amount1Min: 0,\r\n                recipient: address(this),\r\n                deadline: block.timestamp\r\n            });\r\n\r\n        uint256 tokenId;\r\n        uint128 liquidity;\r\n        uint256 amount0Actual;\r\n        uint256 amount1Actual;\r\n\r\n        try positionManager.mint(params) returns (\r\n            uint256 _tokenId,\r\n            uint128 _liquidity,\r\n            uint256 _amount0,\r\n            uint256 _amount1\r\n        ) {\r\n            tokenId = _tokenId;\r\n            liquidity = _liquidity;\r\n            amount0Actual = _amount0;\r\n            amount1Actual = _amount1;\r\n\r\n            if (liquidity > 0) {\r\n                currentPosition = Position(\r\n                    tokenId,\r\n                    liquidity,\r\n                    tickLower,\r\n                    tickUpper,\r\n                    true\r\n                );\r\n                emit LiquidityAdjusted(\r\n                    tokenId,\r\n                    tickLower,\r\n                    tickUpper,\r\n                    liquidity\r\n                );\r\n            } else {\r\n                try positionManager.burn(tokenId) {} catch {}\r\n                emit LiquidityMintFailed(\r\n                    amount0Desired,\r\n                    amount1Desired,\r\n                    \"Zero liquidity minted\"\r\n                );\r\n            }\r\n        } catch Error(string memory reason) {\r\n            emit LiquidityMintFailed(amount0Desired, amount1Desired, reason);\r\n        } catch {\r\n            emit LiquidityMintFailed(\r\n                amount0Desired,\r\n                amount1Desired,\r\n                \"Unknown mint error\"\r\n            );\r\n        }\r\n    }\r\n\r\n    // --- Internal Calculation Helpers ---\r\n    function _calculateTicks(\r\n        int24 targetCenterTick\r\n    ) internal view returns (int24 tickLower, int24 tickUpper) {\r\n        int24 halfWidth = tickSpacing * int24(rangeWidthMultiplier);\r\n\r\n        tickLower = (targetCenterTick / tickSpacing) * tickSpacing - halfWidth;\r\n        tickUpper = (targetCenterTick / tickSpacing) * tickSpacing + halfWidth;\r\n\r\n        if (tickLower < TickMath.MIN_TICK) tickLower = TickMath.MIN_TICK;\r\n        if (tickUpper > TickMath.MAX_TICK) tickUpper = TickMath.MAX_TICK;\r\n    }\r\n\r\n    function _getCurrentSqrtPriceAndTick()\r\n        internal\r\n        view\r\n        returns (uint160 sqrtPriceX96, int24 tick)\r\n    {\r\n        address poolAddress = factory.getPool(token0, token1, fee);\r\n        require(poolAddress != address(0), \"Pool doesn't exist\");\r\n        (sqrtPriceX96, tick, , , , , ) = IUniswapV3Pool(poolAddress).slot0();\r\n    }\r\n\r\n    function _priceToTick(uint256 priceDecimal) internal view returns (int24) {\r\n        uint256 priceForSqrt;\r\n        if (token1Decimals >= token0Decimals) {\r\n            uint256 factor = 10 **\r\n                (uint256(token1Decimals).sub(uint256(token0Decimals)));\r\n            priceForSqrt = priceDecimal.div(factor);\r\n        } else {\r\n            uint256 factor = 10 **\r\n                (uint256(token0Decimals).sub(uint256(token1Decimals)));\r\n            priceForSqrt = priceDecimal.mul(factor);\r\n        }\r\n\r\n        uint160 sqrtPriceX96 = uint160(\r\n            SqrtMath.sqrt(priceForSqrt).mul(2 ** 96)\r\n        );\r\n        return TickMath.getTickAtSqrtRatio(sqrtPriceX96);\r\n    }\r\n\r\n    function _sqrtPriceX96ToPrice(\r\n        uint160 sqrtPriceX96\r\n    ) internal view returns (uint256 priceDecimal) {\r\n        uint256 ratioX192 = uint256(sqrtPriceX96).mul(uint256(sqrtPriceX96));\r\n        uint256 priceUnadjusted = ratioX192 >> 192;\r\n\r\n        if (token1Decimals >= token0Decimals) {\r\n            uint256 factor = 10 **\r\n                (uint256(token1Decimals).sub(uint256(token0Decimals)));\r\n            priceDecimal = priceUnadjusted.mul(factor);\r\n        } else {\r\n            uint256 factor = 10 **\r\n                (uint256(token0Decimals).sub(uint256(token1Decimals)));\r\n            priceDecimal = priceUnadjusted.div(factor);\r\n        }\r\n    }\r\n\r\n    // --- Emit Event ---\r\n    function _emitOperationReported(\r\n        uint256 _actualPrice,\r\n        uint256 _predictedPrice,\r\n        int24 _currentTick,\r\n        int24 _predictedTick,\r\n        bool _adjusted,\r\n        uint256 _gasUsed\r\n    ) internal {\r\n        emit OperationReported(\r\n            _actualPrice,\r\n            _predictedPrice,\r\n            _currentTick,\r\n            _predictedTick,\r\n            _adjusted,\r\n            _gasUsed\r\n        );\r\n    }\r\n\r\n    // --- Uniswap V3 Mint Callback ---\r\n    function uniswapV3MintCallback(\r\n        uint256 amount0Owed,\r\n        uint256 amount1Owed,\r\n        bytes calldata /* data */\r\n    ) external override {\r\n        require(\r\n            msg.sender == address(positionManager),\r\n            \"Callback sender mismatch\"\r\n        );\r\n\r\n        if (amount0Owed > 0) {\r\n            IERC20(token0).safeTransfer(msg.sender, amount0Owed);\r\n        }\r\n        if (amount1Owed > 0) {\r\n            IERC20(token1).safeTransfer(msg.sender, amount1Owed);\r\n        }\r\n    }\r\n\r\n    // --- Payments Functions ---\r\n    receive() external payable {} // Keep payable receive\r\n\r\n    function refundETH() external payable {\r\n        require(address(this).balance > 0, \"No ETH to refund\");\r\n        payable(msg.sender).transfer(address(this).balance);\r\n    }\r\n\r\n    function sweepToken(\r\n        address token,\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) external payable onlyOwner {\r\n        require(recipient != address(0), \"Invalid recipient\");\r\n        uint256 balance = IERC20(token).balanceOf(address(this));\r\n        require(balance >= amountMinimum, \"Insufficient balance\");\r\n        IERC20(token).safeTransfer(recipient, balance);\r\n    }\r\n\r\n    function unwrapWETH9(\r\n        uint256 amountMinimum,\r\n        address recipient\r\n    ) external payable {\r\n        require(WETH9 != address(0), \"WETH9 not set\");\r\n        require(recipient != address(0), \"Invalid recipient\");\r\n        uint256 balance = IWETH9(WETH9).balanceOf(address(this));\r\n        require(balance >= amountMinimum, \"Insufficient WETH\");\r\n        IWETH9(WETH9).withdraw(balance);\r\n        payable(recipient).transfer(balance);\r\n    }\r\n\r\n    // --- Token Handling (Owner Only) ---\r\n    function depositToken(\r\n        address _token,\r\n        uint256 _amount\r\n    ) external nonReentrant onlyOwner {\r\n        require(\r\n            _token == token0 ||\r\n                _token == token1 ||\r\n                (_token == WETH9 && WETH9 != address(0)), // Allow WETH9 deposit only if set\r\n            \"Invalid deposit token\"\r\n        );\r\n        require(_amount > 0, \"Deposit amount zero\");\r\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\r\n        emit Deposited(_token, msg.sender, _amount);\r\n    }\r\n\r\n    function depositETH() external payable nonReentrant onlyOwner {\r\n        require(WETH9 != address(0), \"WETH9 address not set\");\r\n        require(msg.value > 0, \"Deposit ETH value zero\");\r\n        // Wrap received ETH into WETH9\r\n        IWETH9(WETH9).deposit{value: msg.value}();\r\n        emit Deposited(WETH9, msg.sender, msg.value); // Emit WETH9 address\r\n    }\r\n\r\n    function withdrawToken(\r\n        address _token,\r\n        uint256 _amount,\r\n        address _recipient\r\n    ) external nonReentrant onlyOwner {\r\n        require(_recipient != address(0), \"Invalid recipient address\");\r\n        require(_amount > 0, \"Withdraw amount zero\");\r\n        // Check sufficient balance before transfer\r\n        require(\r\n            IERC20(_token).balanceOf(address(this)) >= _amount,\r\n            \"Insufficient balance\"\r\n        );\r\n        IERC20(_token).safeTransfer(_recipient, _amount);\r\n        emit Withdrawn(_token, _recipient, _amount);\r\n    }\r\n\r\n    function withdrawETH(\r\n        uint256 _amount,\r\n        address payable _recipient // Use address payable directly\r\n    ) external nonReentrant onlyOwner {\r\n        require(WETH9 != address(0), \"WETH9 address not set\");\r\n        require(_recipient != address(0), \"Invalid recipient address\");\r\n        require(_amount > 0, \"Withdraw amount zero\");\r\n        // Check sufficient WETH balance before unwrapping\r\n        require(\r\n            IWETH9(WETH9).balanceOf(address(this)) >= _amount,\r\n            \"Insufficient WETH balance\"\r\n        );\r\n\r\n        // Unwrap WETH9 to ETH\r\n        IWETH9(WETH9).withdraw(_amount);\r\n        // Transfer ETH to recipient\r\n        _recipient.transfer(_amount); // Use transfer or low-level call\r\n        emit Withdrawn(WETH9, _recipient, _amount); // Emit WETH9 address\r\n    }\r\n\r\n    // --- Strategy Parameter Adjustment ---\r\n    function setRangeWidthMultiplier(uint24 _multiplier) external onlyOwner {\r\n        require(_multiplier > 0 && _multiplier <= 100, \"Invalid multiplier\");\r\n        rangeWidthMultiplier = _multiplier;\r\n        emit StrategyParamUpdated(\"rangeWidthMultiplier\", _multiplier);\r\n    }\r\n\r\n    // --- View Functions (Remain mostly the same) ---\r\n    function getActivePositionDetails()\r\n        external\r\n        view\r\n        returns (\r\n            uint256 tokenId,\r\n            uint128 liquidity,\r\n            int24 tickLower,\r\n            int24 tickUpper,\r\n            bool active\r\n        )\r\n    {\r\n        return (\r\n            currentPosition.tokenId,\r\n            currentPosition.liquidity,\r\n            currentPosition.tickLower,\r\n            currentPosition.tickUpper,\r\n            currentPosition.active\r\n        );\r\n    }\r\n\r\n    function getContractBalances()\r\n        external\r\n        view\r\n        returns (uint256 balance0, uint256 balance1, uint256 balanceWETH)\r\n    {\r\n        balance0 = IERC20(token0).balanceOf(address(this));\r\n        balance1 = IERC20(token1).balanceOf(address(this));\r\n        balanceWETH = WETH9 != address(0)\r\n            ? IERC20(WETH9).balanceOf(address(this))\r\n            : 0;\r\n    }\r\n\r\n    function getPoolAddress() external view returns (address) {\r\n        return factory.getPool(token0, token1, fee);\r\n    }\r\n\r\n    // Helper to check absolute value for decimals difference\r\n    function abs(int256 x) private pure returns (uint256) {\r\n        return uint256(x >= 0 ? x : -x);\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata","devdoc","userdoc","storageLayout","evm.gasEstimates"],"":["ast"]}},"metadata":{"useLiteralContent":true}}},"output":{"errors":[{"component":"general","errorCode":"2319","formattedMessage":"contracts/libraries/SqrtMath.sol:82:5: Warning: This declaration shadows a builtin symbol.\n    function log2(uint256 x) internal pure returns (uint256 r) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"This declaration shadows a builtin symbol.","severity":"warning","sourceLocation":{"end":4341,"file":"contracts/libraries/SqrtMath.sol","start":3253},"type":"Warning"},{"component":"general","errorCode":"8261","formattedMessage":"contracts/libraries/SqrtMath.sol:82:5: Warning: Variable is shadowed in inline assembly by an instruction of the same name\n    function log2(uint256 x) internal pure returns (uint256 r) {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Variable is shadowed in inline assembly by an instruction of the same name","severity":"warning","sourceLocation":{"end":4341,"file":"contracts/libraries/SqrtMath.sol","start":3253},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@openzeppelin/contracts/access/Ownable.sol:26:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":1009,"file":"@openzeppelin/contracts/access/Ownable.sol","start":850},"type":"Warning"},{"component":"general","errorCode":"2462","formattedMessage":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:38:5: Warning: Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.\n    constructor () internal {\n    ^ (Relevant source part starts here and spans across multiple lines).\n","message":"Visibility for constructor is ignored. If you want the contract to be non-deployable, making it \"abstract\" is sufficient.","severity":"warning","sourceLocation":{"end":1789,"file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","start":1726},"type":"Warning"},{"component":"general","errorCode":"2072","formattedMessage":"contracts/PredictiveLiquidityManagerFinal.sol:337:9: Warning: Unused local variable.\n        uint256 currentTokenId = currentPosition.tokenId;\n        ^--------------------^\n","message":"Unused local variable.","severity":"warning","sourceLocation":{"end":11745,"file":"contracts/PredictiveLiquidityManagerFinal.sol","start":11723},"type":"Warning"}],"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1260],"Ownable":[109]},"id":110,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nodeType":"ImportDirective","scope":110,"sourceUnit":1261,"src":"66:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nodeType":"UserDefinedTypeName","referencedDeclaration":1260,"src":"621:7:0","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1260","typeString":"contract Context"}},"id":5,"nodeType":"InheritanceSpecifier","src":"621:7:0"}],"contractDependencies":[1260],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"97:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":109,"linearizedBaseContracts":[109,1260],"name":"Ownable","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":109,"src":"635:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"635:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":13,"name":"OwnershipTransferred","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nodeType":"VariableDeclaration","scope":13,"src":"691:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"691:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":13,"src":"722:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"722:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"690:57:0"},"src":"664:84:0"},{"body":{"id":34,"nodeType":"Block","src":"874:135:0","statements":[{"assignments":[18],"declarations":[{"constant":false,"id":18,"mutability":"mutable","name":"msgSender","nodeType":"VariableDeclaration","scope":34,"src":"884:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":17,"name":"address","nodeType":"ElementaryTypeName","src":"884:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":21,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":19,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"904:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"904:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"VariableDeclarationStatement","src":"884:32:0"},{"expression":{"id":24,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":22,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"926:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":23,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"935:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"926:18:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":25,"nodeType":"ExpressionStatement","src":"926:18:0"},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":29,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"988:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":28,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"980:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":27,"name":"address","nodeType":"ElementaryTypeName","src":"980:7:0","typeDescriptions":{}}},"id":30,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"980:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":31,"name":"msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":18,"src":"992:9:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address","typeString":"address"}],"id":26,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"959:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":32,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"959:43:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":33,"nodeType":"EmitStatement","src":"954:48:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"754:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":35,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"862:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"874:0:0"},"scope":109,"src":"850:159:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":43,"nodeType":"Block","src":"1140:30:0","statements":[{"expression":{"id":41,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1157:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":40,"id":42,"nodeType":"Return","src":"1150:13:0"}]},"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"1015:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":44,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":37,"nodeType":"ParameterList","parameters":[],"src":"1099:2:0"},"returnParameters":{"id":40,"nodeType":"ParameterList","parameters":[{"constant":false,"id":39,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":44,"src":"1131:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":38,"name":"address","nodeType":"ElementaryTypeName","src":"1131:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1130:9:0"},"scope":109,"src":"1085:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":57,"nodeType":"Block","src":"1279:96:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":48,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":44,"src":"1297:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1297:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":50,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"1308:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_payable_$","typeString":"function () view returns (address payable)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1308:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1297:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":53,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1322:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":47,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1289:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1289:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":55,"nodeType":"ExpressionStatement","src":"1289:68:0"},{"id":56,"nodeType":"PlaceholderStatement","src":"1367:1:0"}]},"documentation":{"id":45,"nodeType":"StructuredDocumentation","src":"1176:77:0","text":" @dev Throws if called by any account other than the owner."},"id":58,"name":"onlyOwner","nodeType":"ModifierDefinition","parameters":{"id":46,"nodeType":"ParameterList","parameters":[],"src":"1276:2:0"},"src":"1258:117:0","virtual":false,"visibility":"internal"},{"body":{"id":79,"nodeType":"Block","src":"1771:91:0","statements":[{"eventCall":{"arguments":[{"id":65,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1807:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":68,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1823:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":67,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1815:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":66,"name":"address","nodeType":"ElementaryTypeName","src":"1815:7:0","typeDescriptions":{}}},"id":69,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1815:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":64,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"1786:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":70,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1786:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":71,"nodeType":"EmitStatement","src":"1781:45:0"},{"expression":{"id":77,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":72,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1836:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"30","id":75,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1853:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":74,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1845:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":73,"name":"address","nodeType":"ElementaryTypeName","src":"1845:7:0","typeDescriptions":{}}},"id":76,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1845:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1836:19:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":78,"nodeType":"ExpressionStatement","src":"1836:19:0"}]},"documentation":{"id":59,"nodeType":"StructuredDocumentation","src":"1381:331:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":80,"implemented":true,"kind":"function","modifiers":[{"id":62,"modifierName":{"id":61,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"1761:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"1761:9:0"}],"name":"renounceOwnership","nodeType":"FunctionDefinition","parameters":{"id":60,"nodeType":"ParameterList","parameters":[],"src":"1743:2:0"},"returnParameters":{"id":63,"nodeType":"ParameterList","parameters":[],"src":"1771:0:0"},"scope":109,"src":"1717:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":107,"nodeType":"Block","src":"2081:170:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":94,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":89,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2099:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":92,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2119:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":91,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2111:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":90,"name":"address","nodeType":"ElementaryTypeName","src":"2111:7:0","typeDescriptions":{}}},"id":93,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2111:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"2099:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":95,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2123:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":88,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2091:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":96,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2091:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":97,"nodeType":"ExpressionStatement","src":"2091:73:0"},{"eventCall":{"arguments":[{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2200:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":100,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2208:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":98,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2179:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2179:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":102,"nodeType":"EmitStatement","src":"2174:43:0"},{"expression":{"id":105,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":103,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2227:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":104,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":83,"src":"2236:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2227:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":106,"nodeType":"ExpressionStatement","src":"2227:17:0"}]},"documentation":{"id":81,"nodeType":"StructuredDocumentation","src":"1868:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":108,"implemented":true,"kind":"function","modifiers":[{"id":86,"modifierName":{"id":85,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"2071:9:0","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"2071:9:0"}],"name":"transferOwnership","nodeType":"FunctionDefinition","parameters":{"id":84,"nodeType":"ParameterList","parameters":[{"constant":false,"id":83,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":108,"src":"2038:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":82,"name":"address","nodeType":"ElementaryTypeName","src":"2038:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2037:18:0"},"returnParameters":{"id":87,"nodeType":"ParameterList","parameters":[],"src":"2081:0:0"},"scope":109,"src":"2011:240:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"}],"scope":110,"src":"592:1661:0"}],"src":"33:2221:0"},"id":0},"@openzeppelin/contracts/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/introspection/IERC165.sol","exportedSymbols":{"IERC165":[121]},"id":122,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":111,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:1"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":112,"nodeType":"StructuredDocumentation","src":"66:279:1","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":121,"linearizedBaseContracts":[121],"name":"IERC165","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":113,"nodeType":"StructuredDocumentation","src":"370:340:1","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":120,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[{"constant":false,"id":115,"mutability":"mutable","name":"interfaceId","nodeType":"VariableDeclaration","scope":120,"src":"742:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":114,"name":"bytes4","nodeType":"ElementaryTypeName","src":"742:6:1","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"741:20:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":120,"src":"785:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":117,"name":"bool","nodeType":"ElementaryTypeName","src":"785:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"784:6:1"},"scope":121,"src":"715:76:1","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":122,"src":"346:447:1"}],"src":"33:761:1"},"id":1},"@openzeppelin/contracts/math/SafeMath.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","exportedSymbols":{"SafeMath":[476]},"id":477,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":123,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:2"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":124,"nodeType":"StructuredDocumentation","src":"66:563:2","text":" @dev Wrappers over Solidity's arithmetic operations with added overflow\n checks.\n Arithmetic operations in Solidity wrap on overflow. This can easily result\n in bugs, because programmers usually assume that an overflow raises an\n error, which is the standard behavior in high level programming languages.\n `SafeMath` restores this intuition by reverting the transaction when an\n operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."},"fullyImplemented":true,"id":476,"linearizedBaseContracts":[476],"name":"SafeMath","nodeType":"ContractDefinition","nodes":[{"body":{"id":154,"nodeType":"Block","src":"865:98:2","statements":[{"assignments":[137],"declarations":[{"constant":false,"id":137,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":154,"src":"875:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":136,"name":"uint256","nodeType":"ElementaryTypeName","src":"875:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":141,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":140,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":138,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"887:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":139,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":129,"src":"891:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"887:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"875:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":142,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"906:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":143,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":127,"src":"910:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"906:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":149,"nodeType":"IfStatement","src":"902:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"921:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":146,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"928:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":147,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"920:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":135,"id":148,"nodeType":"Return","src":"913:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":150,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"948:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":151,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":137,"src":"954:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":152,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"947:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":135,"id":153,"nodeType":"Return","src":"940:16:2"}]},"documentation":{"id":125,"nodeType":"StructuredDocumentation","src":"653:131:2","text":" @dev Returns the addition of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":155,"implemented":true,"kind":"function","modifiers":[],"name":"tryAdd","nodeType":"FunctionDefinition","parameters":{"id":130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":155,"src":"805:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":126,"name":"uint256","nodeType":"ElementaryTypeName","src":"805:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":129,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":155,"src":"816:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":128,"name":"uint256","nodeType":"ElementaryTypeName","src":"816:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"804:22:2"},"returnParameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":132,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":155,"src":"850:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":131,"name":"bool","nodeType":"ElementaryTypeName","src":"850:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":134,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":155,"src":"856:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":133,"name":"uint256","nodeType":"ElementaryTypeName","src":"856:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"849:15:2"},"scope":476,"src":"789:174:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":181,"nodeType":"Block","src":"1185:75:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":167,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1199:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":168,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1203:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1199:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":174,"nodeType":"IfStatement","src":"1195:28:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":170,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1214:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":171,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1221:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":172,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1213:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":166,"id":173,"nodeType":"Return","src":"1206:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1241:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":176,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":158,"src":"1247:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":177,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":160,"src":"1251:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1247:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":179,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1240:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":166,"id":180,"nodeType":"Return","src":"1233:20:2"}]},"documentation":{"id":156,"nodeType":"StructuredDocumentation","src":"969:135:2","text":" @dev Returns the substraction of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":182,"implemented":true,"kind":"function","modifiers":[],"name":"trySub","nodeType":"FunctionDefinition","parameters":{"id":161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":158,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":182,"src":"1125:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":157,"name":"uint256","nodeType":"ElementaryTypeName","src":"1125:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":160,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":182,"src":"1136:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":159,"name":"uint256","nodeType":"ElementaryTypeName","src":"1136:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1124:22:2"},"returnParameters":{"id":166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":163,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":182,"src":"1170:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":162,"name":"bool","nodeType":"ElementaryTypeName","src":"1170:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":165,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":182,"src":"1176:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":164,"name":"uint256","nodeType":"ElementaryTypeName","src":"1176:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1169:15:2"},"scope":476,"src":"1109:151:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":222,"nodeType":"Block","src":"1484:359:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":194,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"1716:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1716:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":201,"nodeType":"IfStatement","src":"1712:28:2","trueBody":{"expression":{"components":[{"hexValue":"74727565","id":197,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1732:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"hexValue":"30","id":198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1738:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":199,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1731:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":193,"id":200,"nodeType":"Return","src":"1724:16:2"}},{"assignments":[203],"declarations":[{"constant":false,"id":203,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":222,"src":"1750:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":202,"name":"uint256","nodeType":"ElementaryTypeName","src":"1750:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":207,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":204,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"1762:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":205,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1766:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1762:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1750:17:2"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":208,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"1781:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":209,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":185,"src":"1785:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":211,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":187,"src":"1790:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1781:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":217,"nodeType":"IfStatement","src":"1777:33:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1801:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":215,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"1800:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":193,"id":216,"nodeType":"Return","src":"1793:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":218,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1828:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":219,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":203,"src":"1834:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":220,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1827:9:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":193,"id":221,"nodeType":"Return","src":"1820:16:2"}]},"documentation":{"id":183,"nodeType":"StructuredDocumentation","src":"1266:137:2","text":" @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n _Available since v3.4._"},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"tryMul","nodeType":"FunctionDefinition","parameters":{"id":188,"nodeType":"ParameterList","parameters":[{"constant":false,"id":185,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":223,"src":"1424:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":184,"name":"uint256","nodeType":"ElementaryTypeName","src":"1424:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":187,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":223,"src":"1435:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":186,"name":"uint256","nodeType":"ElementaryTypeName","src":"1435:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1423:22:2"},"returnParameters":{"id":193,"nodeType":"ParameterList","parameters":[{"constant":false,"id":190,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":223,"src":"1469:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":189,"name":"bool","nodeType":"ElementaryTypeName","src":"1469:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":192,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":223,"src":"1475:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":191,"name":"uint256","nodeType":"ElementaryTypeName","src":"1475:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1468:15:2"},"scope":476,"src":"1408:435:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":249,"nodeType":"Block","src":"2068:76:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":235,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2082:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2087:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2082:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":242,"nodeType":"IfStatement","src":"2078:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":238,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2098:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2105:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":240,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2097:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":234,"id":241,"nodeType":"Return","src":"2090:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":243,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2125:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":244,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"2131:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":245,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"2135:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2131:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":247,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2124:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":234,"id":248,"nodeType":"Return","src":"2117:20:2"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"1849:138:2","text":" @dev Returns the division of two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":250,"implemented":true,"kind":"function","modifiers":[],"name":"tryDiv","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":250,"src":"2008:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":225,"name":"uint256","nodeType":"ElementaryTypeName","src":"2008:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":250,"src":"2019:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":227,"name":"uint256","nodeType":"ElementaryTypeName","src":"2019:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2007:22:2"},"returnParameters":{"id":234,"nodeType":"ParameterList","parameters":[{"constant":false,"id":231,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":250,"src":"2053:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":230,"name":"bool","nodeType":"ElementaryTypeName","src":"2053:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":233,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":250,"src":"2059:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":232,"name":"uint256","nodeType":"ElementaryTypeName","src":"2059:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2052:15:2"},"scope":476,"src":"1992:152:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":276,"nodeType":"Block","src":"2379:76:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":264,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":262,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2393:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":263,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2398:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2393:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":269,"nodeType":"IfStatement","src":"2389:29:2","trueBody":{"expression":{"components":[{"hexValue":"66616c7365","id":265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2409:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},{"hexValue":"30","id":266,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2416:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":267,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"2408:10:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_rational_0_by_1_$","typeString":"tuple(bool,int_const 0)"}},"functionReturnParameters":261,"id":268,"nodeType":"Return","src":"2401:17:2"}},{"expression":{"components":[{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2436:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":273,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":271,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":253,"src":"2442:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":272,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2446:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2442:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":274,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2435:13:2","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":261,"id":275,"nodeType":"Return","src":"2428:20:2"}]},"documentation":{"id":251,"nodeType":"StructuredDocumentation","src":"2150:148:2","text":" @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n _Available since v3.4._"},"id":277,"implemented":true,"kind":"function","modifiers":[],"name":"tryMod","nodeType":"FunctionDefinition","parameters":{"id":256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":253,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":277,"src":"2319:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":252,"name":"uint256","nodeType":"ElementaryTypeName","src":"2319:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":277,"src":"2330:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"2330:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2318:22:2"},"returnParameters":{"id":261,"nodeType":"ParameterList","parameters":[{"constant":false,"id":258,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":277,"src":"2364:4:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":257,"name":"bool","nodeType":"ElementaryTypeName","src":"2364:4:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":260,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":277,"src":"2370:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":259,"name":"uint256","nodeType":"ElementaryTypeName","src":"2370:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2363:15:2"},"scope":476,"src":"2303:152:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":302,"nodeType":"Block","src":"2757:108:2","statements":[{"assignments":[288],"declarations":[{"constant":false,"id":288,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":302,"src":"2767:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":287,"name":"uint256","nodeType":"ElementaryTypeName","src":"2767:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":292,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":289,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2779:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":290,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":282,"src":"2783:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2779:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2767:17:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":294,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2802:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":295,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":280,"src":"2807:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2802:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206164646974696f6e206f766572666c6f77","id":297,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2810:29:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""},"value":"SafeMath: addition overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a","typeString":"literal_string \"SafeMath: addition overflow\""}],"id":293,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2794:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2794:46:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":299,"nodeType":"ExpressionStatement","src":"2794:46:2"},{"expression":{"id":300,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"2857:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":286,"id":301,"nodeType":"Return","src":"2850:8:2"}]},"documentation":{"id":278,"nodeType":"StructuredDocumentation","src":"2461:224:2","text":" @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."},"id":303,"implemented":true,"kind":"function","modifiers":[],"name":"add","nodeType":"FunctionDefinition","parameters":{"id":283,"nodeType":"ParameterList","parameters":[{"constant":false,"id":280,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":303,"src":"2703:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"2703:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":282,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":303,"src":"2714:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":281,"name":"uint256","nodeType":"ElementaryTypeName","src":"2714:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2702:22:2"},"returnParameters":{"id":286,"nodeType":"ParameterList","parameters":[{"constant":false,"id":285,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":303,"src":"2748:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":284,"name":"uint256","nodeType":"ElementaryTypeName","src":"2748:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2747:9:2"},"scope":476,"src":"2690:175:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":324,"nodeType":"Block","src":"3203:88:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":314,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3221:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":315,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3226:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3221:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a207375627472616374696f6e206f766572666c6f77","id":317,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3229:32:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""},"value":"SafeMath: subtraction overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862","typeString":"literal_string \"SafeMath: subtraction overflow\""}],"id":313,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3213:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":318,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3213:49:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":319,"nodeType":"ExpressionStatement","src":"3213:49:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":320,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":306,"src":"3279:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":321,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3283:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3279:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":312,"id":323,"nodeType":"Return","src":"3272:12:2"}]},"documentation":{"id":304,"nodeType":"StructuredDocumentation","src":"2871:260:2","text":" @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":325,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":306,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":325,"src":"3149:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":305,"name":"uint256","nodeType":"ElementaryTypeName","src":"3149:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":308,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":325,"src":"3160:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":307,"name":"uint256","nodeType":"ElementaryTypeName","src":"3160:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3148:22:2"},"returnParameters":{"id":312,"nodeType":"ParameterList","parameters":[{"constant":false,"id":311,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":325,"src":"3194:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":310,"name":"uint256","nodeType":"ElementaryTypeName","src":"3194:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3193:9:2"},"scope":476,"src":"3136:155:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":358,"nodeType":"Block","src":"3605:148:2","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":335,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3619:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3624:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3619:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":340,"nodeType":"IfStatement","src":"3615:20:2","trueBody":{"expression":{"hexValue":"30","id":338,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3634:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":334,"id":339,"nodeType":"Return","src":"3627:8:2"}},{"assignments":[342],"declarations":[{"constant":false,"id":342,"mutability":"mutable","name":"c","nodeType":"VariableDeclaration","scope":358,"src":"3645:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":341,"name":"uint256","nodeType":"ElementaryTypeName","src":"3645:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":346,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":343,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3657:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":344,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3661:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3657:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3645:17:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":348,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"3680:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":349,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"3684:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3680:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":351,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":330,"src":"3689:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3680:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77","id":353,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3692:35:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""},"value":"SafeMath: multiplication overflow"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3","typeString":"literal_string \"SafeMath: multiplication overflow\""}],"id":347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3672:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3672:56:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":355,"nodeType":"ExpressionStatement","src":"3672:56:2"},{"expression":{"id":356,"name":"c","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":342,"src":"3745:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":334,"id":357,"nodeType":"Return","src":"3738:8:2"}]},"documentation":{"id":326,"nodeType":"StructuredDocumentation","src":"3297:236:2","text":" @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."},"id":359,"implemented":true,"kind":"function","modifiers":[],"name":"mul","nodeType":"FunctionDefinition","parameters":{"id":331,"nodeType":"ParameterList","parameters":[{"constant":false,"id":328,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":359,"src":"3551:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":327,"name":"uint256","nodeType":"ElementaryTypeName","src":"3551:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":330,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":359,"src":"3562:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":329,"name":"uint256","nodeType":"ElementaryTypeName","src":"3562:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3550:22:2"},"returnParameters":{"id":334,"nodeType":"ParameterList","parameters":[{"constant":false,"id":333,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":359,"src":"3596:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":332,"name":"uint256","nodeType":"ElementaryTypeName","src":"3596:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3595:9:2"},"scope":476,"src":"3538:215:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":380,"nodeType":"Block","src":"4284:83:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":370,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4302:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4306:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4302:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206469766973696f6e206279207a65726f","id":373,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4309:28:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""},"value":"SafeMath: division by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f","typeString":"literal_string \"SafeMath: division by zero\""}],"id":369,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4294:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":374,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4294:44:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":375,"nodeType":"ExpressionStatement","src":"4294:44:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":378,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":376,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"4355:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":377,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":364,"src":"4359:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4355:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":368,"id":379,"nodeType":"Return","src":"4348:12:2"}]},"documentation":{"id":360,"nodeType":"StructuredDocumentation","src":"3759:453:2","text":" @dev Returns the integer division of two unsigned integers, reverting on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":381,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":365,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":381,"src":"4230:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"4230:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":364,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":381,"src":"4241:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"4241:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4229:22:2"},"returnParameters":{"id":368,"nodeType":"ParameterList","parameters":[{"constant":false,"id":367,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":381,"src":"4275:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":366,"name":"uint256","nodeType":"ElementaryTypeName","src":"4275:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4274:9:2"},"scope":476,"src":"4217:150:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":402,"nodeType":"Block","src":"4887:81:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":392,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"4905:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4909:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4905:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"536166654d6174683a206d6f64756c6f206279207a65726f","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4912:26:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""},"value":"SafeMath: modulo by zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832","typeString":"literal_string \"SafeMath: modulo by zero\""}],"id":391,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4897:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4897:42:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":397,"nodeType":"ExpressionStatement","src":"4897:42:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":400,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":398,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":384,"src":"4956:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":399,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":386,"src":"4960:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4956:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":390,"id":401,"nodeType":"Return","src":"4949:12:2"}]},"documentation":{"id":382,"nodeType":"StructuredDocumentation","src":"4373:442:2","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":403,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":387,"nodeType":"ParameterList","parameters":[{"constant":false,"id":384,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":403,"src":"4833:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":383,"name":"uint256","nodeType":"ElementaryTypeName","src":"4833:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":386,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":403,"src":"4844:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":385,"name":"uint256","nodeType":"ElementaryTypeName","src":"4844:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4832:22:2"},"returnParameters":{"id":390,"nodeType":"ParameterList","parameters":[{"constant":false,"id":389,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":403,"src":"4878:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":388,"name":"uint256","nodeType":"ElementaryTypeName","src":"4878:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4877:9:2"},"scope":476,"src":"4820:148:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":426,"nodeType":"Block","src":"5527:68:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":416,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5545:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":417,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5550:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5545:6:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":419,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":410,"src":"5553:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":415,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5537:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":420,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5537:29:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":421,"nodeType":"ExpressionStatement","src":"5537:29:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":422,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":406,"src":"5583:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":423,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":408,"src":"5587:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5583:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":414,"id":425,"nodeType":"Return","src":"5576:12:2"}]},"documentation":{"id":404,"nodeType":"StructuredDocumentation","src":"4974:453:2","text":" @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {trySub}.\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."},"id":427,"implemented":true,"kind":"function","modifiers":[],"name":"sub","nodeType":"FunctionDefinition","parameters":{"id":411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":406,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":427,"src":"5445:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":405,"name":"uint256","nodeType":"ElementaryTypeName","src":"5445:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":408,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":427,"src":"5456:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":407,"name":"uint256","nodeType":"ElementaryTypeName","src":"5456:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":410,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":427,"src":"5467:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":409,"name":"string","nodeType":"ElementaryTypeName","src":"5467:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5444:50:2"},"returnParameters":{"id":414,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":427,"src":"5518:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"5518:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5517:9:2"},"scope":476,"src":"5432:163:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":450,"nodeType":"Block","src":"6347:67:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":440,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6365:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6369:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6365:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":443,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":434,"src":"6372:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6357:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6357:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":445,"nodeType":"ExpressionStatement","src":"6357:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":446,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":430,"src":"6402:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":447,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":432,"src":"6406:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6402:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":438,"id":449,"nodeType":"Return","src":"6395:12:2"}]},"documentation":{"id":428,"nodeType":"StructuredDocumentation","src":"5601:646:2","text":" @dev Returns the integer division of two unsigned integers, reverting with custom message on\n division by zero. The result is rounded towards zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryDiv}.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":451,"implemented":true,"kind":"function","modifiers":[],"name":"div","nodeType":"FunctionDefinition","parameters":{"id":435,"nodeType":"ParameterList","parameters":[{"constant":false,"id":430,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":451,"src":"6265:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":429,"name":"uint256","nodeType":"ElementaryTypeName","src":"6265:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":432,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":451,"src":"6276:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":431,"name":"uint256","nodeType":"ElementaryTypeName","src":"6276:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":434,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":451,"src":"6287:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":433,"name":"string","nodeType":"ElementaryTypeName","src":"6287:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6264:50:2"},"returnParameters":{"id":438,"nodeType":"ParameterList","parameters":[{"constant":false,"id":437,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":451,"src":"6338:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":436,"name":"uint256","nodeType":"ElementaryTypeName","src":"6338:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6337:9:2"},"scope":476,"src":"6252:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":474,"nodeType":"Block","src":"7155:67:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":464,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7173:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7177:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7173:5:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":467,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":458,"src":"7180:12:2","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":463,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7165:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":468,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7165:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":469,"nodeType":"ExpressionStatement","src":"7165:28:2"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":470,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":454,"src":"7210:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"id":471,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":456,"src":"7214:1:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7210:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":462,"id":473,"nodeType":"Return","src":"7203:12:2"}]},"documentation":{"id":452,"nodeType":"StructuredDocumentation","src":"6420:635:2","text":" @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n reverting with custom message when dividing by zero.\n CAUTION: This function is deprecated because it requires allocating memory for the error\n message unnecessarily. For custom revert reasons use {tryMod}.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."},"id":475,"implemented":true,"kind":"function","modifiers":[],"name":"mod","nodeType":"FunctionDefinition","parameters":{"id":459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":454,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":475,"src":"7073:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":453,"name":"uint256","nodeType":"ElementaryTypeName","src":"7073:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":456,"mutability":"mutable","name":"b","nodeType":"VariableDeclaration","scope":475,"src":"7084:9:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":455,"name":"uint256","nodeType":"ElementaryTypeName","src":"7084:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":458,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":475,"src":"7095:26:2","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":457,"name":"string","nodeType":"ElementaryTypeName","src":"7095:6:2","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7072:50:2"},"returnParameters":{"id":462,"nodeType":"ParameterList","parameters":[{"constant":false,"id":461,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":475,"src":"7146:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":460,"name":"uint256","nodeType":"ElementaryTypeName","src":"7146:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7145:9:2"},"scope":476,"src":"7060:162:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":477,"src":"630:6594:2"}],"src":"33:7192:2"},"id":2},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[554]},"id":555,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":478,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:3"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":479,"nodeType":"StructuredDocumentation","src":"66:70:3","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":554,"linearizedBaseContracts":[554],"name":"IERC20","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":480,"nodeType":"StructuredDocumentation","src":"160:66:3","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":485,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":481,"nodeType":"ParameterList","parameters":[],"src":"251:2:3"},"returnParameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":485,"src":"277:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":482,"name":"uint256","nodeType":"ElementaryTypeName","src":"277:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"276:9:3"},"scope":554,"src":"231:55:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":486,"nodeType":"StructuredDocumentation","src":"292:72:3","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":493,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":489,"nodeType":"ParameterList","parameters":[{"constant":false,"id":488,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":493,"src":"388:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":487,"name":"address","nodeType":"ElementaryTypeName","src":"388:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"387:17:3"},"returnParameters":{"id":492,"nodeType":"ParameterList","parameters":[{"constant":false,"id":491,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":493,"src":"428:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":490,"name":"uint256","nodeType":"ElementaryTypeName","src":"428:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"427:9:3"},"scope":554,"src":"369:68:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":494,"nodeType":"StructuredDocumentation","src":"443:209:3","text":" @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":503,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nodeType":"FunctionDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":496,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":503,"src":"675:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":495,"name":"address","nodeType":"ElementaryTypeName","src":"675:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":498,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":503,"src":"694:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"694:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"674:35:3"},"returnParameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":503,"src":"728:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":500,"name":"bool","nodeType":"ElementaryTypeName","src":"728:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"727:6:3"},"scope":554,"src":"657:77:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":504,"nodeType":"StructuredDocumentation","src":"740:264:3","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":513,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nodeType":"FunctionDefinition","parameters":{"id":509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":506,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":513,"src":"1028:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":505,"name":"address","nodeType":"ElementaryTypeName","src":"1028:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":508,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":513,"src":"1043:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":507,"name":"address","nodeType":"ElementaryTypeName","src":"1043:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1027:32:3"},"returnParameters":{"id":512,"nodeType":"ParameterList","parameters":[{"constant":false,"id":511,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":513,"src":"1083:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":510,"name":"uint256","nodeType":"ElementaryTypeName","src":"1083:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1082:9:3"},"scope":554,"src":"1009:83:3","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":514,"nodeType":"StructuredDocumentation","src":"1098:642:3","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":523,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":516,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":523,"src":"1762:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":515,"name":"address","nodeType":"ElementaryTypeName","src":"1762:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":518,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":523,"src":"1779:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1761:33:3"},"returnParameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":521,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":523,"src":"1813:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":520,"name":"bool","nodeType":"ElementaryTypeName","src":"1813:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1812:6:3"},"scope":554,"src":"1745:74:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":524,"nodeType":"StructuredDocumentation","src":"1825:296:3","text":" @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":535,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":531,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":535,"src":"2148:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":525,"name":"address","nodeType":"ElementaryTypeName","src":"2148:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":528,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":535,"src":"2164:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":527,"name":"address","nodeType":"ElementaryTypeName","src":"2164:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":530,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":535,"src":"2183:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":529,"name":"uint256","nodeType":"ElementaryTypeName","src":"2183:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2147:51:3"},"returnParameters":{"id":534,"nodeType":"ParameterList","parameters":[{"constant":false,"id":533,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":535,"src":"2217:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":532,"name":"bool","nodeType":"ElementaryTypeName","src":"2217:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2216:6:3"},"scope":554,"src":"2126:97:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"anonymous":false,"documentation":{"id":536,"nodeType":"StructuredDocumentation","src":"2229:158:3","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":544,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":538,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":544,"src":"2407:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":537,"name":"address","nodeType":"ElementaryTypeName","src":"2407:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":540,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":544,"src":"2429:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":539,"name":"address","nodeType":"ElementaryTypeName","src":"2429:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":542,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":544,"src":"2449:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":541,"name":"uint256","nodeType":"ElementaryTypeName","src":"2449:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2406:57:3"},"src":"2392:72:3"},{"anonymous":false,"documentation":{"id":545,"nodeType":"StructuredDocumentation","src":"2470:148:3","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":553,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":547,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":553,"src":"2638:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":546,"name":"address","nodeType":"ElementaryTypeName","src":"2638:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":549,"indexed":true,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":553,"src":"2661:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":548,"name":"address","nodeType":"ElementaryTypeName","src":"2661:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":551,"indexed":false,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":553,"src":"2686:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":550,"name":"uint256","nodeType":"ElementaryTypeName","src":"2686:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2637:63:3"},"src":"2623:78:3"}],"scope":555,"src":"137:2566:3"}],"src":"33:2671:3"},"id":3},"@openzeppelin/contracts/token/ERC20/SafeERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","exportedSymbols":{"Address":[1237],"IERC20":[554],"SafeERC20":[767],"SafeMath":[476]},"id":768,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":556,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:4"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":557,"nodeType":"ImportDirective","scope":768,"sourceUnit":555,"src":"66:22:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","file":"../../math/SafeMath.sol","id":558,"nodeType":"ImportDirective","scope":768,"sourceUnit":477,"src":"89:33:4","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","file":"../../utils/Address.sol","id":559,"nodeType":"ImportDirective","scope":768,"sourceUnit":1238,"src":"123:33:4","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":560,"nodeType":"StructuredDocumentation","src":"158:457:4","text":" @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."},"fullyImplemented":true,"id":767,"linearizedBaseContracts":[767],"name":"SafeERC20","nodeType":"ContractDefinition","nodes":[{"id":563,"libraryName":{"id":561,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":476,"src":"646:8:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$476","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"640:27:4","typeName":{"id":562,"name":"uint256","nodeType":"ElementaryTypeName","src":"659:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"id":566,"libraryName":{"id":564,"name":"Address","nodeType":"UserDefinedTypeName","referencedDeclaration":1237,"src":"678:7:4","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1237","typeString":"library Address"}},"nodeType":"UsingForDirective","src":"672:26:4","typeName":{"id":565,"name":"address","nodeType":"ElementaryTypeName","src":"690:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},{"body":{"id":587,"nodeType":"Block","src":"776:103:4","statements":[{"expression":{"arguments":[{"id":576,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"806:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":579,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":568,"src":"836:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":503,"src":"836:14:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":581,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"836:23:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":582,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":570,"src":"861:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":583,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":572,"src":"865:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":577,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"813:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":578,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"813:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"813:58:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":575,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"786:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"786:86:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":586,"nodeType":"ExpressionStatement","src":"786:86:4"}]},"id":588,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransfer","nodeType":"FunctionDefinition","parameters":{"id":573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":568,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":588,"src":"726:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},"typeName":{"id":567,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"726:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":570,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":588,"src":"740:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":569,"name":"address","nodeType":"ElementaryTypeName","src":"740:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":572,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":588,"src":"752:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":571,"name":"uint256","nodeType":"ElementaryTypeName","src":"752:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"725:41:4"},"returnParameters":{"id":574,"nodeType":"ParameterList","parameters":[],"src":"776:0:4"},"scope":767,"src":"704:175:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":612,"nodeType":"Block","src":"975:113:4","statements":[{"expression":{"arguments":[{"id":600,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"1005:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":603,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"1035:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":604,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":535,"src":"1035:18:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":605,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1035:27:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":606,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":592,"src":"1064:4:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":607,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":594,"src":"1070:2:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":608,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"1074:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":601,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1012:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1012:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1012:68:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":599,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"985:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"985:96:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":611,"nodeType":"ExpressionStatement","src":"985:96:4"}]},"id":613,"implemented":true,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":597,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":613,"src":"911:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},"typeName":{"id":589,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"911:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":592,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":613,"src":"925:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":591,"name":"address","nodeType":"ElementaryTypeName","src":"925:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":594,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":613,"src":"939:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":593,"name":"address","nodeType":"ElementaryTypeName","src":"939:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":613,"src":"951:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":595,"name":"uint256","nodeType":"ElementaryTypeName","src":"951:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"910:55:4"},"returnParameters":{"id":598,"nodeType":"ParameterList","parameters":[],"src":"975:0:4"},"scope":767,"src":"885:203:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":655,"nodeType":"Block","src":"1424:537:4","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":624,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"1713:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1722:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1713:10:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":627,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1712:12:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":632,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"1753:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$767","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$767","typeString":"library SafeERC20"}],"id":631,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1745:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":630,"name":"address","nodeType":"ElementaryTypeName","src":"1745:7:4","typeDescriptions":{}}},"id":633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1745:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":634,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1760:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":628,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1729:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":513,"src":"1729:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1729:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1772:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1729:44:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":638,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1728:46:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1712:62:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365","id":640,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1788:56:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""},"value":"SafeERC20: approve from non-zero to non-zero allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25","typeString":"literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""}],"id":623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1704:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1704:150:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":642,"nodeType":"ExpressionStatement","src":"1704:150:4"},{"expression":{"arguments":[{"id":644,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1884:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":647,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":616,"src":"1914:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":523,"src":"1914:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"1914:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":650,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":618,"src":"1938:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":651,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":620,"src":"1947:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":645,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1891:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":646,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"1891:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":652,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1891:62:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":643,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"1864:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1864:90:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":654,"nodeType":"ExpressionStatement","src":"1864:90:4"}]},"documentation":{"id":614,"nodeType":"StructuredDocumentation","src":"1094:249:4","text":" @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."},"id":656,"implemented":true,"kind":"function","modifiers":[],"name":"safeApprove","nodeType":"FunctionDefinition","parameters":{"id":621,"nodeType":"ParameterList","parameters":[{"constant":false,"id":616,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":656,"src":"1369:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},"typeName":{"id":615,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"1369:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":618,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":656,"src":"1383:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":617,"name":"address","nodeType":"ElementaryTypeName","src":"1383:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":620,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":656,"src":"1400:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":619,"name":"uint256","nodeType":"ElementaryTypeName","src":"1400:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1368:46:4"},"returnParameters":{"id":622,"nodeType":"ParameterList","parameters":[],"src":"1424:0:4"},"scope":767,"src":"1348:613:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":691,"nodeType":"Block","src":"2053:197:4","statements":[{"assignments":[666],"declarations":[{"constant":false,"id":666,"mutability":"mutable","name":"newAllowance","nodeType":"VariableDeclaration","scope":691,"src":"2063:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":665,"name":"uint256","nodeType":"ElementaryTypeName","src":"2063:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":678,"initialValue":{"arguments":[{"id":676,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":662,"src":"2130:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"arguments":[{"id":671,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2110:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$767","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$767","typeString":"library SafeERC20"}],"id":670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2102:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":669,"name":"address","nodeType":"ElementaryTypeName","src":"2102:7:4","typeDescriptions":{}}},"id":672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2102:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":673,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"2117:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":667,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2086:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":513,"src":"2086:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2086:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"2086:43:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2086:50:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2063:73:4"},{"expression":{"arguments":[{"id":680,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2166:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":683,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":658,"src":"2196:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":523,"src":"2196:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2196:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":686,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":660,"src":"2220:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":687,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":666,"src":"2229:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":681,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2173:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2173:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2173:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":679,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2146:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":689,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2146:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":690,"nodeType":"ExpressionStatement","src":"2146:97:4"}]},"id":692,"implemented":true,"kind":"function","modifiers":[],"name":"safeIncreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":663,"nodeType":"ParameterList","parameters":[{"constant":false,"id":658,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":692,"src":"1998:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},"typeName":{"id":657,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"1998:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":660,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":692,"src":"2012:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":659,"name":"address","nodeType":"ElementaryTypeName","src":"2012:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":662,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":692,"src":"2029:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":661,"name":"uint256","nodeType":"ElementaryTypeName","src":"2029:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1997:46:4"},"returnParameters":{"id":664,"nodeType":"ParameterList","parameters":[],"src":"2053:0:4"},"scope":767,"src":"1967:283:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":728,"nodeType":"Block","src":"2342:242:4","statements":[{"assignments":[702],"declarations":[{"constant":false,"id":702,"mutability":"mutable","name":"newAllowance","nodeType":"VariableDeclaration","scope":728,"src":"2352:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":701,"name":"uint256","nodeType":"ElementaryTypeName","src":"2352:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[{"id":712,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"2419:5:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2426:43:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""},"value":"SafeERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a","typeString":"literal_string \"SafeERC20: decreased allowance below zero\""}],"expression":{"arguments":[{"arguments":[{"id":707,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2399:4:4","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$767","typeString":"library SafeERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_SafeERC20_$767","typeString":"library SafeERC20"}],"id":706,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2391:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":705,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:4","typeDescriptions":{}}},"id":708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2391:13:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":709,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2406:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":703,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"2375:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"allowance","nodeType":"MemberAccess","referencedDeclaration":513,"src":"2375:15:4","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view external returns (uint256)"}},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2375:39:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":427,"src":"2375:43:4","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256,string memory) pure returns (uint256)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2375:95:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2352:118:4"},{"expression":{"arguments":[{"id":717,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"2500:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},{"arguments":[{"expression":{"expression":{"id":720,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"2530:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":721,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"approve","nodeType":"MemberAccess","referencedDeclaration":523,"src":"2530:13:4","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"selector","nodeType":"MemberAccess","src":"2530:22:4","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},{"id":723,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":696,"src":"2554:7:4","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":724,"name":"newAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":702,"src":"2563:12:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":718,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"2507:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":719,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodeWithSelector","nodeType":"MemberAccess","src":"2507:22:4","typeDescriptions":{"typeIdentifier":"t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$","typeString":"function (bytes4) pure returns (bytes memory)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2507:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":716,"name":"_callOptionalReturn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":766,"src":"2480:19:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_bytes_memory_ptr_$returns$__$","typeString":"function (contract IERC20,bytes memory)"}},"id":726,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2480:97:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":727,"nodeType":"ExpressionStatement","src":"2480:97:4"}]},"id":729,"implemented":true,"kind":"function","modifiers":[],"name":"safeDecreaseAllowance","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":694,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":729,"src":"2287:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},"typeName":{"id":693,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"2287:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":696,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":729,"src":"2301:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":695,"name":"address","nodeType":"ElementaryTypeName","src":"2301:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":698,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":729,"src":"2318:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"2318:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2286:46:4"},"returnParameters":{"id":700,"nodeType":"ParameterList","parameters":[],"src":"2342:0:4"},"scope":767,"src":"2256:328:4","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":765,"nodeType":"Block","src":"3037:681:4","statements":[{"assignments":[738],"declarations":[{"constant":false,"id":738,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":765,"src":"3386:23:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":737,"name":"bytes","nodeType":"ElementaryTypeName","src":"3386:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":747,"initialValue":{"arguments":[{"id":744,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":734,"src":"3440:4:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564","id":745,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3446:34:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""},"value":"SafeERC20: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b","typeString":"literal_string \"SafeERC20: low-level call failed\""}],"expression":{"arguments":[{"id":741,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":732,"src":"3420:5:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3412:7:4","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":739,"name":"address","nodeType":"ElementaryTypeName","src":"3412:7:4","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:14:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"functionCall","nodeType":"MemberAccess","referencedDeclaration":1032,"src":"3412:27:4","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3412:69:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"3386:95:4"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":751,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":748,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3495:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3495:17:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":750,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3515:1:4","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3495:21:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":764,"nodeType":"IfStatement","src":"3491:221:4","trueBody":{"id":763,"nodeType":"Block","src":"3518:194:4","statements":[{"expression":{"arguments":[{"arguments":[{"id":755,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":738,"src":"3635:10:4","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"components":[{"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3648:4:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"},"typeName":{"id":756,"name":"bool","nodeType":"ElementaryTypeName","src":"3648:4:4","typeDescriptions":{}}}],"id":758,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3647:6:4","typeDescriptions":{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_type$_t_bool_$","typeString":"type(bool)"}],"expression":{"id":753,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3624:3:4","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":754,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"decode","nodeType":"MemberAccess","src":"3624:10:4","typeDescriptions":{"typeIdentifier":"t_function_abidecode_pure$__$returns$__$","typeString":"function () pure"}},"id":759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3624:30:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564","id":760,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3656:44:4","typeDescriptions":{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""},"value":"SafeERC20: ERC20 operation did not succeed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd","typeString":"literal_string \"SafeERC20: ERC20 operation did not succeed\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3616:7:4","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":761,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3616:85:4","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":762,"nodeType":"ExpressionStatement","src":"3616:85:4"}]}}]},"documentation":{"id":730,"nodeType":"StructuredDocumentation","src":"2590:372:4","text":" @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."},"id":766,"implemented":true,"kind":"function","modifiers":[],"name":"_callOptionalReturn","nodeType":"FunctionDefinition","parameters":{"id":735,"nodeType":"ParameterList","parameters":[{"constant":false,"id":732,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":766,"src":"2996:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"},"typeName":{"id":731,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"2996:6:4","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"visibility":"internal"},{"constant":false,"id":734,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":766,"src":"3010:17:4","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":733,"name":"bytes","nodeType":"ElementaryTypeName","src":"3010:5:4","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"2995:33:4"},"returnParameters":{"id":736,"nodeType":"ParameterList","parameters":[],"src":"3037:0:4"},"scope":767,"src":"2967:751:4","stateMutability":"nonpayable","virtual":false,"visibility":"private"}],"scope":768,"src":"616:3104:4"}],"src":"33:3688:4"},"id":4},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","exportedSymbols":{"IERC165":[121],"IERC721":[883]},"id":884,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":769,"literals":["solidity",">=","0.6",".2","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:5"},{"absolutePath":"@openzeppelin/contracts/introspection/IERC165.sol","file":"../../introspection/IERC165.sol","id":770,"nodeType":"ImportDirective","scope":884,"sourceUnit":122,"src":"66:41:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":772,"name":"IERC165","nodeType":"UserDefinedTypeName","referencedDeclaration":121,"src":"198:7:5","typeDescriptions":{"typeIdentifier":"t_contract$_IERC165_$121","typeString":"contract IERC165"}},"id":773,"nodeType":"InheritanceSpecifier","src":"198:7:5"}],"contractDependencies":[121],"contractKind":"interface","documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"109:67:5","text":" @dev Required interface of an ERC721 compliant contract."},"fullyImplemented":false,"id":883,"linearizedBaseContracts":[883,121],"name":"IERC721","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":774,"nodeType":"StructuredDocumentation","src":"212:88:5","text":" @dev Emitted when `tokenId` token is transferred from `from` to `to`."},"id":782,"name":"Transfer","nodeType":"EventDefinition","parameters":{"id":781,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"indexed":true,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":782,"src":"320:20:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"320:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"indexed":true,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":782,"src":"342:18:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":777,"name":"address","nodeType":"ElementaryTypeName","src":"342:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":780,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":782,"src":"362:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":779,"name":"uint256","nodeType":"ElementaryTypeName","src":"362:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"319:67:5"},"src":"305:82:5"},{"anonymous":false,"documentation":{"id":783,"nodeType":"StructuredDocumentation","src":"393:94:5","text":" @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."},"id":791,"name":"Approval","nodeType":"EventDefinition","parameters":{"id":790,"nodeType":"ParameterList","parameters":[{"constant":false,"id":785,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":791,"src":"507:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":784,"name":"address","nodeType":"ElementaryTypeName","src":"507:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":787,"indexed":true,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":791,"src":"530:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":786,"name":"address","nodeType":"ElementaryTypeName","src":"530:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":789,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":791,"src":"556:23:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":788,"name":"uint256","nodeType":"ElementaryTypeName","src":"556:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"506:74:5"},"src":"492:89:5"},{"anonymous":false,"documentation":{"id":792,"nodeType":"StructuredDocumentation","src":"587:117:5","text":" @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"id":800,"name":"ApprovalForAll","nodeType":"EventDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":794,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":800,"src":"730:21:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"730:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":796,"indexed":true,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":800,"src":"753:24:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":795,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":798,"indexed":false,"mutability":"mutable","name":"approved","nodeType":"VariableDeclaration","scope":800,"src":"779:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":797,"name":"bool","nodeType":"ElementaryTypeName","src":"779:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"729:64:5"},"src":"709:85:5"},{"documentation":{"id":801,"nodeType":"StructuredDocumentation","src":"800:76:5","text":" @dev Returns the number of tokens in ``owner``'s account."},"functionSelector":"70a08231","id":808,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nodeType":"FunctionDefinition","parameters":{"id":804,"nodeType":"ParameterList","parameters":[{"constant":false,"id":803,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":808,"src":"900:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":802,"name":"address","nodeType":"ElementaryTypeName","src":"900:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"899:15:5"},"returnParameters":{"id":807,"nodeType":"ParameterList","parameters":[{"constant":false,"id":806,"mutability":"mutable","name":"balance","nodeType":"VariableDeclaration","scope":808,"src":"938:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":805,"name":"uint256","nodeType":"ElementaryTypeName","src":"938:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"937:17:5"},"scope":883,"src":"881:74:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":809,"nodeType":"StructuredDocumentation","src":"961:131:5","text":" @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"6352211e","id":816,"implemented":false,"kind":"function","modifiers":[],"name":"ownerOf","nodeType":"FunctionDefinition","parameters":{"id":812,"nodeType":"ParameterList","parameters":[{"constant":false,"id":811,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":816,"src":"1114:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":810,"name":"uint256","nodeType":"ElementaryTypeName","src":"1114:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1113:17:5"},"returnParameters":{"id":815,"nodeType":"ParameterList","parameters":[{"constant":false,"id":814,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":816,"src":"1154:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":813,"name":"address","nodeType":"ElementaryTypeName","src":"1154:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1153:15:5"},"scope":883,"src":"1097:72:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":817,"nodeType":"StructuredDocumentation","src":"1175:690:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"42842e0e","id":826,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":819,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":826,"src":"1896:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":818,"name":"address","nodeType":"ElementaryTypeName","src":"1896:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":821,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":826,"src":"1910:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":820,"name":"address","nodeType":"ElementaryTypeName","src":"1910:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":823,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":826,"src":"1922:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"1922:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1895:43:5"},"returnParameters":{"id":825,"nodeType":"ParameterList","parameters":[],"src":"1947:0:5"},"scope":883,"src":"1870:78:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":827,"nodeType":"StructuredDocumentation","src":"1954:504:5","text":" @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":836,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nodeType":"FunctionDefinition","parameters":{"id":834,"nodeType":"ParameterList","parameters":[{"constant":false,"id":829,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":836,"src":"2485:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":828,"name":"address","nodeType":"ElementaryTypeName","src":"2485:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":831,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":836,"src":"2499:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":830,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":833,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":836,"src":"2511:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":832,"name":"uint256","nodeType":"ElementaryTypeName","src":"2511:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2484:43:5"},"returnParameters":{"id":835,"nodeType":"ParameterList","parameters":[],"src":"2536:0:5"},"scope":883,"src":"2463:74:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":837,"nodeType":"StructuredDocumentation","src":"2543:452:5","text":" @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":844,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nodeType":"FunctionDefinition","parameters":{"id":842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":839,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":844,"src":"3017:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":838,"name":"address","nodeType":"ElementaryTypeName","src":"3017:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":841,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":844,"src":"3029:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":840,"name":"uint256","nodeType":"ElementaryTypeName","src":"3029:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3016:29:5"},"returnParameters":{"id":843,"nodeType":"ParameterList","parameters":[],"src":"3054:0:5"},"scope":883,"src":"3000:55:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":845,"nodeType":"StructuredDocumentation","src":"3061:139:5","text":" @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."},"functionSelector":"081812fc","id":852,"implemented":false,"kind":"function","modifiers":[],"name":"getApproved","nodeType":"FunctionDefinition","parameters":{"id":848,"nodeType":"ParameterList","parameters":[{"constant":false,"id":847,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":852,"src":"3226:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":846,"name":"uint256","nodeType":"ElementaryTypeName","src":"3226:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3225:17:5"},"returnParameters":{"id":851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":850,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":852,"src":"3266:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":849,"name":"address","nodeType":"ElementaryTypeName","src":"3266:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3265:18:5"},"scope":883,"src":"3205:79:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":853,"nodeType":"StructuredDocumentation","src":"3290:309:5","text":" @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."},"functionSelector":"a22cb465","id":860,"implemented":false,"kind":"function","modifiers":[],"name":"setApprovalForAll","nodeType":"FunctionDefinition","parameters":{"id":858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":855,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":860,"src":"3631:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":854,"name":"address","nodeType":"ElementaryTypeName","src":"3631:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":857,"mutability":"mutable","name":"_approved","nodeType":"VariableDeclaration","scope":860,"src":"3649:14:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":856,"name":"bool","nodeType":"ElementaryTypeName","src":"3649:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3630:34:5"},"returnParameters":{"id":859,"nodeType":"ParameterList","parameters":[],"src":"3673:0:5"},"scope":883,"src":"3604:70:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":861,"nodeType":"StructuredDocumentation","src":"3680:138:5","text":" @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"},"functionSelector":"e985e9c5","id":870,"implemented":false,"kind":"function","modifiers":[],"name":"isApprovedForAll","nodeType":"FunctionDefinition","parameters":{"id":866,"nodeType":"ParameterList","parameters":[{"constant":false,"id":863,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":870,"src":"3849:13:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":862,"name":"address","nodeType":"ElementaryTypeName","src":"3849:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":865,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":870,"src":"3864:16:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":864,"name":"address","nodeType":"ElementaryTypeName","src":"3864:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3848:33:5"},"returnParameters":{"id":869,"nodeType":"ParameterList","parameters":[{"constant":false,"id":868,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":870,"src":"3905:4:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":867,"name":"bool","nodeType":"ElementaryTypeName","src":"3905:4:5","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3904:6:5"},"scope":883,"src":"3823:88:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"3917:568:5","text":" @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."},"functionSelector":"b88d4fde","id":882,"implemented":false,"kind":"function","modifiers":[],"name":"safeTransferFrom","nodeType":"FunctionDefinition","parameters":{"id":880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"from","nodeType":"VariableDeclaration","scope":882,"src":"4516:12:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":872,"name":"address","nodeType":"ElementaryTypeName","src":"4516:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":875,"mutability":"mutable","name":"to","nodeType":"VariableDeclaration","scope":882,"src":"4530:10:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":874,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:5","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":877,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":882,"src":"4542:15:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":876,"name":"uint256","nodeType":"ElementaryTypeName","src":"4542:7:5","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":879,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":882,"src":"4559:19:5","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":878,"name":"bytes","nodeType":"ElementaryTypeName","src":"4559:5:5","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4515:64:5"},"returnParameters":{"id":881,"nodeType":"ParameterList","parameters":[],"src":"4588:0:5"},"scope":883,"src":"4490:99:5","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":884,"src":"177:4414:5"}],"src":"33:4559:5"},"id":5},"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol","exportedSymbols":{"IERC165":[121],"IERC721":[883],"IERC721Enumerable":[914]},"id":915,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":885,"literals":["solidity",">=","0.6",".2","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:6"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":886,"nodeType":"ImportDirective","scope":915,"sourceUnit":884,"src":"66:23:6","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":888,"name":"IERC721","nodeType":"UserDefinedTypeName","referencedDeclaration":883,"src":"259:7:6","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$883","typeString":"contract IERC721"}},"id":889,"nodeType":"InheritanceSpecifier","src":"259:7:6"}],"contractDependencies":[121,883],"contractKind":"interface","documentation":{"id":887,"nodeType":"StructuredDocumentation","src":"91:136:6","text":" @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":914,"linearizedBaseContracts":[914,883,121],"name":"IERC721Enumerable","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":890,"nodeType":"StructuredDocumentation","src":"274:82:6","text":" @dev Returns the total amount of tokens stored by the contract."},"functionSelector":"18160ddd","id":895,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nodeType":"FunctionDefinition","parameters":{"id":891,"nodeType":"ParameterList","parameters":[],"src":"381:2:6"},"returnParameters":{"id":894,"nodeType":"ParameterList","parameters":[{"constant":false,"id":893,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":895,"src":"407:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":892,"name":"uint256","nodeType":"ElementaryTypeName","src":"407:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"406:9:6"},"scope":914,"src":"361:55:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"422:171:6","text":" @dev Returns a token ID owned by `owner` at a given `index` of its token list.\n Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"functionSelector":"2f745c59","id":905,"implemented":false,"kind":"function","modifiers":[],"name":"tokenOfOwnerByIndex","nodeType":"FunctionDefinition","parameters":{"id":901,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":905,"src":"627:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":897,"name":"address","nodeType":"ElementaryTypeName","src":"627:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":900,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":905,"src":"642:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":899,"name":"uint256","nodeType":"ElementaryTypeName","src":"642:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"626:30:6"},"returnParameters":{"id":904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":903,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":905,"src":"680:15:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":902,"name":"uint256","nodeType":"ElementaryTypeName","src":"680:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"679:17:6"},"scope":914,"src":"598:99:6","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"703:164:6","text":" @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\n Use along with {totalSupply} to enumerate all tokens."},"functionSelector":"4f6ccce7","id":913,"implemented":false,"kind":"function","modifiers":[],"name":"tokenByIndex","nodeType":"FunctionDefinition","parameters":{"id":909,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":913,"src":"894:13:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":907,"name":"uint256","nodeType":"ElementaryTypeName","src":"894:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"893:15:6"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[{"constant":false,"id":911,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":913,"src":"932:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":910,"name":"uint256","nodeType":"ElementaryTypeName","src":"932:7:6","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"931:9:6"},"scope":914,"src":"872:69:6","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":915,"src":"228:715:6"}],"src":"33:911:6"},"id":6},"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol","exportedSymbols":{"IERC165":[121],"IERC721":[883],"IERC721Metadata":[941]},"id":942,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":916,"literals":["solidity",">=","0.6",".2","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:7"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"./IERC721.sol","id":917,"nodeType":"ImportDirective","scope":942,"sourceUnit":884,"src":"66:23:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":919,"name":"IERC721","nodeType":"UserDefinedTypeName","referencedDeclaration":883,"src":"254:7:7","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$883","typeString":"contract IERC721"}},"id":920,"nodeType":"InheritanceSpecifier","src":"254:7:7"}],"contractDependencies":[121,883],"contractKind":"interface","documentation":{"id":918,"nodeType":"StructuredDocumentation","src":"91:133:7","text":" @title ERC-721 Non-Fungible Token Standard, optional metadata extension\n @dev See https://eips.ethereum.org/EIPS/eip-721"},"fullyImplemented":false,"id":941,"linearizedBaseContracts":[941,883,121],"name":"IERC721Metadata","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"269:58:7","text":" @dev Returns the token collection name."},"functionSelector":"06fdde03","id":926,"implemented":false,"kind":"function","modifiers":[],"name":"name","nodeType":"FunctionDefinition","parameters":{"id":922,"nodeType":"ParameterList","parameters":[],"src":"345:2:7"},"returnParameters":{"id":925,"nodeType":"ParameterList","parameters":[{"constant":false,"id":924,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":926,"src":"371:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":923,"name":"string","nodeType":"ElementaryTypeName","src":"371:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"370:15:7"},"scope":941,"src":"332:54:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":927,"nodeType":"StructuredDocumentation","src":"392:60:7","text":" @dev Returns the token collection symbol."},"functionSelector":"95d89b41","id":932,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nodeType":"FunctionDefinition","parameters":{"id":928,"nodeType":"ParameterList","parameters":[],"src":"472:2:7"},"returnParameters":{"id":931,"nodeType":"ParameterList","parameters":[{"constant":false,"id":930,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":932,"src":"498:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":929,"name":"string","nodeType":"ElementaryTypeName","src":"498:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"497:15:7"},"scope":941,"src":"457:56:7","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":933,"nodeType":"StructuredDocumentation","src":"519:90:7","text":" @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"functionSelector":"c87b56dd","id":940,"implemented":false,"kind":"function","modifiers":[],"name":"tokenURI","nodeType":"FunctionDefinition","parameters":{"id":936,"nodeType":"ParameterList","parameters":[{"constant":false,"id":935,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":940,"src":"632:15:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":934,"name":"uint256","nodeType":"ElementaryTypeName","src":"632:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"631:17:7"},"returnParameters":{"id":939,"nodeType":"ParameterList","parameters":[{"constant":false,"id":938,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":940,"src":"672:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":937,"name":"string","nodeType":"ElementaryTypeName","src":"672:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"671:15:7"},"scope":941,"src":"614:73:7","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":942,"src":"225:464:7"}],"src":"33:657:7"},"id":7},"@openzeppelin/contracts/utils/Address.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Address.sol","exportedSymbols":{"Address":[1237]},"id":1238,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":943,"literals":["solidity",">=","0.6",".2","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:8"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":944,"nodeType":"StructuredDocumentation","src":"66:67:8","text":" @dev Collection of functions related to the address type"},"fullyImplemented":true,"id":1237,"linearizedBaseContracts":[1237],"name":"Address","nodeType":"ContractDefinition","nodes":[{"body":{"id":960,"nodeType":"Block","src":"792:347:8","statements":[{"assignments":[953],"declarations":[{"constant":false,"id":953,"mutability":"mutable","name":"size","nodeType":"VariableDeclaration","scope":960,"src":"989:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":952,"name":"uint256","nodeType":"ElementaryTypeName","src":"989:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":954,"nodeType":"VariableDeclarationStatement","src":"989:12:8"},{"AST":{"nodeType":"YulBlock","src":"1076:32:8","statements":[{"nodeType":"YulAssignment","src":"1078:28:8","value":{"arguments":[{"name":"account","nodeType":"YulIdentifier","src":"1098:7:8"}],"functionName":{"name":"extcodesize","nodeType":"YulIdentifier","src":"1086:11:8"},"nodeType":"YulFunctionCall","src":"1086:20:8"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1078:4:8"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":947,"isOffset":false,"isSlot":false,"src":"1098:7:8","valueSize":1},{"declaration":953,"isOffset":false,"isSlot":false,"src":"1078:4:8","valueSize":1}],"id":955,"nodeType":"InlineAssembly","src":"1067:41:8"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":958,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":956,"name":"size","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":953,"src":"1124:4:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1131:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1124:8:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":951,"id":959,"nodeType":"Return","src":"1117:15:8"}]},"documentation":{"id":945,"nodeType":"StructuredDocumentation","src":"156:565:8","text":" @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="},"id":961,"implemented":true,"kind":"function","modifiers":[],"name":"isContract","nodeType":"FunctionDefinition","parameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"account","nodeType":"VariableDeclaration","scope":961,"src":"746:15:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":946,"name":"address","nodeType":"ElementaryTypeName","src":"746:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"745:17:8"},"returnParameters":{"id":951,"nodeType":"ParameterList","parameters":[{"constant":false,"id":950,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":961,"src":"786:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":949,"name":"bool","nodeType":"ElementaryTypeName","src":"786:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"785:6:8"},"scope":1237,"src":"726:413:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":994,"nodeType":"Block","src":"2127:320:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":972,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"2153:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1237","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1237","typeString":"library Address"}],"id":971,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2145:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":970,"name":"address","nodeType":"ElementaryTypeName","src":"2145:7:8","typeDescriptions":{}}},"id":973,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2145:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"2145:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":975,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2170:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2145:31:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e6365","id":977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2178:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""},"value":"Address: insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9","typeString":"literal_string \"Address: insufficient balance\""}],"id":969,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2137:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":978,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2137:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":979,"nodeType":"ExpressionStatement","src":"2137:73:8"},{"assignments":[981,null],"declarations":[{"constant":false,"id":981,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":994,"src":"2299:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":980,"name":"bool","nodeType":"ElementaryTypeName","src":"2299:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},null],"id":988,"initialValue":{"arguments":[{"hexValue":"","id":986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2349:2:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""}],"expression":{"id":982,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"2317:9:8","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"2317:14:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":984,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"2340:6:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2317:31:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2317:35:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"2298:54:8"},{"expression":{"arguments":[{"id":990,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":981,"src":"2370:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2379:60:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""},"value":"Address: unable to send value, recipient may have reverted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae","typeString":"literal_string \"Address: unable to send value, recipient may have reverted\""}],"id":989,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2362:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2362:78:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":993,"nodeType":"ExpressionStatement","src":"2362:78:8"}]},"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"1145:906:8","text":" @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."},"id":995,"implemented":true,"kind":"function","modifiers":[],"name":"sendValue","nodeType":"FunctionDefinition","parameters":{"id":967,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":995,"src":"2075:25:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"2075:15:8","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":995,"src":"2102:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"2102:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2074:43:8"},"returnParameters":{"id":968,"nodeType":"ParameterList","parameters":[],"src":"2127:0:8"},"scope":1237,"src":"2056:391:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1011,"nodeType":"Block","src":"3277:82:8","statements":[{"expression":{"arguments":[{"id":1006,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":998,"src":"3305:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1007,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1000,"src":"3313:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564","id":1008,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3319:32:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""},"value":"Address: low-level call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df","typeString":"literal_string \"Address: low-level call failed\""}],"id":1005,"name":"functionCall","nodeType":"Identifier","overloadedDeclarations":[1012,1032],"referencedDeclaration":1032,"src":"3292:12:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1009,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3292:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1004,"id":1010,"nodeType":"Return","src":"3285:67:8"}]},"documentation":{"id":996,"nodeType":"StructuredDocumentation","src":"2453:730:8","text":" @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"},"id":1012,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":1001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":998,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1012,"src":"3210:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":997,"name":"address","nodeType":"ElementaryTypeName","src":"3210:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1000,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1012,"src":"3226:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":999,"name":"bytes","nodeType":"ElementaryTypeName","src":"3226:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3209:35:8"},"returnParameters":{"id":1004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1003,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1012,"src":"3263:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1002,"name":"bytes","nodeType":"ElementaryTypeName","src":"3263:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3262:14:8"},"scope":1237,"src":"3188:171:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1031,"nodeType":"Block","src":"3698:76:8","statements":[{"expression":{"arguments":[{"id":1025,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1015,"src":"3737:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1026,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1017,"src":"3745:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"30","id":1027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3751:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"id":1028,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1019,"src":"3754:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1024,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1052,1102],"referencedDeclaration":1102,"src":"3715:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1029,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3715:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1023,"id":1030,"nodeType":"Return","src":"3708:59:8"}]},"documentation":{"id":1013,"nodeType":"StructuredDocumentation","src":"3365:211:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1032,"implemented":true,"kind":"function","modifiers":[],"name":"functionCall","nodeType":"FunctionDefinition","parameters":{"id":1020,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1015,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1032,"src":"3603:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1014,"name":"address","nodeType":"ElementaryTypeName","src":"3603:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1017,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1032,"src":"3619:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1016,"name":"bytes","nodeType":"ElementaryTypeName","src":"3619:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1019,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1032,"src":"3638:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1018,"name":"string","nodeType":"ElementaryTypeName","src":"3638:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3602:63:8"},"returnParameters":{"id":1023,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1022,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1032,"src":"3684:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1021,"name":"bytes","nodeType":"ElementaryTypeName","src":"3684:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"3683:14:8"},"scope":1237,"src":"3581:193:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1051,"nodeType":"Block","src":"4249:111:8","statements":[{"expression":{"arguments":[{"id":1045,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1035,"src":"4288:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1046,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1037,"src":"4296:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1047,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"4302:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564","id":1048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4309:43:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""},"value":"Address: low-level call with value failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc","typeString":"literal_string \"Address: low-level call with value failed\""}],"id":1044,"name":"functionCallWithValue","nodeType":"Identifier","overloadedDeclarations":[1052,1102],"referencedDeclaration":1102,"src":"4266:21:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,uint256,string memory) returns (bytes memory)"}},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4266:87:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1043,"id":1050,"nodeType":"Return","src":"4259:94:8"}]},"documentation":{"id":1033,"nodeType":"StructuredDocumentation","src":"3780:351:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"},"id":1052,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1035,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1052,"src":"4167:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1034,"name":"address","nodeType":"ElementaryTypeName","src":"4167:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1037,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1052,"src":"4183:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1036,"name":"bytes","nodeType":"ElementaryTypeName","src":"4183:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1039,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1052,"src":"4202:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1038,"name":"uint256","nodeType":"ElementaryTypeName","src":"4202:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4166:50:8"},"returnParameters":{"id":1043,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1042,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1052,"src":"4235:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1041,"name":"bytes","nodeType":"ElementaryTypeName","src":"4235:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4234:14:8"},"scope":1237,"src":"4136:224:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"4749:382:8","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":1069,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"4775:4:8","typeDescriptions":{"typeIdentifier":"t_contract$_Address_$1237","typeString":"library Address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Address_$1237","typeString":"library Address"}],"id":1068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4767:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"4767:7:8","typeDescriptions":{}}},"id":1070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4767:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"4767:21:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1072,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"4792:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4767:30:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4799:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""},"value":"Address: insufficient balance for call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c","typeString":"literal_string \"Address: insufficient balance for call\""}],"id":1066,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4759:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4759:81:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1076,"nodeType":"ExpressionStatement","src":"4759:81:8"},{"expression":{"arguments":[{"arguments":[{"id":1079,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"4869:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1078,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"4858:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1080,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4858:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374","id":1081,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4878:31:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""},"value":"Address: call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad","typeString":"literal_string \"Address: call to non-contract\""}],"id":1077,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4850:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1082,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4850:60:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1083,"nodeType":"ExpressionStatement","src":"4850:60:8"},{"assignments":[1085,1087],"declarations":[{"constant":false,"id":1085,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1101,"src":"4981:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1084,"name":"bool","nodeType":"ElementaryTypeName","src":"4981:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1087,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1101,"src":"4995:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1086,"name":"bytes","nodeType":"ElementaryTypeName","src":"4995:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1094,"initialValue":{"arguments":[{"id":1092,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1057,"src":"5050:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1088,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1055,"src":"5022:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1089,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"call","nodeType":"MemberAccess","src":"5022:11:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"5042:5:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5022:27:8","typeDescriptions":{"typeIdentifier":"t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value","typeString":"function (bytes memory) payable returns (bool,bytes memory)"}},"id":1093,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5022:33:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"4980:75:8"},{"expression":{"arguments":[{"id":1096,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"5090:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1097,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"5099:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1098,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1061,"src":"5111:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1095,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"5072:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5072:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1065,"id":1100,"nodeType":"Return","src":"5065:59:8"}]},"documentation":{"id":1053,"nodeType":"StructuredDocumentation","src":"4366:237:8","text":" @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"functionCallWithValue","nodeType":"FunctionDefinition","parameters":{"id":1062,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1055,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1102,"src":"4639:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1054,"name":"address","nodeType":"ElementaryTypeName","src":"4639:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1057,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1102,"src":"4655:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1056,"name":"bytes","nodeType":"ElementaryTypeName","src":"4655:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1059,"mutability":"mutable","name":"value","nodeType":"VariableDeclaration","scope":1102,"src":"4674:13:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1058,"name":"uint256","nodeType":"ElementaryTypeName","src":"4674:7:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1061,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1102,"src":"4689:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1060,"name":"string","nodeType":"ElementaryTypeName","src":"4689:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4638:78:8"},"returnParameters":{"id":1065,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1064,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1102,"src":"4735:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1063,"name":"bytes","nodeType":"ElementaryTypeName","src":"4735:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4734:14:8"},"scope":1237,"src":"4608:523:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1118,"nodeType":"Block","src":"5408:97:8","statements":[{"expression":{"arguments":[{"id":1113,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"5444:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1114,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1107,"src":"5452:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564","id":1115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5458:39:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""},"value":"Address: low-level static call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0","typeString":"literal_string \"Address: low-level static call failed\""}],"id":1112,"name":"functionStaticCall","nodeType":"Identifier","overloadedDeclarations":[1119,1154],"referencedDeclaration":1154,"src":"5425:18:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) view returns (bytes memory)"}},"id":1116,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5425:73:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1111,"id":1117,"nodeType":"Return","src":"5418:80:8"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"5137:166:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1119,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1119,"src":"5336:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"5336:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1119,"src":"5352:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1106,"name":"bytes","nodeType":"ElementaryTypeName","src":"5352:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5335:35:8"},"returnParameters":{"id":1111,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1110,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1119,"src":"5394:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1109,"name":"bytes","nodeType":"ElementaryTypeName","src":"5394:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5393:14:8"},"scope":1237,"src":"5308:197:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1153,"nodeType":"Block","src":"5817:288:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1133,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"5846:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1132,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"5835:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1134,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5835:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374","id":1135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5855:38:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""},"value":"Address: static call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9","typeString":"literal_string \"Address: static call to non-contract\""}],"id":1131,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5827:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5827:67:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1137,"nodeType":"ExpressionStatement","src":"5827:67:8"},{"assignments":[1139,1141],"declarations":[{"constant":false,"id":1139,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1153,"src":"5965:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1138,"name":"bool","nodeType":"ElementaryTypeName","src":"5965:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1141,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1153,"src":"5979:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1140,"name":"bytes","nodeType":"ElementaryTypeName","src":"5979:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1146,"initialValue":{"arguments":[{"id":1144,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1124,"src":"6024:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1142,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1122,"src":"6006:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"staticcall","nodeType":"MemberAccess","src":"6006:17:8","typeDescriptions":{"typeIdentifier":"t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) view returns (bool,bytes memory)"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6006:23:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"5964:65:8"},{"expression":{"arguments":[{"id":1148,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1139,"src":"6064:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1149,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1141,"src":"6073:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1150,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1126,"src":"6085:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1147,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"6046:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6046:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1130,"id":1152,"nodeType":"Return","src":"6039:59:8"}]},"documentation":{"id":1120,"nodeType":"StructuredDocumentation","src":"5511:173:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"},"id":1154,"implemented":true,"kind":"function","modifiers":[],"name":"functionStaticCall","nodeType":"FunctionDefinition","parameters":{"id":1127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1122,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1154,"src":"5717:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1121,"name":"address","nodeType":"ElementaryTypeName","src":"5717:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1124,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1154,"src":"5733:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1123,"name":"bytes","nodeType":"ElementaryTypeName","src":"5733:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1126,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1154,"src":"5752:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1125,"name":"string","nodeType":"ElementaryTypeName","src":"5752:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5716:63:8"},"returnParameters":{"id":1130,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1129,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1154,"src":"5803:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1128,"name":"bytes","nodeType":"ElementaryTypeName","src":"5803:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5802:14:8"},"scope":1237,"src":"5689:416:8","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":1170,"nodeType":"Block","src":"6381:101:8","statements":[{"expression":{"arguments":[{"id":1165,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1157,"src":"6419:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1166,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1159,"src":"6427:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"hexValue":"416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6433:41:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""},"value":"Address: low-level delegate call failed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_stringliteral_9fdcd12e4b726339b32a442b0a448365d5d85c96b2d2cff917b4f66c63110398","typeString":"literal_string \"Address: low-level delegate call failed\""}],"id":1164,"name":"functionDelegateCall","nodeType":"Identifier","overloadedDeclarations":[1171,1206],"referencedDeclaration":1206,"src":"6398:20:8","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (address,bytes memory,string memory) returns (bytes memory)"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6398:77:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1163,"id":1169,"nodeType":"Return","src":"6391:84:8"}]},"documentation":{"id":1155,"nodeType":"StructuredDocumentation","src":"6111:168:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1157,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1171,"src":"6314:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1156,"name":"address","nodeType":"ElementaryTypeName","src":"6314:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1159,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1171,"src":"6330:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1158,"name":"bytes","nodeType":"ElementaryTypeName","src":"6330:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6313:35:8"},"returnParameters":{"id":1163,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1162,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1171,"src":"6367:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1161,"name":"bytes","nodeType":"ElementaryTypeName","src":"6367:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6366:14:8"},"scope":1237,"src":"6284:198:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1205,"nodeType":"Block","src":"6793:292:8","statements":[{"expression":{"arguments":[{"arguments":[{"id":1185,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6822:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1184,"name":"isContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":961,"src":"6811:10:8","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$returns$_t_bool_$","typeString":"function (address) view returns (bool)"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6811:18:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416464726573733a2064656c65676174652063616c6c20746f206e6f6e2d636f6e7472616374","id":1187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6831:40:8","typeDescriptions":{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""},"value":"Address: delegate call to non-contract"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b94ded0918034cf8f896e19fa3cfdef1188cd569c577264a3622e49152f88520","typeString":"literal_string \"Address: delegate call to non-contract\""}],"id":1183,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6803:7:8","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6803:69:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1189,"nodeType":"ExpressionStatement","src":"6803:69:8"},{"assignments":[1191,1193],"declarations":[{"constant":false,"id":1191,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1205,"src":"6943:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1190,"name":"bool","nodeType":"ElementaryTypeName","src":"6943:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1193,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1205,"src":"6957:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1192,"name":"bytes","nodeType":"ElementaryTypeName","src":"6957:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1198,"initialValue":{"arguments":[{"id":1196,"name":"data","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1176,"src":"7004:4:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"expression":{"id":1194,"name":"target","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"6984:6:8","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1195,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"delegatecall","nodeType":"MemberAccess","src":"6984:19:8","typeDescriptions":{"typeIdentifier":"t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$","typeString":"function (bytes memory) returns (bool,bytes memory)"}},"id":1197,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6984:25:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_bytes_memory_ptr_$","typeString":"tuple(bool,bytes memory)"}},"nodeType":"VariableDeclarationStatement","src":"6942:67:8"},{"expression":{"arguments":[{"id":1200,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1191,"src":"7044:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":1201,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1193,"src":"7053:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},{"id":1202,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1178,"src":"7065:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1199,"name":"_verifyCallResult","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1236,"src":"7026:17:8","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$","typeString":"function (bool,bytes memory,string memory) pure returns (bytes memory)"}},"id":1203,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7026:52:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1182,"id":1204,"nodeType":"Return","src":"7019:59:8"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"6488:175:8","text":" @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a delegate call.\n _Available since v3.4._"},"id":1206,"implemented":true,"kind":"function","modifiers":[],"name":"functionDelegateCall","nodeType":"FunctionDefinition","parameters":{"id":1179,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"target","nodeType":"VariableDeclaration","scope":1206,"src":"6698:14:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1173,"name":"address","nodeType":"ElementaryTypeName","src":"6698:7:8","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1176,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1206,"src":"6714:17:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1175,"name":"bytes","nodeType":"ElementaryTypeName","src":"6714:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1178,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1206,"src":"6733:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1177,"name":"string","nodeType":"ElementaryTypeName","src":"6733:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6697:63:8"},"returnParameters":{"id":1182,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1181,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1206,"src":"6779:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1180,"name":"bytes","nodeType":"ElementaryTypeName","src":"6779:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"6778:14:8"},"scope":1237,"src":"6668:417:8","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1235,"nodeType":"Block","src":"7220:596:8","statements":[{"condition":{"id":1217,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1208,"src":"7234:7:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1233,"nodeType":"Block","src":"7291:519:8","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1221,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"7375:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1222,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7375:17:8","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7395:1:8","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7375:21:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":1231,"nodeType":"Block","src":"7747:53:8","statements":[{"expression":{"arguments":[{"id":1228,"name":"errorMessage","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1212,"src":"7772:12:8","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":1227,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"7765:6:8","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7765:20:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1230,"nodeType":"ExpressionStatement","src":"7765:20:8"}]},"id":1232,"nodeType":"IfStatement","src":"7371:429:8","trueBody":{"id":1226,"nodeType":"Block","src":"7398:343:8","statements":[{"AST":{"nodeType":"YulBlock","src":"7582:145:8","statements":[{"nodeType":"YulVariableDeclaration","src":"7604:40:8","value":{"arguments":[{"name":"returndata","nodeType":"YulIdentifier","src":"7633:10:8"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"7627:5:8"},"nodeType":"YulFunctionCall","src":"7627:17:8"},"variables":[{"name":"returndata_size","nodeType":"YulTypedName","src":"7608:15:8","type":""}]},{"expression":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7676:2:8","type":"","value":"32"},{"name":"returndata","nodeType":"YulIdentifier","src":"7680:10:8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7672:3:8"},"nodeType":"YulFunctionCall","src":"7672:19:8"},{"name":"returndata_size","nodeType":"YulIdentifier","src":"7693:15:8"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"7665:6:8"},"nodeType":"YulFunctionCall","src":"7665:44:8"},"nodeType":"YulExpressionStatement","src":"7665:44:8"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":1210,"isOffset":false,"isSlot":false,"src":"7633:10:8","valueSize":1},{"declaration":1210,"isOffset":false,"isSlot":false,"src":"7680:10:8","valueSize":1}],"id":1225,"nodeType":"InlineAssembly","src":"7573:154:8"}]}}]},"id":1234,"nodeType":"IfStatement","src":"7230:580:8","trueBody":{"id":1220,"nodeType":"Block","src":"7243:42:8","statements":[{"expression":{"id":1218,"name":"returndata","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1210,"src":"7264:10:8","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"functionReturnParameters":1216,"id":1219,"nodeType":"Return","src":"7257:17:8"}]}}]},"id":1236,"implemented":true,"kind":"function","modifiers":[],"name":"_verifyCallResult","nodeType":"FunctionDefinition","parameters":{"id":1213,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1208,"mutability":"mutable","name":"success","nodeType":"VariableDeclaration","scope":1236,"src":"7118:12:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1207,"name":"bool","nodeType":"ElementaryTypeName","src":"7118:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1210,"mutability":"mutable","name":"returndata","nodeType":"VariableDeclaration","scope":1236,"src":"7132:23:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1209,"name":"bytes","nodeType":"ElementaryTypeName","src":"7132:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":1212,"mutability":"mutable","name":"errorMessage","nodeType":"VariableDeclaration","scope":1236,"src":"7157:26:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1211,"name":"string","nodeType":"ElementaryTypeName","src":"7157:6:8","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7117:67:8"},"returnParameters":{"id":1216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1215,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1236,"src":"7206:12:8","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1214,"name":"bytes","nodeType":"ElementaryTypeName","src":"7206:5:8","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"7205:14:8"},"scope":1237,"src":"7091:725:8","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":1238,"src":"134:7684:8"}],"src":"33:7786:8"},"id":8},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1260]},"id":1261,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1239,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:9"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1260,"linearizedBaseContracts":[1260],"name":"Context","nodeType":"ContractDefinition","nodes":[{"body":{"id":1247,"nodeType":"Block","src":"668:34:9","statements":[{"expression":{"expression":{"id":1244,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"685:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"685:10:9","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"functionReturnParameters":1243,"id":1246,"nodeType":"Return","src":"678:17:9"}]},"id":1248,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nodeType":"FunctionDefinition","parameters":{"id":1240,"nodeType":"ParameterList","parameters":[],"src":"617:2:9"},"returnParameters":{"id":1243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1242,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1248,"src":"651:15:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":1241,"name":"address","nodeType":"ElementaryTypeName","src":"651:15:9","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"650:17:9"},"scope":1260,"src":"598:104:9","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1258,"nodeType":"Block","src":"773:165:9","statements":[{"expression":{"id":1253,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"783:4:9","typeDescriptions":{"typeIdentifier":"t_contract$_Context_$1260","typeString":"contract Context"}},"id":1254,"nodeType":"ExpressionStatement","src":"783:4:9"},{"expression":{"expression":{"id":1255,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"923:3:9","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"923:8:9","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1252,"id":1257,"nodeType":"Return","src":"916:15:9"}]},"id":1259,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nodeType":"FunctionDefinition","parameters":{"id":1249,"nodeType":"ParameterList","parameters":[],"src":"725:2:9"},"returnParameters":{"id":1252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1251,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1259,"src":"759:12:9","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1250,"name":"bytes","nodeType":"ElementaryTypeName","src":"759:5:9","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"758:14:9"},"scope":1260,"src":"708:230:9","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1261,"src":"566:374:9"}],"src":"33:908:9"},"id":9},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","exportedSymbols":{"ReentrancyGuard":[1300]},"id":1301,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1262,"literals":["solidity",">=","0.6",".0","<","0.8",".0"],"nodeType":"PragmaDirective","src":"33:31:10"},{"abstract":true,"baseContracts":[],"contractDependencies":[],"contractKind":"contract","documentation":{"id":1263,"nodeType":"StructuredDocumentation","src":"66:750:10","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"id":1300,"linearizedBaseContracts":[1300],"name":"ReentrancyGuard","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1266,"mutability":"constant","name":"_NOT_ENTERED","nodeType":"VariableDeclaration","scope":1300,"src":"1605:41:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1264,"name":"uint256","nodeType":"ElementaryTypeName","src":"1605:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":1265,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"constant":true,"id":1269,"mutability":"constant","name":"_ENTERED","nodeType":"VariableDeclaration","scope":1300,"src":"1652:37:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1267,"name":"uint256","nodeType":"ElementaryTypeName","src":"1652:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":1268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1688:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"constant":false,"id":1271,"mutability":"mutable","name":"_status","nodeType":"VariableDeclaration","scope":1300,"src":"1696:23:10","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1270,"name":"uint256","nodeType":"ElementaryTypeName","src":"1696:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"body":{"id":1278,"nodeType":"Block","src":"1750:39:10","statements":[{"expression":{"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1274,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"1760:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1275,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"1770:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1760:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1277,"nodeType":"ExpressionStatement","src":"1760:22:10"}]},"id":1279,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":1272,"nodeType":"ParameterList","parameters":[],"src":"1738:2:10"},"returnParameters":{"id":1273,"nodeType":"ParameterList","parameters":[],"src":"1750:0:10"},"scope":1300,"src":"1726:63:10","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":1298,"nodeType":"Block","src":"2188:421:10","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1283,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"2277:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":1284,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2288:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2277:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5265656e7472616e637947756172643a207265656e7472616e742063616c6c","id":1286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2298:33:10","typeDescriptions":{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""},"value":"ReentrancyGuard: reentrant call"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619","typeString":"literal_string \"ReentrancyGuard: reentrant call\""}],"id":1282,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2269:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2269:63:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1288,"nodeType":"ExpressionStatement","src":"2269:63:10"},{"expression":{"id":1291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1289,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"2407:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1290,"name":"_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"2417:8:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2407:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1292,"nodeType":"ExpressionStatement","src":"2407:18:10"},{"id":1293,"nodeType":"PlaceholderStatement","src":"2436:1:10"},{"expression":{"id":1296,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1294,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1271,"src":"2580:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1295,"name":"_NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"2590:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2580:22:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1297,"nodeType":"ExpressionStatement","src":"2580:22:10"}]},"documentation":{"id":1280,"nodeType":"StructuredDocumentation","src":"1795:364:10","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and make it call a\n `private` function that does the actual work."},"id":1299,"name":"nonReentrant","nodeType":"ModifierDefinition","parameters":{"id":1281,"nodeType":"ParameterList","parameters":[],"src":"2185:2:10"},"src":"2164:445:10","virtual":false,"visibility":"internal"}],"scope":1301,"src":"817:1794:10"}],"src":"33:2579:10"},"id":10},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","exportedSymbols":{"IUniswapV3Factory":[1383]},"id":1384,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1302,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:11"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1303,"nodeType":"StructuredDocumentation","src":"71:163:11","text":"@title The interface for the Uniswap V3 Factory\n @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees"},"fullyImplemented":false,"id":1383,"linearizedBaseContracts":[1383],"name":"IUniswapV3Factory","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1304,"nodeType":"StructuredDocumentation","src":"268:185:11","text":"@notice Emitted when the owner of the factory is changed\n @param oldOwner The owner before the owner was changed\n @param newOwner The owner after the owner was changed"},"id":1310,"name":"OwnerChanged","nodeType":"EventDefinition","parameters":{"id":1309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1306,"indexed":true,"mutability":"mutable","name":"oldOwner","nodeType":"VariableDeclaration","scope":1310,"src":"477:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1305,"name":"address","nodeType":"ElementaryTypeName","src":"477:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1308,"indexed":true,"mutability":"mutable","name":"newOwner","nodeType":"VariableDeclaration","scope":1310,"src":"503:24:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1307,"name":"address","nodeType":"ElementaryTypeName","src":"503:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"476:52:11"},"src":"458:71:11"},{"anonymous":false,"documentation":{"id":1311,"nodeType":"StructuredDocumentation","src":"535:421:11","text":"@notice Emitted when a pool is created\n @param token0 The first token of the pool by address sort order\n @param token1 The second token of the pool by address sort order\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks\n @param pool The address of the created pool"},"id":1323,"name":"PoolCreated","nodeType":"EventDefinition","parameters":{"id":1322,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1313,"indexed":true,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":1323,"src":"988:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1312,"name":"address","nodeType":"ElementaryTypeName","src":"988:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1315,"indexed":true,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":1323,"src":"1020:22:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1314,"name":"address","nodeType":"ElementaryTypeName","src":"1020:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1317,"indexed":true,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":1323,"src":"1052:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1316,"name":"uint24","nodeType":"ElementaryTypeName","src":"1052:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1319,"indexed":false,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":1323,"src":"1080:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1318,"name":"int24","nodeType":"ElementaryTypeName","src":"1080:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1321,"indexed":false,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":1323,"src":"1107:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1320,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"978:147:11"},"src":"961:165:11"},{"anonymous":false,"documentation":{"id":1324,"nodeType":"StructuredDocumentation","src":"1132:275:11","text":"@notice Emitted when a new fee amount is enabled for pool creation via the factory\n @param fee The enabled fee, denominated in hundredths of a bip\n @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee"},"id":1330,"name":"FeeAmountEnabled","nodeType":"EventDefinition","parameters":{"id":1329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1326,"indexed":true,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":1330,"src":"1435:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1325,"name":"uint24","nodeType":"ElementaryTypeName","src":"1435:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1328,"indexed":true,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":1330,"src":"1455:25:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1327,"name":"int24","nodeType":"ElementaryTypeName","src":"1455:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1434:47:11"},"src":"1412:70:11"},{"documentation":{"id":1331,"nodeType":"StructuredDocumentation","src":"1488:163:11","text":"@notice Returns the current owner of the factory\n @dev Can be changed by the current owner via setOwner\n @return The address of the factory owner"},"functionSelector":"8da5cb5b","id":1336,"implemented":false,"kind":"function","modifiers":[],"name":"owner","nodeType":"FunctionDefinition","parameters":{"id":1332,"nodeType":"ParameterList","parameters":[],"src":"1670:2:11"},"returnParameters":{"id":1335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1334,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1336,"src":"1696:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1333,"name":"address","nodeType":"ElementaryTypeName","src":"1696:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1695:9:11"},"scope":1383,"src":"1656:49:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1337,"nodeType":"StructuredDocumentation","src":"1711:348:11","text":"@notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\n @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\n @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\n @return The tick spacing"},"functionSelector":"22afcccb","id":1344,"implemented":false,"kind":"function","modifiers":[],"name":"feeAmountTickSpacing","nodeType":"FunctionDefinition","parameters":{"id":1340,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1339,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":1344,"src":"2094:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1338,"name":"uint24","nodeType":"ElementaryTypeName","src":"2094:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2093:12:11"},"returnParameters":{"id":1343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1342,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1344,"src":"2129:5:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1341,"name":"int24","nodeType":"ElementaryTypeName","src":"2129:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2128:7:11"},"scope":1383,"src":"2064:72:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1345,"nodeType":"StructuredDocumentation","src":"2142:471:11","text":"@notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\n @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\n @param tokenA The contract address of either token0 or token1\n @param tokenB The contract address of the other token\n @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\n @return pool The pool address"},"functionSelector":"1698ee82","id":1356,"implemented":false,"kind":"function","modifiers":[],"name":"getPool","nodeType":"FunctionDefinition","parameters":{"id":1352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1347,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":1356,"src":"2644:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1346,"name":"address","nodeType":"ElementaryTypeName","src":"2644:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1349,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":1356,"src":"2668:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1348,"name":"address","nodeType":"ElementaryTypeName","src":"2668:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1351,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":1356,"src":"2692:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1350,"name":"uint24","nodeType":"ElementaryTypeName","src":"2692:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"2634:74:11"},"returnParameters":{"id":1355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1354,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":1356,"src":"2732:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1353,"name":"address","nodeType":"ElementaryTypeName","src":"2732:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2731:14:11"},"scope":1383,"src":"2618:128:11","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1357,"nodeType":"StructuredDocumentation","src":"2752:554:11","text":"@notice Creates a pool for the given two tokens and fee\n @param tokenA One of the two tokens in the desired pool\n @param tokenB The other of the two tokens in the desired pool\n @param fee The desired fee for the pool\n @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\n from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\n are invalid.\n @return pool The address of the newly created pool"},"functionSelector":"a1671295","id":1368,"implemented":false,"kind":"function","modifiers":[],"name":"createPool","nodeType":"FunctionDefinition","parameters":{"id":1364,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1359,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":1368,"src":"3340:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1358,"name":"address","nodeType":"ElementaryTypeName","src":"3340:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1361,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":1368,"src":"3364:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1360,"name":"address","nodeType":"ElementaryTypeName","src":"3364:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1363,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":1368,"src":"3388:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1362,"name":"uint24","nodeType":"ElementaryTypeName","src":"3388:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"3330:74:11"},"returnParameters":{"id":1367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1366,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":1368,"src":"3423:12:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1365,"name":"address","nodeType":"ElementaryTypeName","src":"3423:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3422:14:11"},"scope":1383,"src":"3311:126:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1369,"nodeType":"StructuredDocumentation","src":"3443:144:11","text":"@notice Updates the owner of the factory\n @dev Must be called by the current owner\n @param _owner The new owner of the factory"},"functionSelector":"13af4035","id":1374,"implemented":false,"kind":"function","modifiers":[],"name":"setOwner","nodeType":"FunctionDefinition","parameters":{"id":1372,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1371,"mutability":"mutable","name":"_owner","nodeType":"VariableDeclaration","scope":1374,"src":"3610:14:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1370,"name":"address","nodeType":"ElementaryTypeName","src":"3610:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3609:16:11"},"returnParameters":{"id":1373,"nodeType":"ParameterList","parameters":[],"src":"3634:0:11"},"scope":1383,"src":"3592:43:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1375,"nodeType":"StructuredDocumentation","src":"3641:326:11","text":"@notice Enables a fee amount with the given tickSpacing\n @dev Fee amounts may never be removed once enabled\n @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\n @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount"},"functionSelector":"8a7c195f","id":1382,"implemented":false,"kind":"function","modifiers":[],"name":"enableFeeAmount","nodeType":"FunctionDefinition","parameters":{"id":1380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1377,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":1382,"src":"3997:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1376,"name":"uint24","nodeType":"ElementaryTypeName","src":"3997:6:11","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":1379,"mutability":"mutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":1382,"src":"4009:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1378,"name":"int24","nodeType":"ElementaryTypeName","src":"4009:5:11","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3996:31:11"},"returnParameters":{"id":1381,"nodeType":"ParameterList","parameters":[],"src":"4036:0:11"},"scope":1383,"src":"3972:65:11","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1384,"src":"234:3805:11"}],"src":"45:3995:11"},"id":11},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","exportedSymbols":{"IUniswapV3Pool":[1405],"IUniswapV3PoolActions":[1529],"IUniswapV3PoolDerivedState":[1560],"IUniswapV3PoolEvents":[1679],"IUniswapV3PoolImmutables":[1719],"IUniswapV3PoolOwnerActions":[1745],"IUniswapV3PoolState":[1853]},"id":1406,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1385,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:12"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","file":"./pool/IUniswapV3PoolImmutables.sol","id":1386,"nodeType":"ImportDirective","scope":1406,"sourceUnit":1720,"src":"71:45:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","file":"./pool/IUniswapV3PoolState.sol","id":1387,"nodeType":"ImportDirective","scope":1406,"sourceUnit":1854,"src":"117:40:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","file":"./pool/IUniswapV3PoolDerivedState.sol","id":1388,"nodeType":"ImportDirective","scope":1406,"sourceUnit":1561,"src":"158:47:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","file":"./pool/IUniswapV3PoolActions.sol","id":1389,"nodeType":"ImportDirective","scope":1406,"sourceUnit":1530,"src":"206:42:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","file":"./pool/IUniswapV3PoolOwnerActions.sol","id":1390,"nodeType":"ImportDirective","scope":1406,"sourceUnit":1746,"src":"249:47:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","file":"./pool/IUniswapV3PoolEvents.sol","id":1391,"nodeType":"ImportDirective","scope":1406,"sourceUnit":1680,"src":"297:41:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1393,"name":"IUniswapV3PoolImmutables","nodeType":"UserDefinedTypeName","referencedDeclaration":1719,"src":"637:24:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3PoolImmutables_$1719","typeString":"contract IUniswapV3PoolImmutables"}},"id":1394,"nodeType":"InheritanceSpecifier","src":"637:24:12"},{"baseName":{"id":1395,"name":"IUniswapV3PoolState","nodeType":"UserDefinedTypeName","referencedDeclaration":1853,"src":"667:19:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3PoolState_$1853","typeString":"contract IUniswapV3PoolState"}},"id":1396,"nodeType":"InheritanceSpecifier","src":"667:19:12"},{"baseName":{"id":1397,"name":"IUniswapV3PoolDerivedState","nodeType":"UserDefinedTypeName","referencedDeclaration":1560,"src":"692:26:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3PoolDerivedState_$1560","typeString":"contract IUniswapV3PoolDerivedState"}},"id":1398,"nodeType":"InheritanceSpecifier","src":"692:26:12"},{"baseName":{"id":1399,"name":"IUniswapV3PoolActions","nodeType":"UserDefinedTypeName","referencedDeclaration":1529,"src":"724:21:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3PoolActions_$1529","typeString":"contract IUniswapV3PoolActions"}},"id":1400,"nodeType":"InheritanceSpecifier","src":"724:21:12"},{"baseName":{"id":1401,"name":"IUniswapV3PoolOwnerActions","nodeType":"UserDefinedTypeName","referencedDeclaration":1745,"src":"751:26:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3PoolOwnerActions_$1745","typeString":"contract IUniswapV3PoolOwnerActions"}},"id":1402,"nodeType":"InheritanceSpecifier","src":"751:26:12"},{"baseName":{"id":1403,"name":"IUniswapV3PoolEvents","nodeType":"UserDefinedTypeName","referencedDeclaration":1679,"src":"783:20:12","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3PoolEvents_$1679","typeString":"contract IUniswapV3PoolEvents"}},"id":1404,"nodeType":"InheritanceSpecifier","src":"783:20:12"}],"contractDependencies":[1529,1560,1679,1719,1745,1853],"contractKind":"interface","documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"340:265:12","text":"@title The interface for a Uniswap V3 Pool\n @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\n to the ERC20 specification\n @dev The pool interface is broken up into many smaller pieces"},"fullyImplemented":false,"id":1405,"linearizedBaseContracts":[1405,1679,1745,1529,1560,1853,1719],"name":"IUniswapV3Pool","nodeType":"ContractDefinition","nodes":[],"scope":1406,"src":"605:203:12"}],"src":"45:764:12"},"id":12},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol","exportedSymbols":{"IUniswapV3MintCallback":[1419]},"id":1420,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1407,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:13"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1408,"nodeType":"StructuredDocumentation","src":"71:144:13","text":"@title Callback for IUniswapV3PoolActions#mint\n @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface"},"fullyImplemented":false,"id":1419,"linearizedBaseContracts":[1419],"name":"IUniswapV3MintCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1409,"nodeType":"StructuredDocumentation","src":"254:585:13","text":"@notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\n @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n @param amount0Owed The amount of token0 due to the pool for the minted liquidity\n @param amount1Owed The amount of token1 due to the pool for the minted liquidity\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#mint call"},"functionSelector":"d3487997","id":1418,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3MintCallback","nodeType":"FunctionDefinition","parameters":{"id":1416,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1411,"mutability":"mutable","name":"amount0Owed","nodeType":"VariableDeclaration","scope":1418,"src":"884:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1410,"name":"uint256","nodeType":"ElementaryTypeName","src":"884:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1413,"mutability":"mutable","name":"amount1Owed","nodeType":"VariableDeclaration","scope":1418,"src":"913:19:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1412,"name":"uint256","nodeType":"ElementaryTypeName","src":"913:7:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1415,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1418,"src":"942:19:13","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1414,"name":"bytes","nodeType":"ElementaryTypeName","src":"942:5:13","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"874:93:13"},"returnParameters":{"id":1417,"nodeType":"ParameterList","parameters":[],"src":"976:0:13"},"scope":1419,"src":"844:133:13","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1420,"src":"215:764:13"}],"src":"45:935:13"},"id":13},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","exportedSymbols":{"IUniswapV3SwapCallback":[1433]},"id":1434,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1421,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:14"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1422,"nodeType":"StructuredDocumentation","src":"71:144:14","text":"@title Callback for IUniswapV3PoolActions#swap\n @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface"},"fullyImplemented":false,"id":1433,"linearizedBaseContracts":[1433],"name":"IUniswapV3SwapCallback","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1423,"nodeType":"StructuredDocumentation","src":"254:898:14","text":"@notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\n @dev In the implementation you must pay the pool tokens owed for the swap.\n The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\n amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\n @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token0 to the pool.\n @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\n the end of the swap. If positive, the callback must send that amount of token1 to the pool.\n @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call"},"functionSelector":"fa461e33","id":1432,"implemented":false,"kind":"function","modifiers":[],"name":"uniswapV3SwapCallback","nodeType":"FunctionDefinition","parameters":{"id":1430,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1425,"mutability":"mutable","name":"amount0Delta","nodeType":"VariableDeclaration","scope":1432,"src":"1197:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1424,"name":"int256","nodeType":"ElementaryTypeName","src":"1197:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1427,"mutability":"mutable","name":"amount1Delta","nodeType":"VariableDeclaration","scope":1432,"src":"1226:19:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1426,"name":"int256","nodeType":"ElementaryTypeName","src":"1226:6:14","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1429,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1432,"src":"1255:19:14","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1428,"name":"bytes","nodeType":"ElementaryTypeName","src":"1255:5:14","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1187:93:14"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[],"src":"1289:0:14"},"scope":1433,"src":"1157:133:14","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1434,"src":"215:1077:14"}],"src":"45:1248:14"},"id":14},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol","exportedSymbols":{"IUniswapV3PoolActions":[1529]},"id":1530,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1435,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:15"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1436,"nodeType":"StructuredDocumentation","src":"71:102:15","text":"@title Permissionless pool actions\n @notice Contains pool methods that can be called by anyone"},"fullyImplemented":false,"id":1529,"linearizedBaseContracts":[1529],"name":"IUniswapV3PoolActions","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1437,"nodeType":"StructuredDocumentation","src":"211:206:15","text":"@notice Sets the initial price for the pool\n @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\n @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96"},"functionSelector":"f637731d","id":1442,"implemented":false,"kind":"function","modifiers":[],"name":"initialize","nodeType":"FunctionDefinition","parameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":1442,"src":"442:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1438,"name":"uint160","nodeType":"ElementaryTypeName","src":"442:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"441:22:15"},"returnParameters":{"id":1441,"nodeType":"ParameterList","parameters":[],"src":"472:0:15"},"scope":1529,"src":"422:51:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1443,"nodeType":"StructuredDocumentation","src":"479:1029:15","text":"@notice Adds liquidity for the given recipient/tickLower/tickUpper position\n @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\n in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\n on tickLower, tickUpper, the amount of liquidity, and the current price.\n @param recipient The address for which the liquidity will be created\n @param tickLower The lower tick of the position in which to add liquidity\n @param tickUpper The upper tick of the position in which to add liquidity\n @param amount The amount of liquidity to mint\n @param data Any data that should be passed through to the callback\n @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\n @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"},"functionSelector":"3c8a7d8d","id":1460,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1460,"src":"1536:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1444,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1447,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1460,"src":"1563:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1446,"name":"int24","nodeType":"ElementaryTypeName","src":"1563:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1449,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1460,"src":"1588:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1448,"name":"int24","nodeType":"ElementaryTypeName","src":"1588:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1451,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1460,"src":"1613:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1450,"name":"uint128","nodeType":"ElementaryTypeName","src":"1613:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1453,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1460,"src":"1637:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1452,"name":"bytes","nodeType":"ElementaryTypeName","src":"1637:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"1526:136:15"},"returnParameters":{"id":1459,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1456,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1460,"src":"1681:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1455,"name":"uint256","nodeType":"ElementaryTypeName","src":"1681:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1458,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1460,"src":"1698:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1457,"name":"uint256","nodeType":"ElementaryTypeName","src":"1698:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1680:34:15"},"scope":1529,"src":"1513:202:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1461,"nodeType":"StructuredDocumentation","src":"1721:1053:15","text":"@notice Collects tokens owed to a position\n @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\n Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\n amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\n actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\n @param recipient The address which should receive the fees collected\n @param tickLower The lower tick of the position for which to collect fees\n @param tickUpper The upper tick of the position for which to collect fees\n @param amount0Requested How much token0 should be withdrawn from the fees owed\n @param amount1Requested How much token1 should be withdrawn from the fees owed\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"4f1eb3d8","id":1478,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nodeType":"FunctionDefinition","parameters":{"id":1472,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1463,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1478,"src":"2805:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1462,"name":"address","nodeType":"ElementaryTypeName","src":"2805:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1465,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1478,"src":"2832:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1464,"name":"int24","nodeType":"ElementaryTypeName","src":"2832:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1467,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1478,"src":"2857:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1466,"name":"int24","nodeType":"ElementaryTypeName","src":"2857:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1469,"mutability":"mutable","name":"amount0Requested","nodeType":"VariableDeclaration","scope":1478,"src":"2882:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1468,"name":"uint128","nodeType":"ElementaryTypeName","src":"2882:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1471,"mutability":"mutable","name":"amount1Requested","nodeType":"VariableDeclaration","scope":1478,"src":"2916:24:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1470,"name":"uint128","nodeType":"ElementaryTypeName","src":"2916:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2795:151:15"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1474,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1478,"src":"2965:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1473,"name":"uint128","nodeType":"ElementaryTypeName","src":"2965:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1476,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1478,"src":"2982:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1475,"name":"uint128","nodeType":"ElementaryTypeName","src":"2982:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2964:34:15"},"scope":1529,"src":"2779:220:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1479,"nodeType":"StructuredDocumentation","src":"3005:631:15","text":"@notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\n @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\n @dev Fees must be collected separately via a call to #collect\n @param tickLower The lower tick of the position for which to burn liquidity\n @param tickUpper The upper tick of the position for which to burn liquidity\n @param amount How much liquidity to burn\n @return amount0 The amount of token0 sent to the recipient\n @return amount1 The amount of token1 sent to the recipient"},"functionSelector":"a34123a7","id":1492,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":1486,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1481,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1492,"src":"3664:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1480,"name":"int24","nodeType":"ElementaryTypeName","src":"3664:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1483,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1492,"src":"3689:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1482,"name":"int24","nodeType":"ElementaryTypeName","src":"3689:5:15","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1485,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1492,"src":"3714:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1484,"name":"uint128","nodeType":"ElementaryTypeName","src":"3714:7:15","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3654:80:15"},"returnParameters":{"id":1491,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1488,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1492,"src":"3753:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1487,"name":"uint256","nodeType":"ElementaryTypeName","src":"3753:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1490,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1492,"src":"3770:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1489,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3752:34:15"},"scope":1529,"src":"3641:146:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1493,"nodeType":"StructuredDocumentation","src":"3793:1015:15","text":"@notice Swap token0 for token1, or token1 for token0\n @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\n @param recipient The address to receive the output of the swap\n @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\n @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\n @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\n value after the swap. If one for zero, the price cannot be greater than this value after the swap\n @param data Any data to be passed through to the callback\n @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\n @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive"},"functionSelector":"128acb08","id":1510,"implemented":false,"kind":"function","modifiers":[],"name":"swap","nodeType":"FunctionDefinition","parameters":{"id":1504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1495,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1510,"src":"4836:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1494,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1497,"mutability":"mutable","name":"zeroForOne","nodeType":"VariableDeclaration","scope":1510,"src":"4863:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1496,"name":"bool","nodeType":"ElementaryTypeName","src":"4863:4:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1499,"mutability":"mutable","name":"amountSpecified","nodeType":"VariableDeclaration","scope":1510,"src":"4888:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1498,"name":"int256","nodeType":"ElementaryTypeName","src":"4888:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1501,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":1510,"src":"4920:25:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1500,"name":"uint160","nodeType":"ElementaryTypeName","src":"4920:7:15","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1503,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1510,"src":"4955:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1502,"name":"bytes","nodeType":"ElementaryTypeName","src":"4955:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"4826:154:15"},"returnParameters":{"id":1509,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1506,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1510,"src":"4999:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1505,"name":"int256","nodeType":"ElementaryTypeName","src":"4999:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1508,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1510,"src":"5015:14:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1507,"name":"int256","nodeType":"ElementaryTypeName","src":"5015:6:15","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"4998:32:15"},"scope":1529,"src":"4813:218:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1511,"nodeType":"StructuredDocumentation","src":"5037:657:15","text":"@notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\n @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\n @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\n with 0 amount{0,1} and sending the donation amount(s) from the callback\n @param recipient The address which will receive the token0 and token1 amounts\n @param amount0 The amount of token0 to send\n @param amount1 The amount of token1 to send\n @param data Any data to be passed through to the callback"},"functionSelector":"490e6cbc","id":1522,"implemented":false,"kind":"function","modifiers":[],"name":"flash","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1513,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1522,"src":"5723:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1512,"name":"address","nodeType":"ElementaryTypeName","src":"5723:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1515,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1522,"src":"5750:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1514,"name":"uint256","nodeType":"ElementaryTypeName","src":"5750:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1517,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1522,"src":"5775:15:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1516,"name":"uint256","nodeType":"ElementaryTypeName","src":"5775:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1519,"mutability":"mutable","name":"data","nodeType":"VariableDeclaration","scope":1522,"src":"5800:19:15","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1518,"name":"bytes","nodeType":"ElementaryTypeName","src":"5800:5:15","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"5713:112:15"},"returnParameters":{"id":1521,"nodeType":"ParameterList","parameters":[],"src":"5834:0:15"},"scope":1529,"src":"5699:136:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1523,"nodeType":"StructuredDocumentation","src":"5841:367:15","text":"@notice Increase the maximum number of price and liquidity observations that this pool will store\n @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\n the input observationCardinalityNext.\n @param observationCardinalityNext The desired minimum number of observations for the pool to store"},"functionSelector":"32148f67","id":1528,"implemented":false,"kind":"function","modifiers":[],"name":"increaseObservationCardinalityNext","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"observationCardinalityNext","nodeType":"VariableDeclaration","scope":1528,"src":"6257:33:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1524,"name":"uint16","nodeType":"ElementaryTypeName","src":"6257:6:15","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"6256:35:15"},"returnParameters":{"id":1527,"nodeType":"ParameterList","parameters":[],"src":"6300:0:15"},"scope":1529,"src":"6213:88:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1530,"src":"173:6130:15"}],"src":"45:6259:15"},"id":15},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol","exportedSymbols":{"IUniswapV3PoolDerivedState":[1560]},"id":1561,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1531,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:16"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1532,"nodeType":"StructuredDocumentation","src":"71:222:16","text":"@title Pool state that is not stored\n @notice Contains view functions to provide information about the pool that is computed rather than stored on the\n blockchain. The functions here may have variable gas costs."},"fullyImplemented":false,"id":1560,"linearizedBaseContracts":[1560],"name":"IUniswapV3PoolDerivedState","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1533,"nodeType":"StructuredDocumentation","src":"336:1045:16","text":"@notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\n @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\n the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\n you must call it with secondsAgos = [3600, 0].\n @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\n log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\n @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\n @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\n @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\n timestamp"},"functionSelector":"883bdbfd","id":1545,"implemented":false,"kind":"function","modifiers":[],"name":"observe","nodeType":"FunctionDefinition","parameters":{"id":1537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1536,"mutability":"mutable","name":"secondsAgos","nodeType":"VariableDeclaration","scope":1545,"src":"1403:29:16","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_calldata_ptr","typeString":"uint32[]"},"typeName":{"baseType":{"id":1534,"name":"uint32","nodeType":"ElementaryTypeName","src":"1403:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"id":1535,"nodeType":"ArrayTypeName","src":"1403:8:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint32_$dyn_storage_ptr","typeString":"uint32[]"}},"visibility":"internal"}],"src":"1402:31:16"},"returnParameters":{"id":1544,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1540,"mutability":"mutable","name":"tickCumulatives","nodeType":"VariableDeclaration","scope":1545,"src":"1481:30:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_memory_ptr","typeString":"int56[]"},"typeName":{"baseType":{"id":1538,"name":"int56","nodeType":"ElementaryTypeName","src":"1481:5:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":1539,"nodeType":"ArrayTypeName","src":"1481:7:16","typeDescriptions":{"typeIdentifier":"t_array$_t_int56_$dyn_storage_ptr","typeString":"int56[]"}},"visibility":"internal"},{"constant":false,"id":1543,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128s","nodeType":"VariableDeclaration","scope":1545,"src":"1513:51:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_memory_ptr","typeString":"uint160[]"},"typeName":{"baseType":{"id":1541,"name":"uint160","nodeType":"ElementaryTypeName","src":"1513:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":1542,"nodeType":"ArrayTypeName","src":"1513:9:16","typeDescriptions":{"typeIdentifier":"t_array$_t_uint160_$dyn_storage_ptr","typeString":"uint160[]"}},"visibility":"internal"}],"src":"1480:85:16"},"scope":1560,"src":"1386:180:16","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1546,"nodeType":"StructuredDocumentation","src":"1572:771:16","text":"@notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\n @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\n I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\n snapshot is taken and the second snapshot is taken.\n @param tickLower The lower tick of the range\n @param tickUpper The upper tick of the range\n @return tickCumulativeInside The snapshot of the tick accumulator for the range\n @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\n @return secondsInside The snapshot of seconds per liquidity for the range"},"functionSelector":"a38807f2","id":1559,"implemented":false,"kind":"function","modifiers":[],"name":"snapshotCumulativesInside","nodeType":"FunctionDefinition","parameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1548,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1559,"src":"2383:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1547,"name":"int24","nodeType":"ElementaryTypeName","src":"2383:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1550,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1559,"src":"2400:15:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1549,"name":"int24","nodeType":"ElementaryTypeName","src":"2400:5:16","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"2382:34:16"},"returnParameters":{"id":1558,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1553,"mutability":"mutable","name":"tickCumulativeInside","nodeType":"VariableDeclaration","scope":1559,"src":"2477:26:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1552,"name":"int56","nodeType":"ElementaryTypeName","src":"2477:5:16","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":1555,"mutability":"mutable","name":"secondsPerLiquidityInsideX128","nodeType":"VariableDeclaration","scope":1559,"src":"2517:37:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1554,"name":"uint160","nodeType":"ElementaryTypeName","src":"2517:7:16","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1557,"mutability":"mutable","name":"secondsInside","nodeType":"VariableDeclaration","scope":1559,"src":"2568:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1556,"name":"uint32","nodeType":"ElementaryTypeName","src":"2568:6:16","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"2463:135:16"},"scope":1560,"src":"2348:251:16","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1561,"src":"293:2308:16"}],"src":"45:2557:16"},"id":16},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol","exportedSymbols":{"IUniswapV3PoolEvents":[1679]},"id":1680,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1562,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:17"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"71:88:17","text":"@title Events emitted by a pool\n @notice Contains all events emitted by the pool"},"fullyImplemented":true,"id":1679,"linearizedBaseContracts":[1679],"name":"IUniswapV3PoolEvents","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1564,"nodeType":"StructuredDocumentation","src":"196:344:17","text":"@notice Emitted exactly once by a pool when #initialize is first called on the pool\n @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\n @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\n @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"},"id":1570,"name":"Initialize","nodeType":"EventDefinition","parameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1566,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":1570,"src":"562:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1565,"name":"uint160","nodeType":"ElementaryTypeName","src":"562:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1568,"indexed":false,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":1570,"src":"584:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1567,"name":"int24","nodeType":"ElementaryTypeName","src":"584:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"561:34:17"},"src":"545:51:17"},{"anonymous":false,"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"602:551:17","text":"@notice Emitted when liquidity is minted for a given position\n @param sender The address that minted the liquidity\n @param owner The owner of the position and recipient of any minted liquidity\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity minted to the position range\n @param amount0 How much token0 was required for the minted liquidity\n @param amount1 How much token1 was required for the minted liquidity"},"id":1587,"name":"Mint","nodeType":"EventDefinition","parameters":{"id":1586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"indexed":false,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1587,"src":"1178:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"1178:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1575,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1587,"src":"1202:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1574,"name":"address","nodeType":"ElementaryTypeName","src":"1202:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1577,"indexed":true,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1587,"src":"1233:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1576,"name":"int24","nodeType":"ElementaryTypeName","src":"1233:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1579,"indexed":true,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1587,"src":"1266:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1578,"name":"int24","nodeType":"ElementaryTypeName","src":"1266:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1581,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1587,"src":"1299:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1580,"name":"uint128","nodeType":"ElementaryTypeName","src":"1299:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1583,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1587,"src":"1323:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1582,"name":"uint256","nodeType":"ElementaryTypeName","src":"1323:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1585,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1587,"src":"1348:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1584,"name":"uint256","nodeType":"ElementaryTypeName","src":"1348:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1168:201:17"},"src":"1158:212:17"},{"anonymous":false,"documentation":{"id":1588,"nodeType":"StructuredDocumentation","src":"1376:493:17","text":"@notice Emitted when fees are collected by the owner of a position\n @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\n @param owner The owner of the position for which fees are collected\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount0 The amount of token0 fees collected\n @param amount1 The amount of token1 fees collected"},"id":1602,"name":"Collect","nodeType":"EventDefinition","parameters":{"id":1601,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1590,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1602,"src":"1897:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1589,"name":"address","nodeType":"ElementaryTypeName","src":"1897:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1592,"indexed":false,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1602,"src":"1928:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1591,"name":"address","nodeType":"ElementaryTypeName","src":"1928:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1594,"indexed":true,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1602,"src":"1955:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1593,"name":"int24","nodeType":"ElementaryTypeName","src":"1955:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1596,"indexed":true,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1602,"src":"1988:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1595,"name":"int24","nodeType":"ElementaryTypeName","src":"1988:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1598,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1602,"src":"2021:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1597,"name":"uint128","nodeType":"ElementaryTypeName","src":"2021:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1600,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1602,"src":"2046:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1599,"name":"uint128","nodeType":"ElementaryTypeName","src":"2046:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1887:180:17"},"src":"1874:194:17"},{"anonymous":false,"documentation":{"id":1603,"nodeType":"StructuredDocumentation","src":"2074:523:17","text":"@notice Emitted when a position's liquidity is removed\n @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\n @param owner The owner of the position for which liquidity is removed\n @param tickLower The lower tick of the position\n @param tickUpper The upper tick of the position\n @param amount The amount of liquidity to remove\n @param amount0 The amount of token0 withdrawn\n @param amount1 The amount of token1 withdrawn"},"id":1617,"name":"Burn","nodeType":"EventDefinition","parameters":{"id":1616,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1605,"indexed":true,"mutability":"mutable","name":"owner","nodeType":"VariableDeclaration","scope":1617,"src":"2622:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1604,"name":"address","nodeType":"ElementaryTypeName","src":"2622:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1607,"indexed":true,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":1617,"src":"2653:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1606,"name":"int24","nodeType":"ElementaryTypeName","src":"2653:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1609,"indexed":true,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":1617,"src":"2686:23:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1608,"name":"int24","nodeType":"ElementaryTypeName","src":"2686:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1611,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":1617,"src":"2719:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1610,"name":"uint128","nodeType":"ElementaryTypeName","src":"2719:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1613,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1617,"src":"2743:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1612,"name":"uint256","nodeType":"ElementaryTypeName","src":"2743:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1615,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1617,"src":"2768:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1614,"name":"uint256","nodeType":"ElementaryTypeName","src":"2768:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2612:177:17"},"src":"2602:188:17"},{"anonymous":false,"documentation":{"id":1618,"nodeType":"StructuredDocumentation","src":"2796:600:17","text":"@notice Emitted by the pool for any swaps between token0 and token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the output of the swap\n @param amount0 The delta of the token0 balance of the pool\n @param amount1 The delta of the token1 balance of the pool\n @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\n @param liquidity The liquidity of the pool after the swap\n @param tick The log base 1.0001 of price of the pool after the swap"},"id":1634,"name":"Swap","nodeType":"EventDefinition","parameters":{"id":1633,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1620,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1634,"src":"3421:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1619,"name":"address","nodeType":"ElementaryTypeName","src":"3421:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1622,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1634,"src":"3453:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1621,"name":"address","nodeType":"ElementaryTypeName","src":"3453:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1624,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1634,"src":"3488:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1623,"name":"int256","nodeType":"ElementaryTypeName","src":"3488:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1626,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1634,"src":"3512:14:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1625,"name":"int256","nodeType":"ElementaryTypeName","src":"3512:6:17","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"},{"constant":false,"id":1628,"indexed":false,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":1634,"src":"3536:20:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1627,"name":"uint160","nodeType":"ElementaryTypeName","src":"3536:7:17","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1630,"indexed":false,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":1634,"src":"3566:17:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1629,"name":"uint128","nodeType":"ElementaryTypeName","src":"3566:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1632,"indexed":false,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":1634,"src":"3593:10:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1631,"name":"int24","nodeType":"ElementaryTypeName","src":"3593:5:17","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3411:198:17"},"src":"3401:209:17"},{"anonymous":false,"documentation":{"id":1635,"nodeType":"StructuredDocumentation","src":"3616:562:17","text":"@notice Emitted by the pool for any flashes of token0/token1\n @param sender The address that initiated the swap call, and that received the callback\n @param recipient The address that received the tokens from flash\n @param amount0 The amount of token0 that was flashed\n @param amount1 The amount of token1 that was flashed\n @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\n @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee"},"id":1649,"name":"Flash","nodeType":"EventDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1649,"src":"4204:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1636,"name":"address","nodeType":"ElementaryTypeName","src":"4204:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1639,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1649,"src":"4236:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1638,"name":"address","nodeType":"ElementaryTypeName","src":"4236:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1641,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1649,"src":"4271:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1640,"name":"uint256","nodeType":"ElementaryTypeName","src":"4271:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1643,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1649,"src":"4296:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1642,"name":"uint256","nodeType":"ElementaryTypeName","src":"4296:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1645,"indexed":false,"mutability":"mutable","name":"paid0","nodeType":"VariableDeclaration","scope":1649,"src":"4321:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1644,"name":"uint256","nodeType":"ElementaryTypeName","src":"4321:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1647,"indexed":false,"mutability":"mutable","name":"paid1","nodeType":"VariableDeclaration","scope":1649,"src":"4344:13:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1646,"name":"uint256","nodeType":"ElementaryTypeName","src":"4344:7:17","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4194:169:17"},"src":"4183:181:17"},{"anonymous":false,"documentation":{"id":1650,"nodeType":"StructuredDocumentation","src":"4370:451:17","text":"@notice Emitted by the pool for increases to the number of observations that can be stored\n @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\n just before a mint/swap/burn.\n @param observationCardinalityNextOld The previous value of the next observation cardinality\n @param observationCardinalityNextNew The updated value of the next observation cardinality"},"id":1656,"name":"IncreaseObservationCardinalityNext","nodeType":"EventDefinition","parameters":{"id":1655,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1652,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextOld","nodeType":"VariableDeclaration","scope":1656,"src":"4876:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1651,"name":"uint16","nodeType":"ElementaryTypeName","src":"4876:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1654,"indexed":false,"mutability":"mutable","name":"observationCardinalityNextNew","nodeType":"VariableDeclaration","scope":1656,"src":"4922:36:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1653,"name":"uint16","nodeType":"ElementaryTypeName","src":"4922:6:17","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"4866:98:17"},"src":"4826:139:17"},{"anonymous":false,"documentation":{"id":1657,"nodeType":"StructuredDocumentation","src":"4971:370:17","text":"@notice Emitted when the protocol fee is changed by the pool\n @param feeProtocol0Old The previous value of the token0 protocol fee\n @param feeProtocol1Old The previous value of the token1 protocol fee\n @param feeProtocol0New The updated value of the token0 protocol fee\n @param feeProtocol1New The updated value of the token1 protocol fee"},"id":1667,"name":"SetFeeProtocol","nodeType":"EventDefinition","parameters":{"id":1666,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1659,"indexed":false,"mutability":"mutable","name":"feeProtocol0Old","nodeType":"VariableDeclaration","scope":1667,"src":"5367:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1658,"name":"uint8","nodeType":"ElementaryTypeName","src":"5367:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1661,"indexed":false,"mutability":"mutable","name":"feeProtocol1Old","nodeType":"VariableDeclaration","scope":1667,"src":"5390:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1660,"name":"uint8","nodeType":"ElementaryTypeName","src":"5390:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1663,"indexed":false,"mutability":"mutable","name":"feeProtocol0New","nodeType":"VariableDeclaration","scope":1667,"src":"5413:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1662,"name":"uint8","nodeType":"ElementaryTypeName","src":"5413:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1665,"indexed":false,"mutability":"mutable","name":"feeProtocol1New","nodeType":"VariableDeclaration","scope":1667,"src":"5436:21:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1664,"name":"uint8","nodeType":"ElementaryTypeName","src":"5436:5:17","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5366:92:17"},"src":"5346:113:17"},{"anonymous":false,"documentation":{"id":1668,"nodeType":"StructuredDocumentation","src":"5465:384:17","text":"@notice Emitted when the collected protocol fees are withdrawn by the factory owner\n @param sender The address that collects the protocol fees\n @param recipient The address that receives the collected protocol fees\n @param amount0 The amount of token0 protocol fees that is withdrawn\n @param amount0 The amount of token1 protocol fees that is withdrawn"},"id":1678,"name":"CollectProtocol","nodeType":"EventDefinition","parameters":{"id":1677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1670,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":1678,"src":"5876:22:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1669,"name":"address","nodeType":"ElementaryTypeName","src":"5876:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1672,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1678,"src":"5900:25:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1671,"name":"address","nodeType":"ElementaryTypeName","src":"5900:7:17","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1674,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1678,"src":"5927:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1673,"name":"uint128","nodeType":"ElementaryTypeName","src":"5927:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1676,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1678,"src":"5944:15:17","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1675,"name":"uint128","nodeType":"ElementaryTypeName","src":"5944:7:17","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5875:85:17"},"src":"5854:107:17"}],"scope":1680,"src":"159:5804:17"}],"src":"45:5919:17"},"id":17},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol","exportedSymbols":{"IUniswapV3PoolImmutables":[1719]},"id":1720,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1681,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:18"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"71:153:18","text":"@title Pool state that never changes\n @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values"},"fullyImplemented":false,"id":1719,"linearizedBaseContracts":[1719],"name":"IUniswapV3PoolImmutables","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1683,"nodeType":"StructuredDocumentation","src":"265:138:18","text":"@notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\n @return The contract address"},"functionSelector":"c45a0155","id":1688,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nodeType":"FunctionDefinition","parameters":{"id":1684,"nodeType":"ParameterList","parameters":[],"src":"424:2:18"},"returnParameters":{"id":1687,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1686,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1688,"src":"450:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1685,"name":"address","nodeType":"ElementaryTypeName","src":"450:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"449:9:18"},"scope":1719,"src":"408:51:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1689,"nodeType":"StructuredDocumentation","src":"465:113:18","text":"@notice The first of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"0dfe1681","id":1694,"implemented":false,"kind":"function","modifiers":[],"name":"token0","nodeType":"FunctionDefinition","parameters":{"id":1690,"nodeType":"ParameterList","parameters":[],"src":"598:2:18"},"returnParameters":{"id":1693,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1692,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1694,"src":"624:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1691,"name":"address","nodeType":"ElementaryTypeName","src":"624:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"623:9:18"},"scope":1719,"src":"583:50:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1695,"nodeType":"StructuredDocumentation","src":"639:114:18","text":"@notice The second of the two tokens of the pool, sorted by address\n @return The token contract address"},"functionSelector":"d21220a7","id":1700,"implemented":false,"kind":"function","modifiers":[],"name":"token1","nodeType":"FunctionDefinition","parameters":{"id":1696,"nodeType":"ParameterList","parameters":[],"src":"773:2:18"},"returnParameters":{"id":1699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1698,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1700,"src":"799:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"799:7:18","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"798:9:18"},"scope":1719,"src":"758:50:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1701,"nodeType":"StructuredDocumentation","src":"814:84:18","text":"@notice The pool's fee in hundredths of a bip, i.e. 1e-6\n @return The fee"},"functionSelector":"ddca3f43","id":1706,"implemented":false,"kind":"function","modifiers":[],"name":"fee","nodeType":"FunctionDefinition","parameters":{"id":1702,"nodeType":"ParameterList","parameters":[],"src":"915:2:18"},"returnParameters":{"id":1705,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1704,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1706,"src":"941:6:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":1703,"name":"uint24","nodeType":"ElementaryTypeName","src":"941:6:18","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"940:8:18"},"scope":1719,"src":"903:46:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1707,"nodeType":"StructuredDocumentation","src":"955:358:18","text":"@notice The pool tick spacing\n @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\n e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\n This value is an int24 to avoid casting even though it is always positive.\n @return The tick spacing"},"functionSelector":"d0c93a7c","id":1712,"implemented":false,"kind":"function","modifiers":[],"name":"tickSpacing","nodeType":"FunctionDefinition","parameters":{"id":1708,"nodeType":"ParameterList","parameters":[],"src":"1338:2:18"},"returnParameters":{"id":1711,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1710,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1712,"src":"1364:5:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1709,"name":"int24","nodeType":"ElementaryTypeName","src":"1364:5:18","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1363:7:18"},"scope":1719,"src":"1318:53:18","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1713,"nodeType":"StructuredDocumentation","src":"1377:363:18","text":"@notice The maximum amount of position liquidity that can use any tick in the range\n @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\n also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\n @return The max amount of liquidity per tick"},"functionSelector":"70cf754a","id":1718,"implemented":false,"kind":"function","modifiers":[],"name":"maxLiquidityPerTick","nodeType":"FunctionDefinition","parameters":{"id":1714,"nodeType":"ParameterList","parameters":[],"src":"1773:2:18"},"returnParameters":{"id":1717,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1716,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1718,"src":"1799:7:18","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1715,"name":"uint128","nodeType":"ElementaryTypeName","src":"1799:7:18","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1798:9:18"},"scope":1719,"src":"1745:63:18","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1720,"src":"224:1586:18"}],"src":"45:1766:18"},"id":18},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol","exportedSymbols":{"IUniswapV3PoolOwnerActions":[1745]},"id":1746,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1721,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:19"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1722,"nodeType":"StructuredDocumentation","src":"71:116:19","text":"@title Permissioned pool actions\n @notice Contains pool methods that may only be called by the factory owner"},"fullyImplemented":false,"id":1745,"linearizedBaseContracts":[1745],"name":"IUniswapV3PoolOwnerActions","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1723,"nodeType":"StructuredDocumentation","src":"230:205:19","text":"@notice Set the denominator of the protocol's % share of the fees\n @param feeProtocol0 new protocol fee for token0 of the pool\n @param feeProtocol1 new protocol fee for token1 of the pool"},"functionSelector":"8206a4d1","id":1730,"implemented":false,"kind":"function","modifiers":[],"name":"setFeeProtocol","nodeType":"FunctionDefinition","parameters":{"id":1728,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1725,"mutability":"mutable","name":"feeProtocol0","nodeType":"VariableDeclaration","scope":1730,"src":"464:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1724,"name":"uint8","nodeType":"ElementaryTypeName","src":"464:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1727,"mutability":"mutable","name":"feeProtocol1","nodeType":"VariableDeclaration","scope":1730,"src":"484:18:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1726,"name":"uint8","nodeType":"ElementaryTypeName","src":"484:5:19","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"463:40:19"},"returnParameters":{"id":1729,"nodeType":"ParameterList","parameters":[],"src":"512:0:19"},"scope":1745,"src":"440:73:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1731,"nodeType":"StructuredDocumentation","src":"519:483:19","text":"@notice Collect the protocol fee accrued to the pool\n @param recipient The address to which collected protocol fees should be sent\n @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\n @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\n @return amount0 The protocol fee collected in token0\n @return amount1 The protocol fee collected in token1"},"functionSelector":"85b66729","id":1744,"implemented":false,"kind":"function","modifiers":[],"name":"collectProtocol","nodeType":"FunctionDefinition","parameters":{"id":1738,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1733,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":1744,"src":"1041:17:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1732,"name":"address","nodeType":"ElementaryTypeName","src":"1041:7:19","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1735,"mutability":"mutable","name":"amount0Requested","nodeType":"VariableDeclaration","scope":1744,"src":"1068:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1734,"name":"uint128","nodeType":"ElementaryTypeName","src":"1068:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1737,"mutability":"mutable","name":"amount1Requested","nodeType":"VariableDeclaration","scope":1744,"src":"1102:24:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1736,"name":"uint128","nodeType":"ElementaryTypeName","src":"1102:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1031:101:19"},"returnParameters":{"id":1743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1740,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":1744,"src":"1151:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1739,"name":"uint128","nodeType":"ElementaryTypeName","src":"1151:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1742,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":1744,"src":"1168:15:19","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1741,"name":"uint128","nodeType":"ElementaryTypeName","src":"1168:7:19","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"1150:34:19"},"scope":1745,"src":"1007:178:19","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1746,"src":"187:1000:19"}],"src":"45:1143:19"},"id":19},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol","exportedSymbols":{"IUniswapV3PoolState":[1853]},"id":1854,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1747,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:20"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":1748,"nodeType":"StructuredDocumentation","src":"71:169:20","text":"@title Pool state that can change\n @notice These methods compose the pool's state, and can change with any frequency including multiple times\n per transaction"},"fullyImplemented":false,"id":1853,"linearizedBaseContracts":[1853],"name":"IUniswapV3PoolState","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1749,"nodeType":"StructuredDocumentation","src":"276:1140:20","text":"@notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\n when accessed externally.\n @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\n tick The current tick of the pool, i.e. according to the last tick transition that was run.\n This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\n boundary.\n observationIndex The index of the last oracle observation that was written,\n observationCardinality The current maximum number of observations stored in the pool,\n observationCardinalityNext The next maximum number of observations, to be updated when the observation.\n feeProtocol The protocol fee for both tokens of the pool.\n Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\n is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\n unlocked Whether the pool is currently locked to reentrancy"},"functionSelector":"3850c7bd","id":1766,"implemented":false,"kind":"function","modifiers":[],"name":"slot0","nodeType":"FunctionDefinition","parameters":{"id":1750,"nodeType":"ParameterList","parameters":[],"src":"1435:2:20"},"returnParameters":{"id":1765,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1752,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":1766,"src":"1498:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1751,"name":"uint160","nodeType":"ElementaryTypeName","src":"1498:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1754,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":1766,"src":"1532:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1753,"name":"int24","nodeType":"ElementaryTypeName","src":"1532:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":1756,"mutability":"mutable","name":"observationIndex","nodeType":"VariableDeclaration","scope":1766,"src":"1556:23:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1755,"name":"uint16","nodeType":"ElementaryTypeName","src":"1556:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1758,"mutability":"mutable","name":"observationCardinality","nodeType":"VariableDeclaration","scope":1766,"src":"1593:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1757,"name":"uint16","nodeType":"ElementaryTypeName","src":"1593:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1760,"mutability":"mutable","name":"observationCardinalityNext","nodeType":"VariableDeclaration","scope":1766,"src":"1636:33:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":1759,"name":"uint16","nodeType":"ElementaryTypeName","src":"1636:6:20","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"},{"constant":false,"id":1762,"mutability":"mutable","name":"feeProtocol","nodeType":"VariableDeclaration","scope":1766,"src":"1683:17:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1761,"name":"uint8","nodeType":"ElementaryTypeName","src":"1683:5:20","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":1764,"mutability":"mutable","name":"unlocked","nodeType":"VariableDeclaration","scope":1766,"src":"1714:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1763,"name":"bool","nodeType":"ElementaryTypeName","src":"1714:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1484:253:20"},"scope":1853,"src":"1421:317:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1767,"nodeType":"StructuredDocumentation","src":"1744:168:20","text":"@notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"f3058399","id":1772,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal0X128","nodeType":"FunctionDefinition","parameters":{"id":1768,"nodeType":"ParameterList","parameters":[],"src":"1946:2:20"},"returnParameters":{"id":1771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1770,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1772,"src":"1972:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"1972:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1971:9:20"},"scope":1853,"src":"1917:64:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1773,"nodeType":"StructuredDocumentation","src":"1987:168:20","text":"@notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\n @dev This value can overflow the uint256"},"functionSelector":"46141319","id":1778,"implemented":false,"kind":"function","modifiers":[],"name":"feeGrowthGlobal1X128","nodeType":"FunctionDefinition","parameters":{"id":1774,"nodeType":"ParameterList","parameters":[],"src":"2189:2:20"},"returnParameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1776,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1778,"src":"2215:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1775,"name":"uint256","nodeType":"ElementaryTypeName","src":"2215:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2214:9:20"},"scope":1853,"src":"2160:64:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1779,"nodeType":"StructuredDocumentation","src":"2230:147:20","text":"@notice The amounts of token0 and token1 that are owed to the protocol\n @dev Protocol fees will never exceed uint128 max in either token"},"functionSelector":"1ad8b03b","id":1786,"implemented":false,"kind":"function","modifiers":[],"name":"protocolFees","nodeType":"FunctionDefinition","parameters":{"id":1780,"nodeType":"ParameterList","parameters":[],"src":"2403:2:20"},"returnParameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1782,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":1786,"src":"2429:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1781,"name":"uint128","nodeType":"ElementaryTypeName","src":"2429:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1784,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":1786,"src":"2445:14:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1783,"name":"uint128","nodeType":"ElementaryTypeName","src":"2445:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2428:32:20"},"scope":1853,"src":"2382:79:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1787,"nodeType":"StructuredDocumentation","src":"2467:150:20","text":"@notice The currently in range liquidity available to the pool\n @dev This value has no relationship to the total liquidity across all ticks"},"functionSelector":"1a686502","id":1792,"implemented":false,"kind":"function","modifiers":[],"name":"liquidity","nodeType":"FunctionDefinition","parameters":{"id":1788,"nodeType":"ParameterList","parameters":[],"src":"2640:2:20"},"returnParameters":{"id":1791,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1790,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1792,"src":"2666:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1789,"name":"uint128","nodeType":"ElementaryTypeName","src":"2666:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"2665:9:20"},"scope":1853,"src":"2622:53:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1793,"nodeType":"StructuredDocumentation","src":"2681:1244:20","text":"@notice Look up information about a specific tick in the pool\n @param tick The tick to look up\n @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\n tick upper,\n liquidityNet how much liquidity changes when the pool price crosses the tick,\n feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\n feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\n tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\n secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\n secondsOutside the seconds spent on the other side of the tick from the current tick,\n initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\n Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\n In addition, these values are only relative and must be used only in comparison to previous snapshots for\n a specific position."},"functionSelector":"f30dba93","id":1814,"implemented":false,"kind":"function","modifiers":[],"name":"ticks","nodeType":"FunctionDefinition","parameters":{"id":1796,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1795,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":1814,"src":"3945:10:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1794,"name":"int24","nodeType":"ElementaryTypeName","src":"3945:5:20","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"3944:12:20"},"returnParameters":{"id":1813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1798,"mutability":"mutable","name":"liquidityGross","nodeType":"VariableDeclaration","scope":1814,"src":"4017:22:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1797,"name":"uint128","nodeType":"ElementaryTypeName","src":"4017:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1800,"mutability":"mutable","name":"liquidityNet","nodeType":"VariableDeclaration","scope":1814,"src":"4053:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1799,"name":"int128","nodeType":"ElementaryTypeName","src":"4053:6:20","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":1802,"mutability":"mutable","name":"feeGrowthOutside0X128","nodeType":"VariableDeclaration","scope":1814,"src":"4086:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"4086:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1804,"mutability":"mutable","name":"feeGrowthOutside1X128","nodeType":"VariableDeclaration","scope":1814,"src":"4129:29:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1803,"name":"uint256","nodeType":"ElementaryTypeName","src":"4129:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1806,"mutability":"mutable","name":"tickCumulativeOutside","nodeType":"VariableDeclaration","scope":1814,"src":"4172:27:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1805,"name":"int56","nodeType":"ElementaryTypeName","src":"4172:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":1808,"mutability":"mutable","name":"secondsPerLiquidityOutsideX128","nodeType":"VariableDeclaration","scope":1814,"src":"4213:38:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1807,"name":"uint160","nodeType":"ElementaryTypeName","src":"4213:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1810,"mutability":"mutable","name":"secondsOutside","nodeType":"VariableDeclaration","scope":1814,"src":"4265:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1809,"name":"uint32","nodeType":"ElementaryTypeName","src":"4265:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1812,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":1814,"src":"4300:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1811,"name":"bool","nodeType":"ElementaryTypeName","src":"4300:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4003:323:20"},"scope":1853,"src":"3930:397:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1815,"nodeType":"StructuredDocumentation","src":"4333:99:20","text":"@notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"functionSelector":"5339c296","id":1822,"implemented":false,"kind":"function","modifiers":[],"name":"tickBitmap","nodeType":"FunctionDefinition","parameters":{"id":1818,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1817,"mutability":"mutable","name":"wordPosition","nodeType":"VariableDeclaration","scope":1822,"src":"4457:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":1816,"name":"int16","nodeType":"ElementaryTypeName","src":"4457:5:20","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"4456:20:20"},"returnParameters":{"id":1821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1820,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":1822,"src":"4500:7:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1819,"name":"uint256","nodeType":"ElementaryTypeName","src":"4500:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4499:9:20"},"scope":1853,"src":"4437:72:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1823,"nodeType":"StructuredDocumentation","src":"4515:700:20","text":"@notice Returns the information about a position by the position's key\n @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\n @return _liquidity The amount of liquidity in the position,\n Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\n Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\n Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\n Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"},"functionSelector":"514ea4bf","id":1838,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nodeType":"FunctionDefinition","parameters":{"id":1826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1825,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":1838,"src":"5239:11:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":1824,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5239:7:20","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5238:13:20"},"returnParameters":{"id":1837,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1828,"mutability":"mutable","name":"_liquidity","nodeType":"VariableDeclaration","scope":1838,"src":"5312:18:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1827,"name":"uint128","nodeType":"ElementaryTypeName","src":"5312:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1830,"mutability":"mutable","name":"feeGrowthInside0LastX128","nodeType":"VariableDeclaration","scope":1838,"src":"5344:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1829,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1832,"mutability":"mutable","name":"feeGrowthInside1LastX128","nodeType":"VariableDeclaration","scope":1838,"src":"5390:32:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"5390:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1834,"mutability":"mutable","name":"tokensOwed0","nodeType":"VariableDeclaration","scope":1838,"src":"5436:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1833,"name":"uint128","nodeType":"ElementaryTypeName","src":"5436:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":1836,"mutability":"mutable","name":"tokensOwed1","nodeType":"VariableDeclaration","scope":1838,"src":"5469:19:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":1835,"name":"uint128","nodeType":"ElementaryTypeName","src":"5469:7:20","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"5298:200:20"},"scope":1853,"src":"5220:279:20","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1839,"nodeType":"StructuredDocumentation","src":"5505:749:20","text":"@notice Returns data about a specific observation index\n @param index The element of the observations array to fetch\n @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\n ago, rather than at a specific index in the array.\n @return blockTimestamp The timestamp of the observation,\n Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\n Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\n Returns initialized whether the observation has been initialized and the values are safe to use"},"functionSelector":"252c09d7","id":1852,"implemented":false,"kind":"function","modifiers":[],"name":"observations","nodeType":"FunctionDefinition","parameters":{"id":1842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1841,"mutability":"mutable","name":"index","nodeType":"VariableDeclaration","scope":1852,"src":"6281:13:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1840,"name":"uint256","nodeType":"ElementaryTypeName","src":"6281:7:20","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6280:15:20"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1844,"mutability":"mutable","name":"blockTimestamp","nodeType":"VariableDeclaration","scope":1852,"src":"6356:21:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":1843,"name":"uint32","nodeType":"ElementaryTypeName","src":"6356:6:20","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"tickCumulative","nodeType":"VariableDeclaration","scope":1852,"src":"6391:20:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1845,"name":"int56","nodeType":"ElementaryTypeName","src":"6391:5:20","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"},{"constant":false,"id":1848,"mutability":"mutable","name":"secondsPerLiquidityCumulativeX128","nodeType":"VariableDeclaration","scope":1852,"src":"6425:41:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1847,"name":"uint160","nodeType":"ElementaryTypeName","src":"6425:7:20","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":1850,"mutability":"mutable","name":"initialized","nodeType":"VariableDeclaration","scope":1852,"src":"6480:16:20","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1849,"name":"bool","nodeType":"ElementaryTypeName","src":"6480:4:20","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6342:164:20"},"scope":1853,"src":"6259:248:20","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1854,"src":"240:6269:20"}],"src":"45:6465:20"},"id":20},"@uniswap/v3-core/contracts/libraries/TickMath.sol":{"ast":{"absolutePath":"@uniswap/v3-core/contracts/libraries/TickMath.sol","exportedSymbols":{"TickMath":[2388]},"id":2389,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":1855,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:21"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":1856,"nodeType":"StructuredDocumentation","src":"71:235:21","text":"@title Math library for computing sqrt prices from ticks and vice versa\n @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\n prices between 2**-128 and 2**128"},"fullyImplemented":true,"id":2388,"linearizedBaseContracts":[2388],"name":"TickMath","nodeType":"ContractDefinition","nodes":[{"constant":true,"documentation":{"id":1857,"nodeType":"StructuredDocumentation","src":"329:108:21","text":"@dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"},"id":1861,"mutability":"constant","name":"MIN_TICK","nodeType":"VariableDeclaration","scope":2388,"src":"442:42:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1858,"name":"int24","nodeType":"ElementaryTypeName","src":"442:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"value":{"id":1860,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"477:7:21","subExpression":{"hexValue":"383837323732","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"478:6:21","typeDescriptions":{"typeIdentifier":"t_rational_887272_by_1","typeString":"int_const 887272"},"value":"887272"},"typeDescriptions":{"typeIdentifier":"t_rational_minus_887272_by_1","typeString":"int_const -887272"}},"visibility":"internal"},{"constant":true,"documentation":{"id":1862,"nodeType":"StructuredDocumentation","src":"490:107:21","text":"@dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"},"id":1866,"mutability":"constant","name":"MAX_TICK","nodeType":"VariableDeclaration","scope":2388,"src":"602:44:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1863,"name":"int24","nodeType":"ElementaryTypeName","src":"602:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"value":{"id":1865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"637:9:21","subExpression":{"id":1864,"name":"MIN_TICK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1861,"src":"638:8:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":true,"documentation":{"id":1867,"nodeType":"StructuredDocumentation","src":"653:116:21","text":"@dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"},"id":1870,"mutability":"constant","name":"MIN_SQRT_RATIO","nodeType":"VariableDeclaration","scope":2388,"src":"774:53:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1868,"name":"uint160","nodeType":"ElementaryTypeName","src":"774:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"value":{"hexValue":"34323935313238373339","id":1869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"817:10:21","typeDescriptions":{"typeIdentifier":"t_rational_4295128739_by_1","typeString":"int_const 4295128739"},"value":"4295128739"},"visibility":"internal"},{"constant":true,"documentation":{"id":1871,"nodeType":"StructuredDocumentation","src":"833:116:21","text":"@dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"},"id":1874,"mutability":"constant","name":"MAX_SQRT_RATIO","nodeType":"VariableDeclaration","scope":2388,"src":"954:92:21","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1872,"name":"uint160","nodeType":"ElementaryTypeName","src":"954:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"value":{"hexValue":"31343631343436373033343835323130313033323837323733303532323033393838383232333738373233393730333432","id":1873,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"997:49:21","typeDescriptions":{"typeIdentifier":"t_rational_1461446703485210103287273052203988822378723970342_by_1","typeString":"int_const 1461...(41 digits omitted)...0342"},"value":"1461446703485210103287273052203988822378723970342"},"visibility":"internal"},{"body":{"id":2247,"nodeType":"Block","src":"1440:2495:21","statements":[{"assignments":[1883],"declarations":[{"constant":false,"id":1883,"mutability":"mutable","name":"absTick","nodeType":"VariableDeclaration","scope":2247,"src":"1450:15:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1882,"name":"uint256","nodeType":"ElementaryTypeName","src":"1450:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1903,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1884,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"1468:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"hexValue":"30","id":1885,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1475:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1468:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"arguments":[{"arguments":[{"id":1899,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"1519:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":1898,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1512:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1897,"name":"int256","nodeType":"ElementaryTypeName","src":"1512:6:21","typeDescriptions":{}}},"id":1900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1512:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1504:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1895,"name":"uint256","nodeType":"ElementaryTypeName","src":"1504:7:21","typeDescriptions":{}}},"id":1901,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1504:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1468:57:21","trueExpression":{"arguments":[{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"1487:13:21","subExpression":{"arguments":[{"id":1891,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"1495:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":1890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1488:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1889,"name":"int256","nodeType":"ElementaryTypeName","src":"1488:6:21","typeDescriptions":{}}},"id":1892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1488:12:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1479:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1887,"name":"uint256","nodeType":"ElementaryTypeName","src":"1479:7:21","typeDescriptions":{}}},"id":1894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1479:22:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1450:75:21"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1905,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1543:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"id":1908,"name":"MAX_TICK","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1866,"src":"1562:8:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":1907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1554:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1906,"name":"uint256","nodeType":"ElementaryTypeName","src":"1554:7:21","typeDescriptions":{}}},"id":1909,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1554:17:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1543:28:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"54","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1573:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc","typeString":"literal_string \"T\""},"value":"T"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_846b7b6deb1cfa110d0ea7ec6162a7123b761785528db70cceed5143183b11fc","typeString":"literal_string \"T\""}],"id":1904,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1535:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1535:42:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1913,"nodeType":"ExpressionStatement","src":"1535:42:21"},{"assignments":[1915],"declarations":[{"constant":false,"id":1915,"mutability":"mutable","name":"ratio","nodeType":"VariableDeclaration","scope":2247,"src":"1588:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1914,"name":"uint256","nodeType":"ElementaryTypeName","src":"1588:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1924,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1916,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1604:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1614:3:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"0x1"},"src":"1604:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1621:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1604:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"3078313030303030303030303030303030303030303030303030303030303030303030","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1662:35:21","typeDescriptions":{"typeIdentifier":"t_rational_340282366920938463463374607431768211456_by_1","typeString":"int_const 3402...(31 digits omitted)...1456"},"value":"0x100000000000000000000000000000000"},"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1604:93:21","trueExpression":{"hexValue":"30786666666362393333626436666164333761613264313632643161353934303031","id":1921,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1625:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340265354078544963557816517032075149313_by_1","typeString":"int_const 3402...(31 digits omitted)...9313"},"value":"0xfffcb933bd6fad37aa2d162d1a594001"},"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"nodeType":"VariableDeclarationStatement","src":"1588:109:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1929,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1925,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1711:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1721:3:21","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"0x2"},"src":"1711:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1728:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1711:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1939,"nodeType":"IfStatement","src":"1707:83:21","trueBody":{"expression":{"id":1937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1930,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1731:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1740:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666663937323732333733643431333235396134363939303538306532313361","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1748:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340248342086729790484326174814286782778_by_1","typeString":"int_const 3402...(31 digits omitted)...2778"},"value":"0xfff97272373d413259a46990580e213a"},"src":"1740:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1934,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1739:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1935,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1787:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"1739:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1731:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1938,"nodeType":"ExpressionStatement","src":"1731:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1940,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1804:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1814:3:21","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"0x4"},"src":"1804:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1943,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1821:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1804:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1954,"nodeType":"IfStatement","src":"1800:83:21","trueBody":{"expression":{"id":1952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1945,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1824:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1833:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666663265353066356636353639333265663132333537636633633766646363","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1841:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340214320654664324051920982716015181260_by_1","typeString":"int_const 3402...(31 digits omitted)...1260"},"value":"0xfff2e50f5f656932ef12357cf3c7fdcc"},"src":"1833:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1949,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1832:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1950,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1880:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"1832:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1824:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1953,"nodeType":"ExpressionStatement","src":"1824:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1957,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1955,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1897:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838","id":1956,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1907:3:21","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"0x8"},"src":"1897:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1958,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1914:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1897:18:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1969,"nodeType":"IfStatement","src":"1893:83:21","trueBody":{"expression":{"id":1967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1960,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1917:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"1926:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666653563616361376531306534653631633336323465616130393431636430","id":1962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1934:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340146287995602323631171512101879684304_by_1","typeString":"int_const 3401...(31 digits omitted)...4304"},"value":"0xffe5caca7e10e4e61c3624eaa0941cd0"},"src":"1926:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1964,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1925:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1965,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1973:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"1925:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1917:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1968,"nodeType":"ExpressionStatement","src":"1917:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1974,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1972,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1970,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"1990:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130","id":1971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2000:4:21","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"0x10"},"src":"1990:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1973,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2008:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1990:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1984,"nodeType":"IfStatement","src":"1986:84:21","trueBody":{"expression":{"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1975,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2011:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1981,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1976,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2020:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666636239383433643630663631353963396462353838333563393236363434","id":1977,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2028:34:21","typeDescriptions":{"typeIdentifier":"t_rational_340010263488231146823593991679159461444_by_1","typeString":"int_const 3400...(31 digits omitted)...1444"},"value":"0xffcb9843d60f6159c9db58835c926644"},"src":"2020:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1979,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2019:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2067:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2019:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2011:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1983,"nodeType":"ExpressionStatement","src":"2011:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1989,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1985,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2084:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230","id":1986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2094:4:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"0x20"},"src":"2084:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":1988,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2102:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2084:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1999,"nodeType":"IfStatement","src":"2080:84:21","trueBody":{"expression":{"id":1997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1990,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2105:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1991,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2114:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666393733623431666139386330383134373265363839366466623235346330","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2122:34:21","typeDescriptions":{"typeIdentifier":"t_rational_339738377640345403697157401104375502016_by_1","typeString":"int_const 3397...(31 digits omitted)...2016"},"value":"0xff973b41fa98c081472e6896dfb254c0"},"src":"2114:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1994,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2113:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1995,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2161:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2113:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2105:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1998,"nodeType":"ExpressionStatement","src":"2105:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2000,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2178:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430","id":2001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2188:4:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"0x40"},"src":"2178:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2003,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2196:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2178:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2014,"nodeType":"IfStatement","src":"2174:84:21","trueBody":{"expression":{"id":2012,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2005,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2199:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2011,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2006,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2208:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786666326561313634363663393661333834336563373862333236623532383631","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2216:34:21","typeDescriptions":{"typeIdentifier":"t_rational_339195258003219555707034227454543997025_by_1","typeString":"int_const 3391...(31 digits omitted)...7025"},"value":"0xff2ea16466c96a3843ec78b326b52861"},"src":"2208:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2009,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2207:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2255:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2207:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2199:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2013,"nodeType":"ExpressionStatement","src":"2199:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2015,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2272:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2282:4:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"0x80"},"src":"2272:14:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2290:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2272:19:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2029,"nodeType":"IfStatement","src":"2268:84:21","trueBody":{"expression":{"id":2027,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2293:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2021,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2302:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786665356465653034366139396132613831316334363166313936396333303533","id":2022,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2310:34:21","typeDescriptions":{"typeIdentifier":"t_rational_338111622100601834656805679988414885971_by_1","typeString":"int_const 3381...(31 digits omitted)...5971"},"value":"0xfe5dee046a99a2a811c461f1969c3053"},"src":"2302:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2024,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2301:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2025,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2349:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2301:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2293:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2028,"nodeType":"ExpressionStatement","src":"2293:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2034,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2032,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2030,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2366:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078313030","id":2031,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2376:5:21","typeDescriptions":{"typeIdentifier":"t_rational_256_by_1","typeString":"int_const 256"},"value":"0x100"},"src":"2366:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2385:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2366:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2044,"nodeType":"IfStatement","src":"2362:85:21","trueBody":{"expression":{"id":2042,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2035,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2388:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2041,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2036,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2397:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786663626538366337393030613838616564636666633833623437396161336134","id":2037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2405:34:21","typeDescriptions":{"typeIdentifier":"t_rational_335954724994790223023589805789778977700_by_1","typeString":"int_const 3359...(31 digits omitted)...7700"},"value":"0xfcbe86c7900a88aedcffc83b479aa3a4"},"src":"2397:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2039,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2396:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2444:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2396:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2388:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2043,"nodeType":"ExpressionStatement","src":"2388:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2045,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2461:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078323030","id":2046,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2471:5:21","typeDescriptions":{"typeIdentifier":"t_rational_512_by_1","typeString":"int_const 512"},"value":"0x200"},"src":"2461:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2048,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2480:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2461:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2059,"nodeType":"IfStatement","src":"2457:85:21","trueBody":{"expression":{"id":2057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2050,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2483:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2053,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2051,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2492:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786639383761373235336163343133313736663262303734636637383135653534","id":2052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2500:34:21","typeDescriptions":{"typeIdentifier":"t_rational_331682121138379247127172139078559817300_by_1","typeString":"int_const 3316...(31 digits omitted)...7300"},"value":"0xf987a7253ac413176f2b074cf7815e54"},"src":"2492:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2054,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2491:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2539:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2491:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2483:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2058,"nodeType":"ExpressionStatement","src":"2483:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2062,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2060,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2556:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078343030","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2566:5:21","typeDescriptions":{"typeIdentifier":"t_rational_1024_by_1","typeString":"int_const 1024"},"value":"0x400"},"src":"2556:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2063,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2575:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2556:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2074,"nodeType":"IfStatement","src":"2552:85:21","trueBody":{"expression":{"id":2072,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2065,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2578:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2071,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2066,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2587:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786633333932623038323262373030303539343063376133393865346237306633","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2595:34:21","typeDescriptions":{"typeIdentifier":"t_rational_323299236684853023288211250268160618739_by_1","typeString":"int_const 3232...(31 digits omitted)...8739"},"value":"0xf3392b0822b70005940c7a398e4b70f3"},"src":"2587:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2069,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2586:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2070,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2634:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2586:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2578:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2073,"nodeType":"ExpressionStatement","src":"2578:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2079,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2075,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2651:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"3078383030","id":2076,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2661:5:21","typeDescriptions":{"typeIdentifier":"t_rational_2048_by_1","typeString":"int_const 2048"},"value":"0x800"},"src":"2651:15:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2670:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2651:20:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2089,"nodeType":"IfStatement","src":"2647:85:21","trueBody":{"expression":{"id":2087,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2080,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2673:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2083,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2081,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2682:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786537313539343735613263323962373434336232396337666136653838396439","id":2082,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2690:34:21","typeDescriptions":{"typeIdentifier":"t_rational_307163716377032989948697243942600083929_by_1","typeString":"int_const 3071...(31 digits omitted)...3929"},"value":"0xe7159475a2c29b7443b29c7fa6e889d9"},"src":"2682:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2084,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2681:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2085,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2729:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2681:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2673:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2088,"nodeType":"ExpressionStatement","src":"2673:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2094,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2090,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2746:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307831303030","id":2091,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2756:6:21","typeDescriptions":{"typeIdentifier":"t_rational_4096_by_1","typeString":"int_const 4096"},"value":"0x1000"},"src":"2746:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2093,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2766:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2746:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2104,"nodeType":"IfStatement","src":"2742:86:21","trueBody":{"expression":{"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2095,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2769:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2096,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2778:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786430393766336264666432303232623838343561643866373932616135383235","id":2097,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2786:34:21","typeDescriptions":{"typeIdentifier":"t_rational_277268403626896220162999269216087595045_by_1","typeString":"int_const 2772...(31 digits omitted)...5045"},"value":"0xd097f3bdfd2022b8845ad8f792aa5825"},"src":"2778:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2099,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2777:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2825:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2777:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2769:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2103,"nodeType":"ExpressionStatement","src":"2769:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2109,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2105,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2842:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307832303030","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2852:6:21","typeDescriptions":{"typeIdentifier":"t_rational_8192_by_1","typeString":"int_const 8192"},"value":"0x2000"},"src":"2842:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2862:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2842:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2119,"nodeType":"IfStatement","src":"2838:86:21","trueBody":{"expression":{"id":2117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2110,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2865:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2874:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30786139663734363436326438373066646638613635646331663930653036316535","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2882:34:21","typeDescriptions":{"typeIdentifier":"t_rational_225923453940442621947126027127485391333_by_1","typeString":"int_const 2259...(31 digits omitted)...1333"},"value":"0xa9f746462d870fdf8a65dc1f90e061e5"},"src":"2874:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2114,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2873:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2921:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2873:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2865:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2118,"nodeType":"ExpressionStatement","src":"2865:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2124,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2122,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2120,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"2938:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307834303030","id":2121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2948:6:21","typeDescriptions":{"typeIdentifier":"t_rational_16384_by_1","typeString":"int_const 16384"},"value":"0x4000"},"src":"2938:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2123,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2958:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2938:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2134,"nodeType":"IfStatement","src":"2934:86:21","trueBody":{"expression":{"id":2132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2125,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2961:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2131,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2126,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"2970:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783730643836396131353664326131623839306262336466363262616633326637","id":2127,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2978:34:21","typeDescriptions":{"typeIdentifier":"t_rational_149997214084966997727330242082538205943_by_1","typeString":"int_const 1499...(31 digits omitted)...5943"},"value":"0x70d869a156d2a1b890bb3df62baf32f7"},"src":"2970:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2129,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"2969:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2130,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3017:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"2969:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2961:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2133,"nodeType":"ExpressionStatement","src":"2961:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2137,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2135,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3034:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307838303030","id":2136,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3044:6:21","typeDescriptions":{"typeIdentifier":"t_rational_32768_by_1","typeString":"int_const 32768"},"value":"0x8000"},"src":"3034:16:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3054:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3034:21:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2149,"nodeType":"IfStatement","src":"3030:86:21","trueBody":{"expression":{"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2140,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3057:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2146,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2141,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3066:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783331626531333566393764303866643938313233313530353534326663666136","id":2142,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3074:34:21","typeDescriptions":{"typeIdentifier":"t_rational_66119101136024775622716233608466517926_by_1","typeString":"int_const 6611...(30 digits omitted)...7926"},"value":"0x31be135f97d08fd981231505542fcfa6"},"src":"3066:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2144,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3065:44:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2145,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3113:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3065:51:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3057:59:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2148,"nodeType":"ExpressionStatement","src":"3057:59:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2154,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2150,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3130:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783130303030","id":2151,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3140:7:21","typeDescriptions":{"typeIdentifier":"t_rational_65536_by_1","typeString":"int_const 65536"},"value":"0x10000"},"src":"3130:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3151:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3130:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2164,"nodeType":"IfStatement","src":"3126:86:21","trueBody":{"expression":{"id":2162,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2155,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3154:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2156,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3163:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"307839616135303862356237613834653163363737646535346633653939626339","id":2157,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3171:33:21","typeDescriptions":{"typeIdentifier":"t_rational_12847376061809297530290974190478138313_by_1","typeString":"int_const 1284...(30 digits omitted)...8313"},"value":"0x9aa508b5b7a84e1c677de54f3e99bc9"},"src":"3163:41:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2159,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3162:43:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2160,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3209:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3162:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3154:58:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2163,"nodeType":"ExpressionStatement","src":"3154:58:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2169,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2165,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3226:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783230303030","id":2166,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3236:7:21","typeDescriptions":{"typeIdentifier":"t_rational_131072_by_1","typeString":"int_const 131072"},"value":"0x20000"},"src":"3226:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2168,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3247:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3226:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2179,"nodeType":"IfStatement","src":"3222:85:21","trueBody":{"expression":{"id":2177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2170,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3250:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2173,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2171,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3259:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"3078356436616638646564623831313936363939633332393232356565363034","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3267:32:21","typeDescriptions":{"typeIdentifier":"t_rational_485053260817066172746253684029974020_by_1","typeString":"int_const 4850...(28 digits omitted)...4020"},"value":"0x5d6af8dedb81196699c329225ee604"},"src":"3259:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2174,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3258:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3304:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3258:49:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3250:57:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2178,"nodeType":"ExpressionStatement","src":"3250:57:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2180,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3321:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783430303030","id":2181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3331:7:21","typeDescriptions":{"typeIdentifier":"t_rational_262144_by_1","typeString":"int_const 262144"},"value":"0x40000"},"src":"3321:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3342:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3321:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2194,"nodeType":"IfStatement","src":"3317:83:21","trueBody":{"expression":{"id":2192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2185,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3345:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2186,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3354:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"307832323136653538346635666131656139323630343162656466653938","id":2187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3362:30:21","typeDescriptions":{"typeIdentifier":"t_rational_691415978906521570653435304214168_by_1","typeString":"int_const 6914...(25 digits omitted)...4168"},"value":"0x2216e584f5fa1ea926041bedfe98"},"src":"3354:38:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2189,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3353:40:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3397:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3353:47:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3345:55:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2193,"nodeType":"ExpressionStatement","src":"3345:55:21"}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2197,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2195,"name":"absTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1883,"src":"3414:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"30783830303030","id":2196,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3424:7:21","typeDescriptions":{"typeIdentifier":"t_rational_524288_by_1","typeString":"int_const 524288"},"value":"0x80000"},"src":"3414:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2198,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3435:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3414:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2209,"nodeType":"IfStatement","src":"3410:78:21","trueBody":{"expression":{"id":2207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2200,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3438:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2203,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2201,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3447:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"30783438613137303339316637646334323434346538666132","id":2202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3455:25:21","typeDescriptions":{"typeIdentifier":"t_rational_1404880482679654955896180642_by_1","typeString":"int_const 1404880482679654955896180642"},"value":"0x48a170391f7dc42444e8fa2"},"src":"3447:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2204,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3446:35:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3485:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"3446:42:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3438:50:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2208,"nodeType":"ExpressionStatement","src":"3438:50:21"}},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":2212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2210,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1877,"src":"3503:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3510:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3503:8:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2223,"nodeType":"IfStatement","src":"3499:47:21","trueBody":{"expression":{"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2213,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3513:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2220,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":2216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3526:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2215,"name":"uint256","nodeType":"ElementaryTypeName","src":"3526:7:21","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":2214,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3521:4:21","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":2217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3521:13:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":2218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"3521:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":2219,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3541:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3521:25:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3513:33:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2222,"nodeType":"ExpressionStatement","src":"3513:33:21"}},{"expression":{"id":2245,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1880,"src":"3856:12:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2243,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2229,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2227,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3880:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3889:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3880:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3879:13:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2231,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1915,"src":"3896:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"%","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"},"id":2234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3905:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3910:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"3905:7:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}}],"id":2235,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"3904:9:21","typeDescriptions":{"typeIdentifier":"t_rational_4294967296_by_1","typeString":"int_const 4294967296"}},"src":"3896:17:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3917:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3896:22:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"31","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3925:1:21","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"3896:30:21","trueExpression":{"hexValue":"30","id":2239,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3921:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2242,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3895:32:21","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"3879:48:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3871:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2225,"name":"uint160","nodeType":"ElementaryTypeName","src":"3871:7:21","typeDescriptions":{}}},"id":2244,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3871:57:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"3856:72:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"id":2246,"nodeType":"ExpressionStatement","src":"3856:72:21"}]},"documentation":{"id":1875,"nodeType":"StructuredDocumentation","src":"1053:297:21","text":"@notice Calculates sqrt(1.0001^tick) * 2^96\n @dev Throws if |tick| > max tick\n @param tick The input tick for the above formula\n @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\n at the given tick"},"id":2248,"implemented":true,"kind":"function","modifiers":[],"name":"getSqrtRatioAtTick","nodeType":"FunctionDefinition","parameters":{"id":1878,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1877,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":2248,"src":"1383:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1876,"name":"int24","nodeType":"ElementaryTypeName","src":"1383:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"1382:12:21"},"returnParameters":{"id":1881,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1880,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":2248,"src":"1418:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":1879,"name":"uint160","nodeType":"ElementaryTypeName","src":"1418:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"1417:22:21"},"scope":2388,"src":"1355:2580:21","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2386,"nodeType":"Block","src":"4439:4196:21","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":2259,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2257,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"4556:12:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2258,"name":"MIN_SQRT_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1870,"src":"4572:14:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4556:30:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2260,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"4590:12:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2261,"name":"MAX_SQRT_RATIO","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1874,"src":"4605:14:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"4590:29:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4556:63:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"52","id":2264,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4621:3:21","typeDescriptions":{"typeIdentifier":"t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2","typeString":"literal_string \"R\""},"value":"R"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ef22bddd350b943170a67d35191c27e310709a28c38b5762a152ff640108f5b2","typeString":"literal_string \"R\""}],"id":2256,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4548:7:21","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4548:77:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2266,"nodeType":"ExpressionStatement","src":"4548:77:21"},{"assignments":[2268],"declarations":[{"constant":false,"id":2268,"mutability":"mutable","name":"ratio","nodeType":"VariableDeclaration","scope":2386,"src":"4635:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2267,"name":"uint256","nodeType":"ElementaryTypeName","src":"4635:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2275,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2271,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"4659:12:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2270,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4651:7:21","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2269,"name":"uint256","nodeType":"ElementaryTypeName","src":"4651:7:21","typeDescriptions":{}}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4651:21:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3332","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4676:2:21","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"4651:27:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4635:43:21"},{"assignments":[2277],"declarations":[{"constant":false,"id":2277,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":2386,"src":"4689:9:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2276,"name":"uint256","nodeType":"ElementaryTypeName","src":"4689:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2279,"initialValue":{"id":2278,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"4701:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4689:17:21"},{"assignments":[2281],"declarations":[{"constant":false,"id":2281,"mutability":"mutable","name":"msb","nodeType":"VariableDeclaration","scope":2386,"src":"4716:11:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2280,"name":"uint256","nodeType":"ElementaryTypeName","src":"4716:7:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2283,"initialValue":{"hexValue":"30","id":2282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4730:1:21","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"4716:15:21"},{"AST":{"nodeType":"YulBlock","src":"4751:139:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4765:58:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4778:1:21","type":"","value":"7"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"4784:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"4787:34:21","type":"","value":"0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4781:2:21"},"nodeType":"YulFunctionCall","src":"4781:41:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4774:3:21"},"nodeType":"YulFunctionCall","src":"4774:49:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"4769:1:21","type":""}]},{"nodeType":"YulAssignment","src":"4836:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"4846:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"4851:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4843:2:21"},"nodeType":"YulFunctionCall","src":"4843:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"4836:3:21"}]},{"nodeType":"YulAssignment","src":"4866:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"4875:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"4878:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4871:3:21"},"nodeType":"YulFunctionCall","src":"4871:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4866:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"4836:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"4846:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"4784:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"4866:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"4878:1:21","valueSize":1}],"id":2284,"nodeType":"InlineAssembly","src":"4742:148:21"},{"AST":{"nodeType":"YulBlock","src":"4908:123:21","statements":[{"nodeType":"YulVariableDeclaration","src":"4922:42:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4935:1:21","type":"","value":"6"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"4941:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"4944:18:21","type":"","value":"0xFFFFFFFFFFFFFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4938:2:21"},"nodeType":"YulFunctionCall","src":"4938:25:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"4931:3:21"},"nodeType":"YulFunctionCall","src":"4931:33:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"4926:1:21","type":""}]},{"nodeType":"YulAssignment","src":"4977:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"4987:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"4992:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"4984:2:21"},"nodeType":"YulFunctionCall","src":"4984:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"4977:3:21"}]},{"nodeType":"YulAssignment","src":"5007:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5016:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"5019:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5012:3:21"},"nodeType":"YulFunctionCall","src":"5012:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5007:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"4977:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"4987:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"4941:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5007:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5019:1:21","valueSize":1}],"id":2285,"nodeType":"InlineAssembly","src":"4899:132:21"},{"AST":{"nodeType":"YulBlock","src":"5049:115:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5063:34:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5076:1:21","type":"","value":"5"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5082:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5085:10:21","type":"","value":"0xFFFFFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5079:2:21"},"nodeType":"YulFunctionCall","src":"5079:17:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5072:3:21"},"nodeType":"YulFunctionCall","src":"5072:25:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5067:1:21","type":""}]},{"nodeType":"YulAssignment","src":"5110:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5120:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"5125:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5117:2:21"},"nodeType":"YulFunctionCall","src":"5117:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5110:3:21"}]},{"nodeType":"YulAssignment","src":"5140:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5149:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"5152:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5145:3:21"},"nodeType":"YulFunctionCall","src":"5145:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5140:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5110:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5120:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5082:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5140:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5152:1:21","valueSize":1}],"id":2286,"nodeType":"InlineAssembly","src":"5040:124:21"},{"AST":{"nodeType":"YulBlock","src":"5182:111:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5196:30:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5209:1:21","type":"","value":"4"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5215:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5218:6:21","type":"","value":"0xFFFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5212:2:21"},"nodeType":"YulFunctionCall","src":"5212:13:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5205:3:21"},"nodeType":"YulFunctionCall","src":"5205:21:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5200:1:21","type":""}]},{"nodeType":"YulAssignment","src":"5239:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5249:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"5254:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5246:2:21"},"nodeType":"YulFunctionCall","src":"5246:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5239:3:21"}]},{"nodeType":"YulAssignment","src":"5269:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5278:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"5281:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5274:3:21"},"nodeType":"YulFunctionCall","src":"5274:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5269:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5239:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5249:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5215:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5269:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5281:1:21","valueSize":1}],"id":2287,"nodeType":"InlineAssembly","src":"5173:120:21"},{"AST":{"nodeType":"YulBlock","src":"5311:109:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5325:28:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5338:1:21","type":"","value":"3"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5344:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5347:4:21","type":"","value":"0xFF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5341:2:21"},"nodeType":"YulFunctionCall","src":"5341:11:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5334:3:21"},"nodeType":"YulFunctionCall","src":"5334:19:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5329:1:21","type":""}]},{"nodeType":"YulAssignment","src":"5366:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5376:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"5381:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5373:2:21"},"nodeType":"YulFunctionCall","src":"5373:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5366:3:21"}]},{"nodeType":"YulAssignment","src":"5396:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5405:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"5408:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5401:3:21"},"nodeType":"YulFunctionCall","src":"5401:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5396:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5366:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5376:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5344:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5396:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5408:1:21","valueSize":1}],"id":2288,"nodeType":"InlineAssembly","src":"5302:118:21"},{"AST":{"nodeType":"YulBlock","src":"5438:108:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5452:27:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5465:1:21","type":"","value":"2"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5471:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5474:3:21","type":"","value":"0xF"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5468:2:21"},"nodeType":"YulFunctionCall","src":"5468:10:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5461:3:21"},"nodeType":"YulFunctionCall","src":"5461:18:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5456:1:21","type":""}]},{"nodeType":"YulAssignment","src":"5492:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5502:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"5507:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5499:2:21"},"nodeType":"YulFunctionCall","src":"5499:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5492:3:21"}]},{"nodeType":"YulAssignment","src":"5522:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5531:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"5534:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5527:3:21"},"nodeType":"YulFunctionCall","src":"5527:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5522:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5492:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5502:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5471:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5522:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5534:1:21","valueSize":1}],"id":2289,"nodeType":"InlineAssembly","src":"5429:117:21"},{"AST":{"nodeType":"YulBlock","src":"5564:108:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5578:27:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5591:1:21","type":"","value":"1"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5597:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5600:3:21","type":"","value":"0x3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5594:2:21"},"nodeType":"YulFunctionCall","src":"5594:10:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"5587:3:21"},"nodeType":"YulFunctionCall","src":"5587:18:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5582:1:21","type":""}]},{"nodeType":"YulAssignment","src":"5618:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5628:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"5633:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5625:2:21"},"nodeType":"YulFunctionCall","src":"5625:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5618:3:21"}]},{"nodeType":"YulAssignment","src":"5648:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"5657:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"5660:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5653:3:21"},"nodeType":"YulFunctionCall","src":"5653:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5648:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5618:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5628:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5597:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5648:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5660:1:21","valueSize":1}],"id":2290,"nodeType":"InlineAssembly","src":"5555:117:21"},{"AST":{"nodeType":"YulBlock","src":"5690:73:21","statements":[{"nodeType":"YulVariableDeclaration","src":"5704:19:21","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5716:1:21"},{"kind":"number","nodeType":"YulLiteral","src":"5719:3:21","type":"","value":"0x1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5713:2:21"},"nodeType":"YulFunctionCall","src":"5713:10:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5708:1:21","type":""}]},{"nodeType":"YulAssignment","src":"5736:17:21","value":{"arguments":[{"name":"msb","nodeType":"YulIdentifier","src":"5746:3:21"},{"name":"f","nodeType":"YulIdentifier","src":"5751:1:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"5743:2:21"},"nodeType":"YulFunctionCall","src":"5743:10:21"},"variableNames":[{"name":"msb","nodeType":"YulIdentifier","src":"5736:3:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5736:3:21","valueSize":1},{"declaration":2281,"isOffset":false,"isSlot":false,"src":"5746:3:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5716:1:21","valueSize":1}],"id":2291,"nodeType":"InlineAssembly","src":"5681:82:21"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2292,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5777:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"313238","id":2293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5784:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"5777:10:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"expression":{"id":2311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2304,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5828:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2305,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"5832:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"313237","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5842:3:21","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":2307,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5848:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5842:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2309,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5841:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5832:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5828:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2312,"nodeType":"ExpressionStatement","src":"5828:24:21"},"id":2313,"nodeType":"IfStatement","src":"5773:79:21","trueBody":{"expression":{"id":2302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2295,"name":"r","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2277,"src":"5789:1:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2301,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2296,"name":"ratio","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2268,"src":"5793:5:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2297,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5803:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"313237","id":2298,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5809:3:21","typeDescriptions":{"typeIdentifier":"t_rational_127_by_1","typeString":"int_const 127"},"value":"127"},"src":"5803:9:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2300,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5802:11:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5793:20:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5789:24:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2303,"nodeType":"ExpressionStatement","src":"5789:24:21"}},{"assignments":[2315],"declarations":[{"constant":false,"id":2315,"mutability":"mutable","name":"log_2","nodeType":"VariableDeclaration","scope":2386,"src":"5863:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2314,"name":"int256","nodeType":"ElementaryTypeName","src":"5863:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2325,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2321,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2318,"name":"msb","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2281,"src":"5886:3:21","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2317,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5879:6:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":2316,"name":"int256","nodeType":"ElementaryTypeName","src":"5879:6:21","typeDescriptions":{}}},"id":2319,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5879:11:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"313238","id":2320,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5893:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"5879:17:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2322,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5878:19:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"hexValue":"3634","id":2323,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5901:2:21","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"5878:25:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"5863:40:21"},{"AST":{"nodeType":"YulBlock","src":"5923:151:21","statements":[{"nodeType":"YulAssignment","src":"5937:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5946:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"5955:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"5958:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"5951:3:21"},"nodeType":"YulFunctionCall","src":"5951:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5942:3:21"},"nodeType":"YulFunctionCall","src":"5942:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"5937:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"5974:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5987:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"5992:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"5983:3:21"},"nodeType":"YulFunctionCall","src":"5983:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"5978:1:21","type":""}]},{"nodeType":"YulAssignment","src":"6007:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6019:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6030:2:21","type":"","value":"63"},{"name":"f","nodeType":"YulIdentifier","src":"6034:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6026:3:21"},"nodeType":"YulFunctionCall","src":"6026:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6016:2:21"},"nodeType":"YulFunctionCall","src":"6016:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6007:5:21"}]},{"nodeType":"YulAssignment","src":"6050:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6059:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6062:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6055:3:21"},"nodeType":"YulFunctionCall","src":"6055:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6050:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6007:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6019:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5937:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5955:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5958:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"5992:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6050:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6062:1:21","valueSize":1}],"id":2326,"nodeType":"InlineAssembly","src":"5914:160:21"},{"AST":{"nodeType":"YulBlock","src":"6092:151:21","statements":[{"nodeType":"YulAssignment","src":"6106:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6115:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6124:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6127:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6120:3:21"},"nodeType":"YulFunctionCall","src":"6120:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6111:3:21"},"nodeType":"YulFunctionCall","src":"6111:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6106:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"6143:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6156:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6161:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6152:3:21"},"nodeType":"YulFunctionCall","src":"6152:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6147:1:21","type":""}]},{"nodeType":"YulAssignment","src":"6176:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6188:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6199:2:21","type":"","value":"62"},{"name":"f","nodeType":"YulIdentifier","src":"6203:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6195:3:21"},"nodeType":"YulFunctionCall","src":"6195:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6185:2:21"},"nodeType":"YulFunctionCall","src":"6185:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6176:5:21"}]},{"nodeType":"YulAssignment","src":"6219:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6228:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6231:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6224:3:21"},"nodeType":"YulFunctionCall","src":"6224:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6219:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6176:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6188:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6106:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6124:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6127:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6161:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6219:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6231:1:21","valueSize":1}],"id":2327,"nodeType":"InlineAssembly","src":"6083:160:21"},{"AST":{"nodeType":"YulBlock","src":"6261:151:21","statements":[{"nodeType":"YulAssignment","src":"6275:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6284:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6293:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6296:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6289:3:21"},"nodeType":"YulFunctionCall","src":"6289:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6280:3:21"},"nodeType":"YulFunctionCall","src":"6280:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6275:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"6312:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6325:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6330:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6321:3:21"},"nodeType":"YulFunctionCall","src":"6321:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6316:1:21","type":""}]},{"nodeType":"YulAssignment","src":"6345:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6357:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6368:2:21","type":"","value":"61"},{"name":"f","nodeType":"YulIdentifier","src":"6372:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6364:3:21"},"nodeType":"YulFunctionCall","src":"6364:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6354:2:21"},"nodeType":"YulFunctionCall","src":"6354:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6345:5:21"}]},{"nodeType":"YulAssignment","src":"6388:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6397:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6400:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6393:3:21"},"nodeType":"YulFunctionCall","src":"6393:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6388:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6345:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6357:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6275:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6293:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6296:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6330:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6388:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6400:1:21","valueSize":1}],"id":2328,"nodeType":"InlineAssembly","src":"6252:160:21"},{"AST":{"nodeType":"YulBlock","src":"6430:151:21","statements":[{"nodeType":"YulAssignment","src":"6444:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6453:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6462:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6465:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6458:3:21"},"nodeType":"YulFunctionCall","src":"6458:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6449:3:21"},"nodeType":"YulFunctionCall","src":"6449:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6444:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"6481:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6494:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6499:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6490:3:21"},"nodeType":"YulFunctionCall","src":"6490:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6485:1:21","type":""}]},{"nodeType":"YulAssignment","src":"6514:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6526:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6537:2:21","type":"","value":"60"},{"name":"f","nodeType":"YulIdentifier","src":"6541:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6533:3:21"},"nodeType":"YulFunctionCall","src":"6533:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6523:2:21"},"nodeType":"YulFunctionCall","src":"6523:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6514:5:21"}]},{"nodeType":"YulAssignment","src":"6557:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6566:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6569:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6562:3:21"},"nodeType":"YulFunctionCall","src":"6562:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6557:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6514:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6526:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6444:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6462:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6465:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6499:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6557:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6569:1:21","valueSize":1}],"id":2329,"nodeType":"InlineAssembly","src":"6421:160:21"},{"AST":{"nodeType":"YulBlock","src":"6599:151:21","statements":[{"nodeType":"YulAssignment","src":"6613:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6622:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6631:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6634:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6627:3:21"},"nodeType":"YulFunctionCall","src":"6627:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6618:3:21"},"nodeType":"YulFunctionCall","src":"6618:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6613:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"6650:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6663:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6668:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6659:3:21"},"nodeType":"YulFunctionCall","src":"6659:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6654:1:21","type":""}]},{"nodeType":"YulAssignment","src":"6683:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6695:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6706:2:21","type":"","value":"59"},{"name":"f","nodeType":"YulIdentifier","src":"6710:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6702:3:21"},"nodeType":"YulFunctionCall","src":"6702:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6692:2:21"},"nodeType":"YulFunctionCall","src":"6692:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6683:5:21"}]},{"nodeType":"YulAssignment","src":"6726:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6735:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6738:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6731:3:21"},"nodeType":"YulFunctionCall","src":"6731:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6726:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6683:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6695:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6613:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6631:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6634:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6668:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6726:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6738:1:21","valueSize":1}],"id":2330,"nodeType":"InlineAssembly","src":"6590:160:21"},{"AST":{"nodeType":"YulBlock","src":"6768:151:21","statements":[{"nodeType":"YulAssignment","src":"6782:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6791:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6800:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6803:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6796:3:21"},"nodeType":"YulFunctionCall","src":"6796:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6787:3:21"},"nodeType":"YulFunctionCall","src":"6787:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6782:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"6819:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6832:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"6837:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6828:3:21"},"nodeType":"YulFunctionCall","src":"6828:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6823:1:21","type":""}]},{"nodeType":"YulAssignment","src":"6852:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"6864:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6875:2:21","type":"","value":"58"},{"name":"f","nodeType":"YulIdentifier","src":"6879:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6871:3:21"},"nodeType":"YulFunctionCall","src":"6871:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"6861:2:21"},"nodeType":"YulFunctionCall","src":"6861:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"6852:5:21"}]},{"nodeType":"YulAssignment","src":"6895:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"6904:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6907:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6900:3:21"},"nodeType":"YulFunctionCall","src":"6900:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6895:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6852:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"6864:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6782:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6800:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6803:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6837:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6895:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6907:1:21","valueSize":1}],"id":2331,"nodeType":"InlineAssembly","src":"6759:160:21"},{"AST":{"nodeType":"YulBlock","src":"6937:151:21","statements":[{"nodeType":"YulAssignment","src":"6951:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6960:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"6969:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"6972:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"6965:3:21"},"nodeType":"YulFunctionCall","src":"6965:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6956:3:21"},"nodeType":"YulFunctionCall","src":"6956:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"6951:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"6988:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7001:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7006:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"6997:3:21"},"nodeType":"YulFunctionCall","src":"6997:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"6992:1:21","type":""}]},{"nodeType":"YulAssignment","src":"7021:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7033:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7044:2:21","type":"","value":"57"},{"name":"f","nodeType":"YulIdentifier","src":"7048:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7040:3:21"},"nodeType":"YulFunctionCall","src":"7040:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7030:2:21"},"nodeType":"YulFunctionCall","src":"7030:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7021:5:21"}]},{"nodeType":"YulAssignment","src":"7064:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7073:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7076:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7069:3:21"},"nodeType":"YulFunctionCall","src":"7069:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7064:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7021:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7033:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6951:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6969:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"6972:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7006:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7064:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7076:1:21","valueSize":1}],"id":2332,"nodeType":"InlineAssembly","src":"6928:160:21"},{"AST":{"nodeType":"YulBlock","src":"7106:151:21","statements":[{"nodeType":"YulAssignment","src":"7120:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7129:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7138:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7141:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7134:3:21"},"nodeType":"YulFunctionCall","src":"7134:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7125:3:21"},"nodeType":"YulFunctionCall","src":"7125:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7120:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"7157:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7170:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7175:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7166:3:21"},"nodeType":"YulFunctionCall","src":"7166:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7161:1:21","type":""}]},{"nodeType":"YulAssignment","src":"7190:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7202:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7213:2:21","type":"","value":"56"},{"name":"f","nodeType":"YulIdentifier","src":"7217:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7209:3:21"},"nodeType":"YulFunctionCall","src":"7209:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7199:2:21"},"nodeType":"YulFunctionCall","src":"7199:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7190:5:21"}]},{"nodeType":"YulAssignment","src":"7233:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7242:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7245:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7238:3:21"},"nodeType":"YulFunctionCall","src":"7238:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7233:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7190:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7202:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7120:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7138:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7141:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7175:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7233:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7245:1:21","valueSize":1}],"id":2333,"nodeType":"InlineAssembly","src":"7097:160:21"},{"AST":{"nodeType":"YulBlock","src":"7275:151:21","statements":[{"nodeType":"YulAssignment","src":"7289:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7298:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7307:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7310:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7303:3:21"},"nodeType":"YulFunctionCall","src":"7303:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7294:3:21"},"nodeType":"YulFunctionCall","src":"7294:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7289:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"7326:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7339:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7344:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7335:3:21"},"nodeType":"YulFunctionCall","src":"7335:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7330:1:21","type":""}]},{"nodeType":"YulAssignment","src":"7359:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7371:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7382:2:21","type":"","value":"55"},{"name":"f","nodeType":"YulIdentifier","src":"7386:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7378:3:21"},"nodeType":"YulFunctionCall","src":"7378:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7368:2:21"},"nodeType":"YulFunctionCall","src":"7368:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7359:5:21"}]},{"nodeType":"YulAssignment","src":"7402:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7411:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7414:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7407:3:21"},"nodeType":"YulFunctionCall","src":"7407:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7402:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7359:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7371:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7289:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7307:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7310:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7344:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7402:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7414:1:21","valueSize":1}],"id":2334,"nodeType":"InlineAssembly","src":"7266:160:21"},{"AST":{"nodeType":"YulBlock","src":"7444:151:21","statements":[{"nodeType":"YulAssignment","src":"7458:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7467:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7476:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7479:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7472:3:21"},"nodeType":"YulFunctionCall","src":"7472:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7463:3:21"},"nodeType":"YulFunctionCall","src":"7463:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7458:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"7495:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7508:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7513:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7504:3:21"},"nodeType":"YulFunctionCall","src":"7504:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7499:1:21","type":""}]},{"nodeType":"YulAssignment","src":"7528:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7540:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7551:2:21","type":"","value":"54"},{"name":"f","nodeType":"YulIdentifier","src":"7555:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7547:3:21"},"nodeType":"YulFunctionCall","src":"7547:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7537:2:21"},"nodeType":"YulFunctionCall","src":"7537:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7528:5:21"}]},{"nodeType":"YulAssignment","src":"7571:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7580:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7583:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7576:3:21"},"nodeType":"YulFunctionCall","src":"7576:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7571:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7528:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7540:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7458:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7476:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7479:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7513:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7571:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7583:1:21","valueSize":1}],"id":2335,"nodeType":"InlineAssembly","src":"7435:160:21"},{"AST":{"nodeType":"YulBlock","src":"7613:151:21","statements":[{"nodeType":"YulAssignment","src":"7627:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7636:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7645:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7648:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7641:3:21"},"nodeType":"YulFunctionCall","src":"7641:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7632:3:21"},"nodeType":"YulFunctionCall","src":"7632:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7627:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"7664:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7677:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7682:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7673:3:21"},"nodeType":"YulFunctionCall","src":"7673:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7668:1:21","type":""}]},{"nodeType":"YulAssignment","src":"7697:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7709:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7720:2:21","type":"","value":"53"},{"name":"f","nodeType":"YulIdentifier","src":"7724:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7716:3:21"},"nodeType":"YulFunctionCall","src":"7716:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7706:2:21"},"nodeType":"YulFunctionCall","src":"7706:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7697:5:21"}]},{"nodeType":"YulAssignment","src":"7740:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7749:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7752:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7745:3:21"},"nodeType":"YulFunctionCall","src":"7745:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7740:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7697:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7709:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7627:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7645:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7648:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7682:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7740:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7752:1:21","valueSize":1}],"id":2336,"nodeType":"InlineAssembly","src":"7604:160:21"},{"AST":{"nodeType":"YulBlock","src":"7782:151:21","statements":[{"nodeType":"YulAssignment","src":"7796:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7805:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7814:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7817:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7810:3:21"},"nodeType":"YulFunctionCall","src":"7810:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7801:3:21"},"nodeType":"YulFunctionCall","src":"7801:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7796:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"7833:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7846:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"7851:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7842:3:21"},"nodeType":"YulFunctionCall","src":"7842:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"7837:1:21","type":""}]},{"nodeType":"YulAssignment","src":"7866:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"7878:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7889:2:21","type":"","value":"52"},{"name":"f","nodeType":"YulIdentifier","src":"7893:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7885:3:21"},"nodeType":"YulFunctionCall","src":"7885:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"7875:2:21"},"nodeType":"YulFunctionCall","src":"7875:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"7866:5:21"}]},{"nodeType":"YulAssignment","src":"7909:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"7918:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7921:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7914:3:21"},"nodeType":"YulFunctionCall","src":"7914:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7909:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7866:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"7878:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7796:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7814:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7817:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7851:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7909:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7921:1:21","valueSize":1}],"id":2337,"nodeType":"InlineAssembly","src":"7773:160:21"},{"AST":{"nodeType":"YulBlock","src":"7951:151:21","statements":[{"nodeType":"YulAssignment","src":"7965:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7974:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"7983:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"7986:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"7979:3:21"},"nodeType":"YulFunctionCall","src":"7979:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"7970:3:21"},"nodeType":"YulFunctionCall","src":"7970:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"7965:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"8002:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8015:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"8020:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8011:3:21"},"nodeType":"YulFunctionCall","src":"8011:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"8006:1:21","type":""}]},{"nodeType":"YulAssignment","src":"8035:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"8047:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8058:2:21","type":"","value":"51"},{"name":"f","nodeType":"YulIdentifier","src":"8062:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8054:3:21"},"nodeType":"YulFunctionCall","src":"8054:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8044:2:21"},"nodeType":"YulFunctionCall","src":"8044:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"8035:5:21"}]},{"nodeType":"YulAssignment","src":"8078:14:21","value":{"arguments":[{"name":"f","nodeType":"YulIdentifier","src":"8087:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"8090:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8083:3:21"},"nodeType":"YulFunctionCall","src":"8083:9:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8078:1:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"8035:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"8047:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7965:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7983:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"7986:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"8020:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"8078:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"8090:1:21","valueSize":1}],"id":2338,"nodeType":"InlineAssembly","src":"7942:160:21"},{"AST":{"nodeType":"YulBlock","src":"8120:124:21","statements":[{"nodeType":"YulAssignment","src":"8134:24:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8143:3:21","type":"","value":"127"},{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"8152:1:21"},{"name":"r","nodeType":"YulIdentifier","src":"8155:1:21"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8148:3:21"},"nodeType":"YulFunctionCall","src":"8148:9:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8139:3:21"},"nodeType":"YulFunctionCall","src":"8139:19:21"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"8134:1:21"}]},{"nodeType":"YulVariableDeclaration","src":"8171:20:21","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8184:3:21","type":"","value":"128"},{"name":"r","nodeType":"YulIdentifier","src":"8189:1:21"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"8180:3:21"},"nodeType":"YulFunctionCall","src":"8180:11:21"},"variables":[{"name":"f","nodeType":"YulTypedName","src":"8175:1:21","type":""}]},{"nodeType":"YulAssignment","src":"8204:30:21","value":{"arguments":[{"name":"log_2","nodeType":"YulIdentifier","src":"8216:5:21"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8227:2:21","type":"","value":"50"},{"name":"f","nodeType":"YulIdentifier","src":"8231:1:21"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8223:3:21"},"nodeType":"YulFunctionCall","src":"8223:10:21"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"8213:2:21"},"nodeType":"YulFunctionCall","src":"8213:21:21"},"variableNames":[{"name":"log_2","nodeType":"YulIdentifier","src":"8204:5:21"}]}]},"evmVersion":"istanbul","externalReferences":[{"declaration":2315,"isOffset":false,"isSlot":false,"src":"8204:5:21","valueSize":1},{"declaration":2315,"isOffset":false,"isSlot":false,"src":"8216:5:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"8134:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"8152:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"8155:1:21","valueSize":1},{"declaration":2277,"isOffset":false,"isSlot":false,"src":"8189:1:21","valueSize":1}],"id":2339,"nodeType":"InlineAssembly","src":"8111:133:21"},{"assignments":[2341],"declarations":[{"constant":false,"id":2341,"mutability":"mutable","name":"log_sqrt10001","nodeType":"VariableDeclaration","scope":2386,"src":"8254:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":2340,"name":"int256","nodeType":"ElementaryTypeName","src":"8254:6:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"id":2345,"initialValue":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2342,"name":"log_2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2315,"src":"8277:5:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"323535373338393538393939363033383236333437313431","id":2343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8285:24:21","typeDescriptions":{"typeIdentifier":"t_rational_255738958999603826347141_by_1","typeString":"int_const 255738958999603826347141"},"value":"255738958999603826347141"},"src":"8277:32:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"VariableDeclarationStatement","src":"8254:55:21"},{"assignments":[2347],"declarations":[{"constant":false,"id":2347,"mutability":"mutable","name":"tickLow","nodeType":"VariableDeclaration","scope":2386,"src":"8338:13:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2346,"name":"int24","nodeType":"ElementaryTypeName","src":"8338:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":2357,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2350,"name":"log_sqrt10001","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"8361:13:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"33343032393932393536383039313332343138353936313430313030363630323437323130","id":2351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8377:37:21","typeDescriptions":{"typeIdentifier":"t_rational_3402992956809132418596140100660247210_by_1","typeString":"int_const 3402...(29 digits omitted)...7210"},"value":"3402992956809132418596140100660247210"},"src":"8361:53:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2353,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8360:55:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2354,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8419:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8360:62:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2349,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8354:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":2348,"name":"int24","nodeType":"ElementaryTypeName","src":"8354:5:21","typeDescriptions":{}}},"id":2356,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8354:69:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"8338:85:21"},{"assignments":[2359],"declarations":[{"constant":false,"id":2359,"mutability":"mutable","name":"tickHi","nodeType":"VariableDeclaration","scope":2386,"src":"8433:12:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2358,"name":"int24","nodeType":"ElementaryTypeName","src":"8433:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":2369,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":2364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2362,"name":"log_sqrt10001","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2341,"src":"8455:13:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"323931333339343634373731393839363232393037303237363231313533333938303838343935","id":2363,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:39:21","typeDescriptions":{"typeIdentifier":"t_rational_291339464771989622907027621153398088495_by_1","typeString":"int_const 2913...(31 digits omitted)...8495"},"value":"291339464771989622907027621153398088495"},"src":"8455:55:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"id":2365,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8454:57:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8515:3:21","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8454:64:21","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":2361,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8448:5:21","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":2360,"name":"int24","nodeType":"ElementaryTypeName","src":"8448:5:21","typeDescriptions":{}}},"id":2368,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8448:71:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"8433:86:21"},{"expression":{"id":2384,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2370,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2254,"src":"8530:4:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2371,"name":"tickLow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"8537:7:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2372,"name":"tickHi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"8548:6:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8537:17:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"condition":{"commonType":{"typeIdentifier":"t_uint160","typeString":"uint160"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":2376,"name":"tickHi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"8586:6:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":2375,"name":"getSqrtRatioAtTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2248,"src":"8567:18:21","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_int24_$returns$_t_uint160_$","typeString":"function (int24) pure returns (uint160)"}},"id":2377,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8567:26:21","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"id":2378,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8597:12:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"8567:42:21","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":2381,"name":"tickLow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"8621:7:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":2382,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8567:61:21","trueExpression":{"id":2380,"name":"tickHi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2359,"src":"8612:6:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":2383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8537:91:21","trueExpression":{"id":2374,"name":"tickLow","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2347,"src":"8557:7:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8530:98:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":2385,"nodeType":"ExpressionStatement","src":"8530:98:21"}]},"documentation":{"id":2249,"nodeType":"StructuredDocumentation","src":"3941:408:21","text":"@notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\n @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\n ever return.\n @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\n @return tick The greatest tick for which the ratio is less than or equal to the input ratio"},"id":2387,"implemented":true,"kind":"function","modifiers":[],"name":"getTickAtSqrtRatio","nodeType":"FunctionDefinition","parameters":{"id":2252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2251,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":2387,"src":"4382:20:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2250,"name":"uint160","nodeType":"ElementaryTypeName","src":"4382:7:21","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"4381:22:21"},"returnParameters":{"id":2255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2254,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":2387,"src":"4427:10:21","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2253,"name":"int24","nodeType":"ElementaryTypeName","src":"4427:5:21","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"4426:12:21"},"scope":2388,"src":"4354:4281:21","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2389,"src":"306:8331:21"}],"src":"45:8593:21"},"id":21},"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol","exportedSymbols":{"IERC165":[121],"IERC721":[883],"IERC721Permit":[2423]},"id":2424,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2390,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:22"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721.sol","id":2391,"nodeType":"ImportDirective","scope":2424,"sourceUnit":884,"src":"71:58:22","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2393,"name":"IERC721","nodeType":"UserDefinedTypeName","referencedDeclaration":883,"src":"282:7:22","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721_$883","typeString":"contract IERC721"}},"id":2394,"nodeType":"InheritanceSpecifier","src":"282:7:22"}],"contractDependencies":[121,883],"contractKind":"interface","documentation":{"id":2392,"nodeType":"StructuredDocumentation","src":"131:124:22","text":"@title ERC721 with permit\n @notice Extension to ERC721 that includes a permit function for signature based approvals"},"fullyImplemented":false,"id":2423,"linearizedBaseContracts":[2423,883,121],"name":"IERC721Permit","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2395,"nodeType":"StructuredDocumentation","src":"296:104:22","text":"@notice The permit typehash used in the permit signature\n @return The typehash for the permit"},"functionSelector":"30adf81f","id":2400,"implemented":false,"kind":"function","modifiers":[],"name":"PERMIT_TYPEHASH","nodeType":"FunctionDefinition","parameters":{"id":2396,"nodeType":"ParameterList","parameters":[],"src":"429:2:22"},"returnParameters":{"id":2399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2398,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2400,"src":"455:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2397,"name":"bytes32","nodeType":"ElementaryTypeName","src":"455:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"454:9:22"},"scope":2423,"src":"405:59:22","stateMutability":"pure","virtual":false,"visibility":"external"},{"documentation":{"id":2401,"nodeType":"StructuredDocumentation","src":"470:135:22","text":"@notice The domain separator used in the permit signature\n @return The domain seperator used in encoding of permit signature"},"functionSelector":"3644e515","id":2406,"implemented":false,"kind":"function","modifiers":[],"name":"DOMAIN_SEPARATOR","nodeType":"FunctionDefinition","parameters":{"id":2402,"nodeType":"ParameterList","parameters":[],"src":"635:2:22"},"returnParameters":{"id":2405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2404,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2406,"src":"661:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2403,"name":"bytes32","nodeType":"ElementaryTypeName","src":"661:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"660:9:22"},"scope":2423,"src":"610:60:22","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2407,"nodeType":"StructuredDocumentation","src":"676:605:22","text":"@notice Approve of a specific token ID for spending by spender via signature\n @param spender The account that is being approved\n @param tokenId The ID of the token that is being approved for spending\n @param deadline The deadline timestamp by which the call must be mined for the approve to work\n @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\n @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\n @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`"},"functionSelector":"7ac2ff7b","id":2422,"implemented":false,"kind":"function","modifiers":[],"name":"permit","nodeType":"FunctionDefinition","parameters":{"id":2420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2409,"mutability":"mutable","name":"spender","nodeType":"VariableDeclaration","scope":2422,"src":"1311:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2408,"name":"address","nodeType":"ElementaryTypeName","src":"1311:7:22","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2411,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2422,"src":"1336:15:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2410,"name":"uint256","nodeType":"ElementaryTypeName","src":"1336:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2413,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2422,"src":"1361:16:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2412,"name":"uint256","nodeType":"ElementaryTypeName","src":"1361:7:22","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2415,"mutability":"mutable","name":"v","nodeType":"VariableDeclaration","scope":2422,"src":"1387:7:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2414,"name":"uint8","nodeType":"ElementaryTypeName","src":"1387:5:22","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"},{"constant":false,"id":2417,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":2422,"src":"1404:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2416,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1404:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":2419,"mutability":"mutable","name":"s","nodeType":"VariableDeclaration","scope":2422,"src":"1423:9:22","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2418,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1423:7:22","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1301:137:22"},"returnParameters":{"id":2421,"nodeType":"ParameterList","parameters":[],"src":"1455:0:22"},"scope":2423,"src":"1286:170:22","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2424,"src":"255:1203:22"}],"src":"45:1414:22"},"id":22},"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol","exportedSymbols":{"IERC165":[121],"IERC721":[883],"IERC721Enumerable":[914],"IERC721Metadata":[941],"IERC721Permit":[2423],"INonfungiblePositionManager":[2618],"IPeripheryImmutableState":[2634],"IPeripheryPayments":[2660],"IPoolInitializer":[2679],"PoolAddress":[2884]},"id":2619,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2425,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:23"},{"id":2426,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:23"},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol","id":2427,"nodeType":"ImportDirective","scope":2619,"sourceUnit":942,"src":"91:66:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol","file":"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol","id":2428,"nodeType":"ImportDirective","scope":2619,"sourceUnit":915,"src":"158:68:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol","file":"./IPoolInitializer.sol","id":2429,"nodeType":"ImportDirective","scope":2619,"sourceUnit":2680,"src":"228:32:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol","file":"./IERC721Permit.sol","id":2430,"nodeType":"ImportDirective","scope":2619,"sourceUnit":2424,"src":"261:29:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol","file":"./IPeripheryPayments.sol","id":2431,"nodeType":"ImportDirective","scope":2619,"sourceUnit":2661,"src":"291:34:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol","file":"./IPeripheryImmutableState.sol","id":2432,"nodeType":"ImportDirective","scope":2619,"sourceUnit":2635,"src":"326:40:23","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol","file":"../libraries/PoolAddress.sol","id":2433,"nodeType":"ImportDirective","scope":2619,"sourceUnit":2885,"src":"367:38:23","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2435,"name":"IPoolInitializer","nodeType":"UserDefinedTypeName","referencedDeclaration":2679,"src":"629:16:23","typeDescriptions":{"typeIdentifier":"t_contract$_IPoolInitializer_$2679","typeString":"contract IPoolInitializer"}},"id":2436,"nodeType":"InheritanceSpecifier","src":"629:16:23"},{"baseName":{"id":2437,"name":"IPeripheryPayments","nodeType":"UserDefinedTypeName","referencedDeclaration":2660,"src":"651:18:23","typeDescriptions":{"typeIdentifier":"t_contract$_IPeripheryPayments_$2660","typeString":"contract IPeripheryPayments"}},"id":2438,"nodeType":"InheritanceSpecifier","src":"651:18:23"},{"baseName":{"id":2439,"name":"IPeripheryImmutableState","nodeType":"UserDefinedTypeName","referencedDeclaration":2634,"src":"675:24:23","typeDescriptions":{"typeIdentifier":"t_contract$_IPeripheryImmutableState_$2634","typeString":"contract IPeripheryImmutableState"}},"id":2440,"nodeType":"InheritanceSpecifier","src":"675:24:23"},{"baseName":{"id":2441,"name":"IERC721Metadata","nodeType":"UserDefinedTypeName","referencedDeclaration":941,"src":"705:15:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Metadata_$941","typeString":"contract IERC721Metadata"}},"id":2442,"nodeType":"InheritanceSpecifier","src":"705:15:23"},{"baseName":{"id":2443,"name":"IERC721Enumerable","nodeType":"UserDefinedTypeName","referencedDeclaration":914,"src":"726:17:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Enumerable_$914","typeString":"contract IERC721Enumerable"}},"id":2444,"nodeType":"InheritanceSpecifier","src":"726:17:23"},{"baseName":{"id":2445,"name":"IERC721Permit","nodeType":"UserDefinedTypeName","referencedDeclaration":2423,"src":"749:13:23","typeDescriptions":{"typeIdentifier":"t_contract$_IERC721Permit_$2423","typeString":"contract IERC721Permit"}},"id":2446,"nodeType":"InheritanceSpecifier","src":"749:13:23"}],"contractDependencies":[121,883,914,941,2423,2634,2660,2679],"contractKind":"interface","documentation":{"id":2434,"nodeType":"StructuredDocumentation","src":"407:177:23","text":"@title Non-fungible token for positions\n @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\n and authorized."},"fullyImplemented":false,"id":2618,"linearizedBaseContracts":[2618,2423,914,941,883,121,2634,2660,2679],"name":"INonfungiblePositionManager","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":2447,"nodeType":"StructuredDocumentation","src":"769:458:23","text":"@notice Emitted when liquidity is increased for a position NFT\n @dev Also emitted when a token is minted\n @param tokenId The ID of the token for which liquidity was increased\n @param liquidity The amount by which liquidity for the NFT position was increased\n @param amount0 The amount of token0 that was paid for the increase in liquidity\n @param amount1 The amount of token1 that was paid for the increase in liquidity"},"id":2457,"name":"IncreaseLiquidity","nodeType":"EventDefinition","parameters":{"id":2456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2457,"src":"1256:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2448,"name":"uint256","nodeType":"ElementaryTypeName","src":"1256:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2451,"indexed":false,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2457,"src":"1281:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2450,"name":"uint128","nodeType":"ElementaryTypeName","src":"1281:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2453,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2457,"src":"1300:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2452,"name":"uint256","nodeType":"ElementaryTypeName","src":"1300:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2455,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2457,"src":"1317:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2454,"name":"uint256","nodeType":"ElementaryTypeName","src":"1317:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1255:78:23"},"src":"1232:102:23"},{"anonymous":false,"documentation":{"id":2458,"nodeType":"StructuredDocumentation","src":"1339:419:23","text":"@notice Emitted when liquidity is decreased for a position NFT\n @param tokenId The ID of the token for which liquidity was decreased\n @param liquidity The amount by which liquidity for the NFT position was decreased\n @param amount0 The amount of token0 that was accounted for the decrease in liquidity\n @param amount1 The amount of token1 that was accounted for the decrease in liquidity"},"id":2468,"name":"DecreaseLiquidity","nodeType":"EventDefinition","parameters":{"id":2467,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2460,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2468,"src":"1787:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2459,"name":"uint256","nodeType":"ElementaryTypeName","src":"1787:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2462,"indexed":false,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2468,"src":"1812:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2461,"name":"uint128","nodeType":"ElementaryTypeName","src":"1812:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2464,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2468,"src":"1831:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2463,"name":"uint256","nodeType":"ElementaryTypeName","src":"1831:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2466,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2468,"src":"1848:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2465,"name":"uint256","nodeType":"ElementaryTypeName","src":"1848:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1786:78:23"},"src":"1763:102:23"},{"anonymous":false,"documentation":{"id":2469,"nodeType":"StructuredDocumentation","src":"1870:522:23","text":"@notice Emitted when tokens are collected for a position NFT\n @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\n @param tokenId The ID of the token for which underlying tokens were collected\n @param recipient The address of the account that received the collected tokens\n @param amount0 The amount of token0 owed to the position that was collected\n @param amount1 The amount of token1 owed to the position that was collected"},"id":2479,"name":"Collect","nodeType":"EventDefinition","parameters":{"id":2478,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2471,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2479,"src":"2411:23:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2470,"name":"uint256","nodeType":"ElementaryTypeName","src":"2411:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2473,"indexed":false,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2479,"src":"2436:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2472,"name":"address","nodeType":"ElementaryTypeName","src":"2436:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2475,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2479,"src":"2455:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2474,"name":"uint256","nodeType":"ElementaryTypeName","src":"2455:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2477,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2479,"src":"2472:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2476,"name":"uint256","nodeType":"ElementaryTypeName","src":"2472:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2410:78:23"},"src":"2397:92:23"},{"documentation":{"id":2480,"nodeType":"StructuredDocumentation","src":"2495:1157:23","text":"@notice Returns the position information associated with a given token ID.\n @dev Throws if the token ID is not valid.\n @param tokenId The ID of the token that represents the position\n @return nonce The nonce for permits\n @return operator The address that is approved for spending\n @return token0 The address of the token0 for a specific pool\n @return token1 The address of the token1 for a specific pool\n @return fee The fee associated with the pool\n @return tickLower The lower end of the tick range for the position\n @return tickUpper The higher end of the tick range for the position\n @return liquidity The liquidity of the position\n @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\n @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\n @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\n @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation"},"functionSelector":"99fbab88","id":2509,"implemented":false,"kind":"function","modifiers":[],"name":"positions","nodeType":"FunctionDefinition","parameters":{"id":2483,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2482,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2509,"src":"3676:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2481,"name":"uint256","nodeType":"ElementaryTypeName","src":"3676:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3675:17:23"},"returnParameters":{"id":2508,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2485,"mutability":"mutable","name":"nonce","nodeType":"VariableDeclaration","scope":2509,"src":"3753:12:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":2484,"name":"uint96","nodeType":"ElementaryTypeName","src":"3753:6:23","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"},{"constant":false,"id":2487,"mutability":"mutable","name":"operator","nodeType":"VariableDeclaration","scope":2509,"src":"3779:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2486,"name":"address","nodeType":"ElementaryTypeName","src":"3779:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2489,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":2509,"src":"3809:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2488,"name":"address","nodeType":"ElementaryTypeName","src":"3809:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2491,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":2509,"src":"3837:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2490,"name":"address","nodeType":"ElementaryTypeName","src":"3837:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2493,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2509,"src":"3865:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2492,"name":"uint24","nodeType":"ElementaryTypeName","src":"3865:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2495,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":2509,"src":"3889:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2494,"name":"int24","nodeType":"ElementaryTypeName","src":"3889:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2497,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":2509,"src":"3918:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2496,"name":"int24","nodeType":"ElementaryTypeName","src":"3918:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2499,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2509,"src":"3947:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2498,"name":"uint128","nodeType":"ElementaryTypeName","src":"3947:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2501,"mutability":"mutable","name":"feeGrowthInside0LastX128","nodeType":"VariableDeclaration","scope":2509,"src":"3978:32:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2500,"name":"uint256","nodeType":"ElementaryTypeName","src":"3978:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2503,"mutability":"mutable","name":"feeGrowthInside1LastX128","nodeType":"VariableDeclaration","scope":2509,"src":"4024:32:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2502,"name":"uint256","nodeType":"ElementaryTypeName","src":"4024:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2505,"mutability":"mutable","name":"tokensOwed0","nodeType":"VariableDeclaration","scope":2509,"src":"4070:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2504,"name":"uint128","nodeType":"ElementaryTypeName","src":"4070:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2507,"mutability":"mutable","name":"tokensOwed1","nodeType":"VariableDeclaration","scope":2509,"src":"4103:19:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2506,"name":"uint128","nodeType":"ElementaryTypeName","src":"4103:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3739:393:23"},"scope":2618,"src":"3657:476:23","stateMutability":"view","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.MintParams","id":2532,"members":[{"constant":false,"id":2511,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":2532,"src":"4167:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2510,"name":"address","nodeType":"ElementaryTypeName","src":"4167:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2513,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":2532,"src":"4191:14:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2512,"name":"address","nodeType":"ElementaryTypeName","src":"4191:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2515,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2532,"src":"4215:10:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2514,"name":"uint24","nodeType":"ElementaryTypeName","src":"4215:6:23","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2517,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":2532,"src":"4235:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2516,"name":"int24","nodeType":"ElementaryTypeName","src":"4235:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2519,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":2532,"src":"4260:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2518,"name":"int24","nodeType":"ElementaryTypeName","src":"4260:5:23","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2521,"mutability":"mutable","name":"amount0Desired","nodeType":"VariableDeclaration","scope":2532,"src":"4285:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2520,"name":"uint256","nodeType":"ElementaryTypeName","src":"4285:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2523,"mutability":"mutable","name":"amount1Desired","nodeType":"VariableDeclaration","scope":2532,"src":"4317:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2522,"name":"uint256","nodeType":"ElementaryTypeName","src":"4317:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2525,"mutability":"mutable","name":"amount0Min","nodeType":"VariableDeclaration","scope":2532,"src":"4349:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2524,"name":"uint256","nodeType":"ElementaryTypeName","src":"4349:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2527,"mutability":"mutable","name":"amount1Min","nodeType":"VariableDeclaration","scope":2532,"src":"4377:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2526,"name":"uint256","nodeType":"ElementaryTypeName","src":"4377:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2529,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2532,"src":"4405:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2528,"name":"address","nodeType":"ElementaryTypeName","src":"4405:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2531,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2532,"src":"4432:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2530,"name":"uint256","nodeType":"ElementaryTypeName","src":"4432:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"MintParams","nodeType":"StructDefinition","scope":2618,"src":"4139:316:23","visibility":"public"},{"documentation":{"id":2533,"nodeType":"StructuredDocumentation","src":"4461:586:23","text":"@notice Creates a new position wrapped in a NFT\n @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\n a method does not exist, i.e. the pool is assumed to be initialized.\n @param params The params necessary to mint a position, encoded as `MintParams` in calldata\n @return tokenId The ID of the token that represents the minted position\n @return liquidity The amount of liquidity for this position\n @return amount0 The amount of token0\n @return amount1 The amount of token1"},"functionSelector":"88316456","id":2546,"implemented":false,"kind":"function","modifiers":[],"name":"mint","nodeType":"FunctionDefinition","parameters":{"id":2536,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2535,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2546,"src":"5066:26:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2532_calldata_ptr","typeString":"struct INonfungiblePositionManager.MintParams"},"typeName":{"id":2534,"name":"MintParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2532,"src":"5066:10:23","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2532_storage_ptr","typeString":"struct INonfungiblePositionManager.MintParams"}},"visibility":"internal"}],"src":"5065:28:23"},"returnParameters":{"id":2545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2538,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2546,"src":"5157:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2537,"name":"uint256","nodeType":"ElementaryTypeName","src":"5157:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2540,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2546,"src":"5186:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2539,"name":"uint128","nodeType":"ElementaryTypeName","src":"5186:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2542,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2546,"src":"5217:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2541,"name":"uint256","nodeType":"ElementaryTypeName","src":"5217:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2544,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2546,"src":"5246:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2543,"name":"uint256","nodeType":"ElementaryTypeName","src":"5246:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5143:128:23"},"scope":2618,"src":"5052:220:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.IncreaseLiquidityParams","id":2559,"members":[{"constant":false,"id":2548,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2559,"src":"5319:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2547,"name":"uint256","nodeType":"ElementaryTypeName","src":"5319:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2550,"mutability":"mutable","name":"amount0Desired","nodeType":"VariableDeclaration","scope":2559,"src":"5344:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2549,"name":"uint256","nodeType":"ElementaryTypeName","src":"5344:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2552,"mutability":"mutable","name":"amount1Desired","nodeType":"VariableDeclaration","scope":2559,"src":"5376:22:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2551,"name":"uint256","nodeType":"ElementaryTypeName","src":"5376:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2554,"mutability":"mutable","name":"amount0Min","nodeType":"VariableDeclaration","scope":2559,"src":"5408:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2553,"name":"uint256","nodeType":"ElementaryTypeName","src":"5408:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2556,"mutability":"mutable","name":"amount1Min","nodeType":"VariableDeclaration","scope":2559,"src":"5436:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2555,"name":"uint256","nodeType":"ElementaryTypeName","src":"5436:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2558,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2559,"src":"5464:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2557,"name":"uint256","nodeType":"ElementaryTypeName","src":"5464:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"IncreaseLiquidityParams","nodeType":"StructDefinition","scope":2618,"src":"5278:209:23","visibility":"public"},{"documentation":{"id":2560,"nodeType":"StructuredDocumentation","src":"5493:821:23","text":"@notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\n @param params tokenId The ID of the token for which liquidity is being increased,\n amount0Desired The desired amount of token0 to be spent,\n amount1Desired The desired amount of token1 to be spent,\n amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\n amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\n deadline The time by which the transaction must be included to effect the change\n @return liquidity The new liquidity amount as a result of the increase\n @return amount0 The amount of token0 to acheive resulting liquidity\n @return amount1 The amount of token1 to acheive resulting liquidity"},"functionSelector":"219f5d17","id":2571,"implemented":false,"kind":"function","modifiers":[],"name":"increaseLiquidity","nodeType":"FunctionDefinition","parameters":{"id":2563,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2562,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2571,"src":"6346:39:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_IncreaseLiquidityParams_$2559_calldata_ptr","typeString":"struct INonfungiblePositionManager.IncreaseLiquidityParams"},"typeName":{"id":2561,"name":"IncreaseLiquidityParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2559,"src":"6346:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_IncreaseLiquidityParams_$2559_storage_ptr","typeString":"struct INonfungiblePositionManager.IncreaseLiquidityParams"}},"visibility":"internal"}],"src":"6345:41:23"},"returnParameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2565,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2571,"src":"6450:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2564,"name":"uint128","nodeType":"ElementaryTypeName","src":"6450:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2567,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2571,"src":"6481:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2566,"name":"uint256","nodeType":"ElementaryTypeName","src":"6481:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2571,"src":"6510:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"6510:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6436:99:23"},"scope":2618,"src":"6319:217:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.DecreaseLiquidityParams","id":2582,"members":[{"constant":false,"id":2573,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2582,"src":"6583:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2572,"name":"uint256","nodeType":"ElementaryTypeName","src":"6583:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2575,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2582,"src":"6608:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2574,"name":"uint128","nodeType":"ElementaryTypeName","src":"6608:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2577,"mutability":"mutable","name":"amount0Min","nodeType":"VariableDeclaration","scope":2582,"src":"6635:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2576,"name":"uint256","nodeType":"ElementaryTypeName","src":"6635:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2579,"mutability":"mutable","name":"amount1Min","nodeType":"VariableDeclaration","scope":2582,"src":"6663:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2578,"name":"uint256","nodeType":"ElementaryTypeName","src":"6663:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2581,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2582,"src":"6691:16:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2580,"name":"uint256","nodeType":"ElementaryTypeName","src":"6691:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"DecreaseLiquidityParams","nodeType":"StructDefinition","scope":2618,"src":"6542:172:23","visibility":"public"},{"documentation":{"id":2583,"nodeType":"StructuredDocumentation","src":"6720:702:23","text":"@notice Decreases the amount of liquidity in a position and accounts it to the position\n @param params tokenId The ID of the token for which liquidity is being decreased,\n amount The amount by which liquidity will be decreased,\n amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\n amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\n deadline The time by which the transaction must be included to effect the change\n @return amount0 The amount of token0 accounted to the position's tokens owed\n @return amount1 The amount of token1 accounted to the position's tokens owed"},"functionSelector":"0c49ccbe","id":2592,"implemented":false,"kind":"function","modifiers":[],"name":"decreaseLiquidity","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2592,"src":"7454:39:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_DecreaseLiquidityParams_$2582_calldata_ptr","typeString":"struct INonfungiblePositionManager.DecreaseLiquidityParams"},"typeName":{"id":2584,"name":"DecreaseLiquidityParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2582,"src":"7454:23:23","typeDescriptions":{"typeIdentifier":"t_struct$_DecreaseLiquidityParams_$2582_storage_ptr","typeString":"struct INonfungiblePositionManager.DecreaseLiquidityParams"}},"visibility":"internal"}],"src":"7453:41:23"},"returnParameters":{"id":2591,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2588,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2592,"src":"7545:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2587,"name":"uint256","nodeType":"ElementaryTypeName","src":"7545:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2590,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2592,"src":"7562:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2589,"name":"uint256","nodeType":"ElementaryTypeName","src":"7562:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7544:34:23"},"scope":2618,"src":"7427:152:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"INonfungiblePositionManager.CollectParams","id":2601,"members":[{"constant":false,"id":2594,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2601,"src":"7616:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2593,"name":"uint256","nodeType":"ElementaryTypeName","src":"7616:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2596,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2601,"src":"7641:17:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2595,"name":"address","nodeType":"ElementaryTypeName","src":"7641:7:23","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2598,"mutability":"mutable","name":"amount0Max","nodeType":"VariableDeclaration","scope":2601,"src":"7668:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2597,"name":"uint128","nodeType":"ElementaryTypeName","src":"7668:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2600,"mutability":"mutable","name":"amount1Max","nodeType":"VariableDeclaration","scope":2601,"src":"7696:18:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2599,"name":"uint128","nodeType":"ElementaryTypeName","src":"7696:7:23","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"name":"CollectParams","nodeType":"StructDefinition","scope":2618,"src":"7585:136:23","visibility":"public"},{"documentation":{"id":2602,"nodeType":"StructuredDocumentation","src":"7727:489:23","text":"@notice Collects up to a maximum amount of fees owed to a specific position to the recipient\n @param params tokenId The ID of the NFT for which tokens are being collected,\n recipient The account that should receive the tokens,\n amount0Max The maximum amount of token0 to collect,\n amount1Max The maximum amount of token1 to collect\n @return amount0 The amount of fees collected in token0\n @return amount1 The amount of fees collected in token1"},"functionSelector":"fc6f7865","id":2611,"implemented":false,"kind":"function","modifiers":[],"name":"collect","nodeType":"FunctionDefinition","parameters":{"id":2605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2604,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2611,"src":"8238:29:23","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_CollectParams_$2601_calldata_ptr","typeString":"struct INonfungiblePositionManager.CollectParams"},"typeName":{"id":2603,"name":"CollectParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2601,"src":"8238:13:23","typeDescriptions":{"typeIdentifier":"t_struct$_CollectParams_$2601_storage_ptr","typeString":"struct INonfungiblePositionManager.CollectParams"}},"visibility":"internal"}],"src":"8237:31:23"},"returnParameters":{"id":2610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2607,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2611,"src":"8295:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2606,"name":"uint256","nodeType":"ElementaryTypeName","src":"8295:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2609,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2611,"src":"8312:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2608,"name":"uint256","nodeType":"ElementaryTypeName","src":"8312:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8294:34:23"},"scope":2618,"src":"8221:108:23","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2612,"nodeType":"StructuredDocumentation","src":"8335:213:23","text":"@notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\n must be collected first.\n @param tokenId The ID of the token that is being burned"},"functionSelector":"42966c68","id":2617,"implemented":false,"kind":"function","modifiers":[],"name":"burn","nodeType":"FunctionDefinition","parameters":{"id":2615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2614,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2617,"src":"8567:15:23","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2613,"name":"uint256","nodeType":"ElementaryTypeName","src":"8567:7:23","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8566:17:23"},"returnParameters":{"id":2616,"nodeType":"ParameterList","parameters":[],"src":"8600:0:23"},"scope":2618,"src":"8553:48:23","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2619,"src":"584:8019:23"}],"src":"45:8559:23"},"id":23},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol","exportedSymbols":{"IPeripheryImmutableState":[2634]},"id":2635,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2620,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:24"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2621,"nodeType":"StructuredDocumentation","src":"71:91:24","text":"@title Immutable state\n @notice Functions that return immutable state of the router"},"fullyImplemented":false,"id":2634,"linearizedBaseContracts":[2634],"name":"IPeripheryImmutableState","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2622,"nodeType":"StructuredDocumentation","src":"203:57:24","text":"@return Returns the address of the Uniswap V3 factory"},"functionSelector":"c45a0155","id":2627,"implemented":false,"kind":"function","modifiers":[],"name":"factory","nodeType":"FunctionDefinition","parameters":{"id":2623,"nodeType":"ParameterList","parameters":[],"src":"281:2:24"},"returnParameters":{"id":2626,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2625,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2627,"src":"307:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2624,"name":"address","nodeType":"ElementaryTypeName","src":"307:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"306:9:24"},"scope":2634,"src":"265:51:24","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":2628,"nodeType":"StructuredDocumentation","src":"322:40:24","text":"@return Returns the address of WETH9"},"functionSelector":"4aa4a4fc","id":2633,"implemented":false,"kind":"function","modifiers":[],"name":"WETH9","nodeType":"FunctionDefinition","parameters":{"id":2629,"nodeType":"ParameterList","parameters":[],"src":"381:2:24"},"returnParameters":{"id":2632,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2631,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2633,"src":"407:7:24","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2630,"name":"address","nodeType":"ElementaryTypeName","src":"407:7:24","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"406:9:24"},"scope":2634,"src":"367:49:24","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2635,"src":"162:256:24"}],"src":"45:374:24"},"id":24},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol","exportedSymbols":{"IPeripheryPayments":[2660]},"id":2661,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2636,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:25"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2637,"nodeType":"StructuredDocumentation","src":"71:92:25","text":"@title Periphery Payments\n @notice Functions to ease deposits and withdrawals of ETH"},"fullyImplemented":false,"id":2660,"linearizedBaseContracts":[2660],"name":"IPeripheryPayments","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2638,"nodeType":"StructuredDocumentation","src":"198:302:25","text":"@notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\n @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\n @param amountMinimum The minimum amount of WETH9 to unwrap\n @param recipient The address receiving ETH"},"functionSelector":"49404b7c","id":2645,"implemented":false,"kind":"function","modifiers":[],"name":"unwrapWETH9","nodeType":"FunctionDefinition","parameters":{"id":2643,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2640,"mutability":"mutable","name":"amountMinimum","nodeType":"VariableDeclaration","scope":2645,"src":"526:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2639,"name":"uint256","nodeType":"ElementaryTypeName","src":"526:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2642,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2645,"src":"549:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2641,"name":"address","nodeType":"ElementaryTypeName","src":"549:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"525:42:25"},"returnParameters":{"id":2644,"nodeType":"ParameterList","parameters":[],"src":"584:0:25"},"scope":2660,"src":"505:80:25","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2646,"nodeType":"StructuredDocumentation","src":"591:225:25","text":"@notice Refunds any ETH balance held by this contract to the `msg.sender`\n @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\n that use ether for the input amount"},"functionSelector":"12210e8a","id":2649,"implemented":false,"kind":"function","modifiers":[],"name":"refundETH","nodeType":"FunctionDefinition","parameters":{"id":2647,"nodeType":"ParameterList","parameters":[],"src":"839:2:25"},"returnParameters":{"id":2648,"nodeType":"ParameterList","parameters":[],"src":"858:0:25"},"scope":2660,"src":"821:38:25","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2650,"nodeType":"StructuredDocumentation","src":"865:427:25","text":"@notice Transfers the full amount of a token held by this contract to recipient\n @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\n @param token The contract address of the token which will be transferred to `recipient`\n @param amountMinimum The minimum amount of token required for a transfer\n @param recipient The destination address of the token"},"functionSelector":"df2ab5bb","id":2659,"implemented":false,"kind":"function","modifiers":[],"name":"sweepToken","nodeType":"FunctionDefinition","parameters":{"id":2657,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2652,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":2659,"src":"1326:13:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2651,"name":"address","nodeType":"ElementaryTypeName","src":"1326:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2654,"mutability":"mutable","name":"amountMinimum","nodeType":"VariableDeclaration","scope":2659,"src":"1349:21:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2653,"name":"uint256","nodeType":"ElementaryTypeName","src":"1349:7:25","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2656,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2659,"src":"1380:17:25","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2655,"name":"address","nodeType":"ElementaryTypeName","src":"1380:7:25","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1316:87:25"},"returnParameters":{"id":2658,"nodeType":"ParameterList","parameters":[],"src":"1420:0:25"},"scope":2660,"src":"1297:124:25","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2661,"src":"163:1260:25"}],"src":"45:1379:25"},"id":25},"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol","exportedSymbols":{"IPoolInitializer":[2679]},"id":2680,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2662,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:26"},{"id":2663,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:26"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","documentation":{"id":2664,"nodeType":"StructuredDocumentation","src":"91:194:26","text":"@title Creates and initializes V3 Pools\n @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\n require the pool to exist."},"fullyImplemented":false,"id":2679,"linearizedBaseContracts":[2679],"name":"IPoolInitializer","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2665,"nodeType":"StructuredDocumentation","src":"318:648:26","text":"@notice Creates a new pool if it does not exist, then initializes if not initialized\n @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\n @param token0 The contract address of token0 of the pool\n @param token1 The contract address of token1 of the pool\n @param fee The fee amount of the v3 pool for the specified token pair\n @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\n @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"},"functionSelector":"13ead562","id":2678,"implemented":false,"kind":"function","modifiers":[],"name":"createAndInitializePoolIfNecessary","nodeType":"FunctionDefinition","parameters":{"id":2674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2667,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":2678,"src":"1024:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2666,"name":"address","nodeType":"ElementaryTypeName","src":"1024:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2669,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":2678,"src":"1048:14:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2668,"name":"address","nodeType":"ElementaryTypeName","src":"1048:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2671,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2678,"src":"1072:10:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2670,"name":"uint24","nodeType":"ElementaryTypeName","src":"1072:6:26","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2673,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":2678,"src":"1092:20:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2672,"name":"uint160","nodeType":"ElementaryTypeName","src":"1092:7:26","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"1014:104:26"},"returnParameters":{"id":2677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2676,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2678,"src":"1145:12:26","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2675,"name":"address","nodeType":"ElementaryTypeName","src":"1145:7:26","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1144:14:26"},"scope":2679,"src":"971:188:26","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2680,"src":"285:876:26"}],"src":"45:1117:26"},"id":26},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","exportedSymbols":{"ISwapRouter":[2775],"IUniswapV3SwapCallback":[1433]},"id":2776,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2681,"literals":["solidity",">=","0.7",".5"],"nodeType":"PragmaDirective","src":"45:24:27"},{"id":2682,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"70:19:27"},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol","id":2683,"nodeType":"ImportDirective","scope":2776,"sourceUnit":1434,"src":"91:83:27","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2685,"name":"IUniswapV3SwapCallback","nodeType":"UserDefinedTypeName","referencedDeclaration":1433,"src":"305:22:27","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3SwapCallback_$1433","typeString":"contract IUniswapV3SwapCallback"}},"id":2686,"nodeType":"InheritanceSpecifier","src":"305:22:27"}],"contractDependencies":[1433],"contractKind":"interface","documentation":{"id":2684,"nodeType":"StructuredDocumentation","src":"176:104:27","text":"@title Router token swapping functionality\n @notice Functions for swapping tokens via Uniswap V3"},"fullyImplemented":false,"id":2775,"linearizedBaseContracts":[2775,1433],"name":"ISwapRouter","nodeType":"ContractDefinition","nodes":[{"canonicalName":"ISwapRouter.ExactInputSingleParams","id":2703,"members":[{"constant":false,"id":2688,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":2703,"src":"374:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2687,"name":"address","nodeType":"ElementaryTypeName","src":"374:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2690,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":2703,"src":"399:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2689,"name":"address","nodeType":"ElementaryTypeName","src":"399:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2692,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2703,"src":"425:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2691,"name":"uint24","nodeType":"ElementaryTypeName","src":"425:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2694,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2703,"src":"445:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2693,"name":"address","nodeType":"ElementaryTypeName","src":"445:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2696,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2703,"src":"472:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2695,"name":"uint256","nodeType":"ElementaryTypeName","src":"472:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2698,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":2703,"src":"498:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2697,"name":"uint256","nodeType":"ElementaryTypeName","src":"498:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2700,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":2703,"src":"524:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2699,"name":"uint256","nodeType":"ElementaryTypeName","src":"524:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2702,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":2703,"src":"558:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2701,"name":"uint160","nodeType":"ElementaryTypeName","src":"558:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactInputSingleParams","nodeType":"StructDefinition","scope":2775,"src":"334:256:27","visibility":"public"},{"documentation":{"id":2704,"nodeType":"StructuredDocumentation","src":"596:250:27","text":"@notice Swaps `amountIn` of one token for as much as possible of another token\n @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"414bf389","id":2711,"implemented":false,"kind":"function","modifiers":[],"name":"exactInputSingle","nodeType":"FunctionDefinition","parameters":{"id":2707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2706,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2711,"src":"877:38:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2703_calldata_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":2705,"name":"ExactInputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2703,"src":"877:22:27","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2703_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"src":"876:40:27"},"returnParameters":{"id":2710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2709,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":2711,"src":"943:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2708,"name":"uint256","nodeType":"ElementaryTypeName","src":"943:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"942:19:27"},"scope":2775,"src":"851:111:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactInputParams","id":2722,"members":[{"constant":false,"id":2713,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":2722,"src":"1002:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2712,"name":"bytes","nodeType":"ElementaryTypeName","src":"1002:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2715,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2722,"src":"1022:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2714,"name":"address","nodeType":"ElementaryTypeName","src":"1022:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2722,"src":"1049:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"1049:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2719,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":2722,"src":"1075:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2718,"name":"uint256","nodeType":"ElementaryTypeName","src":"1075:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2721,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":2722,"src":"1101:24:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2720,"name":"uint256","nodeType":"ElementaryTypeName","src":"1101:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactInputParams","nodeType":"StructDefinition","scope":2775,"src":"968:164:27","visibility":"public"},{"documentation":{"id":2723,"nodeType":"StructuredDocumentation","src":"1138:273:27","text":"@notice Swaps `amountIn` of one token for as much as possible of another along the specified path\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\n @return amountOut The amount of the received token"},"functionSelector":"c04b8d59","id":2730,"implemented":false,"kind":"function","modifiers":[],"name":"exactInput","nodeType":"FunctionDefinition","parameters":{"id":2726,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2725,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2730,"src":"1436:32:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2722_calldata_ptr","typeString":"struct ISwapRouter.ExactInputParams"},"typeName":{"id":2724,"name":"ExactInputParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2722,"src":"1436:16:27","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputParams_$2722_storage_ptr","typeString":"struct ISwapRouter.ExactInputParams"}},"visibility":"internal"}],"src":"1435:34:27"},"returnParameters":{"id":2729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2728,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":2730,"src":"1496:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2727,"name":"uint256","nodeType":"ElementaryTypeName","src":"1496:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1495:19:27"},"scope":2775,"src":"1416:99:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputSingleParams","id":2747,"members":[{"constant":false,"id":2732,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":2747,"src":"1562:15:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2731,"name":"address","nodeType":"ElementaryTypeName","src":"1562:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2734,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":2747,"src":"1587:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2733,"name":"address","nodeType":"ElementaryTypeName","src":"1587:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2736,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2747,"src":"1613:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2735,"name":"uint24","nodeType":"ElementaryTypeName","src":"1613:6:27","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2738,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2747,"src":"1633:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2737,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2740,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2747,"src":"1660:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2739,"name":"uint256","nodeType":"ElementaryTypeName","src":"1660:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2742,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":2747,"src":"1686:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2741,"name":"uint256","nodeType":"ElementaryTypeName","src":"1686:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2744,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":2747,"src":"1713:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2743,"name":"uint256","nodeType":"ElementaryTypeName","src":"1713:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2746,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":2747,"src":"1746:25:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2745,"name":"uint160","nodeType":"ElementaryTypeName","src":"1746:7:27","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"ExactOutputSingleParams","nodeType":"StructDefinition","scope":2775,"src":"1521:257:27","visibility":"public"},{"documentation":{"id":2748,"nodeType":"StructuredDocumentation","src":"1784:250:27","text":"@notice Swaps as little as possible of one token for `amountOut` of another token\n @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"db3e2198","id":2755,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutputSingle","nodeType":"FunctionDefinition","parameters":{"id":2751,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2750,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2755,"src":"2066:39:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2747_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"},"typeName":{"id":2749,"name":"ExactOutputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2747,"src":"2066:23:27","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputSingleParams_$2747_storage_ptr","typeString":"struct ISwapRouter.ExactOutputSingleParams"}},"visibility":"internal"}],"src":"2065:41:27"},"returnParameters":{"id":2754,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2753,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":2755,"src":"2133:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2752,"name":"uint256","nodeType":"ElementaryTypeName","src":"2133:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2132:18:27"},"scope":2775,"src":"2039:112:27","stateMutability":"payable","virtual":false,"visibility":"external"},{"canonicalName":"ISwapRouter.ExactOutputParams","id":2766,"members":[{"constant":false,"id":2757,"mutability":"mutable","name":"path","nodeType":"VariableDeclaration","scope":2766,"src":"2192:10:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"},"typeName":{"id":2756,"name":"bytes","nodeType":"ElementaryTypeName","src":"2192:5:27","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"},{"constant":false,"id":2759,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":2766,"src":"2212:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2758,"name":"address","nodeType":"ElementaryTypeName","src":"2212:7:27","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2761,"mutability":"mutable","name":"deadline","nodeType":"VariableDeclaration","scope":2766,"src":"2239:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2760,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2763,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":2766,"src":"2265:17:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2762,"name":"uint256","nodeType":"ElementaryTypeName","src":"2265:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2765,"mutability":"mutable","name":"amountInMaximum","nodeType":"VariableDeclaration","scope":2766,"src":"2292:23:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2764,"name":"uint256","nodeType":"ElementaryTypeName","src":"2292:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"ExactOutputParams","nodeType":"StructDefinition","scope":2775,"src":"2157:165:27","visibility":"public"},{"documentation":{"id":2767,"nodeType":"StructuredDocumentation","src":"2328:284:27","text":"@notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\n @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\n @return amountIn The amount of the input token"},"functionSelector":"f28c0498","id":2774,"implemented":false,"kind":"function","modifiers":[],"name":"exactOutput","nodeType":"FunctionDefinition","parameters":{"id":2770,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2769,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":2774,"src":"2638:33:27","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2766_calldata_ptr","typeString":"struct ISwapRouter.ExactOutputParams"},"typeName":{"id":2768,"name":"ExactOutputParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2766,"src":"2638:17:27","typeDescriptions":{"typeIdentifier":"t_struct$_ExactOutputParams_$2766_storage_ptr","typeString":"struct ISwapRouter.ExactOutputParams"}},"visibility":"internal"}],"src":"2637:35:27"},"returnParameters":{"id":2773,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2772,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":2774,"src":"2699:16:27","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2771,"name":"uint256","nodeType":"ElementaryTypeName","src":"2699:7:27","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2698:18:27"},"scope":2775,"src":"2617:100:27","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":2776,"src":"280:2439:27"}],"src":"45:2675:27"},"id":27},"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol","exportedSymbols":{"IERC20":[554],"IWETH9":[2792]},"id":2793,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2777,"literals":["solidity","=","0.7",".6"],"nodeType":"PragmaDirective","src":"45:23:28"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2778,"nodeType":"ImportDirective","scope":2793,"sourceUnit":555,"src":"70:56:28","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2780,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"179:6:28","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":2781,"nodeType":"InheritanceSpecifier","src":"179:6:28"}],"contractDependencies":[554],"contractKind":"interface","documentation":{"id":2779,"nodeType":"StructuredDocumentation","src":"128:31:28","text":"@title Interface for WETH9"},"fullyImplemented":false,"id":2792,"linearizedBaseContracts":[2792,554],"name":"IWETH9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":2782,"nodeType":"StructuredDocumentation","src":"192:46:28","text":"@notice Deposit ether to get wrapped ether"},"functionSelector":"d0e30db0","id":2785,"implemented":false,"kind":"function","modifiers":[],"name":"deposit","nodeType":"FunctionDefinition","parameters":{"id":2783,"nodeType":"ParameterList","parameters":[],"src":"259:2:28"},"returnParameters":{"id":2784,"nodeType":"ParameterList","parameters":[],"src":"278:0:28"},"scope":2792,"src":"243:36:28","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":2786,"nodeType":"StructuredDocumentation","src":"285:47:28","text":"@notice Withdraw wrapped ether to get ether"},"functionSelector":"2e1a7d4d","id":2791,"implemented":false,"kind":"function","modifiers":[],"name":"withdraw","nodeType":"FunctionDefinition","parameters":{"id":2789,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2788,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2791,"src":"355:7:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2787,"name":"uint256","nodeType":"ElementaryTypeName","src":"355:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"354:9:28"},"returnParameters":{"id":2790,"nodeType":"ParameterList","parameters":[],"src":"372:0:28"},"scope":2792,"src":"337:36:28","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2793,"src":"159:216:28"}],"src":"45:331:28"},"id":28},"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol":{"ast":{"absolutePath":"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol","exportedSymbols":{"PoolAddress":[2884]},"id":2885,"license":"GPL-2.0-or-later","nodeType":"SourceUnit","nodes":[{"id":2794,"literals":["solidity",">=","0.5",".0"],"nodeType":"PragmaDirective","src":"45:24:29"},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":2795,"nodeType":"StructuredDocumentation","src":"71:96:29","text":"@title Provides functions for deriving a pool address from the factory, tokens, and the fee"},"fullyImplemented":true,"id":2884,"linearizedBaseContracts":[2884],"name":"PoolAddress","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":2798,"mutability":"constant","name":"POOL_INIT_CODE_HASH","nodeType":"VariableDeclaration","scope":2884,"src":"193:114:29","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2796,"name":"bytes32","nodeType":"ElementaryTypeName","src":"193:7:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"307865333466313939623139623262346634376636383434323631396435353535323764323434663738613332393765613839333235663834336638376238623534","id":2797,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"241:66:29","typeDescriptions":{"typeIdentifier":"t_rational_102814774271675688723325049954498779091328469440286648861889194717372678376276_by_1","typeString":"int_const 1028...(70 digits omitted)...6276"},"value":"0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54"},"visibility":"internal"},{"canonicalName":"PoolAddress.PoolKey","id":2805,"members":[{"constant":false,"id":2800,"mutability":"mutable","name":"token0","nodeType":"VariableDeclaration","scope":2805,"src":"387:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2799,"name":"address","nodeType":"ElementaryTypeName","src":"387:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2802,"mutability":"mutable","name":"token1","nodeType":"VariableDeclaration","scope":2805,"src":"411:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2801,"name":"address","nodeType":"ElementaryTypeName","src":"411:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2804,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2805,"src":"435:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2803,"name":"uint24","nodeType":"ElementaryTypeName","src":"435:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"name":"PoolKey","nodeType":"StructDefinition","scope":2884,"src":"362:90:29","visibility":"public"},{"body":{"id":2835,"nodeType":"Block","src":"917:141:29","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2817,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"931:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":2818,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"940:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"931:15:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2828,"nodeType":"IfStatement","src":"927:56:29","trueBody":{"expression":{"id":2826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":2820,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"949:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2821,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"957:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2822,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"948:16:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":2823,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"968:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2824,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"976:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2825,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"967:16:29","typeDescriptions":{"typeIdentifier":"t_tuple$_t_address_$_t_address_$","typeString":"tuple(address,address)"}},"src":"948:35:29","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2827,"nodeType":"ExpressionStatement","src":"948:35:29"}},{"expression":{"arguments":[{"id":2830,"name":"tokenA","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2808,"src":"1017:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2831,"name":"tokenB","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2810,"src":"1033:6:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2832,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2812,"src":"1046:3:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":2829,"name":"PoolKey","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2805,"src":"1000:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_PoolKey_$2805_storage_ptr_$","typeString":"type(struct PoolAddress.PoolKey storage pointer)"}},"id":2833,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["token0","token1","fee"],"nodeType":"FunctionCall","src":"1000:51:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"functionReturnParameters":2816,"id":2834,"nodeType":"Return","src":"993:58:29"}]},"documentation":{"id":2806,"nodeType":"StructuredDocumentation","src":"458:321:29","text":"@notice Returns PoolKey: the ordered tokens with the matched fee levels\n @param tokenA The first token of a pool, unsorted\n @param tokenB The second token of a pool, unsorted\n @param fee The fee level of the pool\n @return Poolkey The pool details with ordered token0 and token1 assignments"},"id":2836,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolKey","nodeType":"FunctionDefinition","parameters":{"id":2813,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2808,"mutability":"mutable","name":"tokenA","nodeType":"VariableDeclaration","scope":2836,"src":"813:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2807,"name":"address","nodeType":"ElementaryTypeName","src":"813:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2810,"mutability":"mutable","name":"tokenB","nodeType":"VariableDeclaration","scope":2836,"src":"837:14:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2809,"name":"address","nodeType":"ElementaryTypeName","src":"837:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2812,"mutability":"mutable","name":"fee","nodeType":"VariableDeclaration","scope":2836,"src":"861:10:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2811,"name":"uint24","nodeType":"ElementaryTypeName","src":"861:6:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"803:74:29"},"returnParameters":{"id":2816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2815,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2836,"src":"901:14:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey"},"typeName":{"id":2814,"name":"PoolKey","nodeType":"UserDefinedTypeName","referencedDeclaration":2805,"src":"901:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_storage_ptr","typeString":"struct PoolAddress.PoolKey"}},"visibility":"internal"}],"src":"900:16:29"},"scope":2884,"src":"784:274:29","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2882,"nodeType":"Block","src":"1403:414:29","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2851,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2847,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1421:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2848,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":2800,"src":"1421:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":2849,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1434:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2850,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":2802,"src":"1434:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1421:23:29","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2846,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1413:7:29","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":2852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1413:32:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2853,"nodeType":"ExpressionStatement","src":"1413:32:29"},{"expression":{"id":2880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2854,"name":"pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2844,"src":"1455:4:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"hexValue":"ff","id":2862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"hexString","lValueRequested":false,"nodeType":"Literal","src":"1581:7:29","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""}},{"id":2863,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"1614:7:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"arguments":[{"expression":{"id":2867,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1668:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2868,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token0","nodeType":"MemberAccess","referencedDeclaration":2800,"src":"1668:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2869,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1680:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2870,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"token1","nodeType":"MemberAccess","referencedDeclaration":2802,"src":"1680:10:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2871,"name":"key","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2841,"src":"1692:3:29","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey memory"}},"id":2872,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fee","nodeType":"MemberAccess","referencedDeclaration":2804,"src":"1692:7:29","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":2865,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1657:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2866,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encode","nodeType":"MemberAccess","src":"1657:10:29","typeDescriptions":{"typeIdentifier":"t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1657:43:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2864,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1647:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2874,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1647:54:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":2875,"name":"POOL_INIT_CODE_HASH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2798,"src":"1727:19:29","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_8b1a944cf13a9a1c08facb2c9e98623ef3254d2ddb48113885c3e8e97fec8db9","typeString":"literal_string hex\"ff\""},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":2860,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"1539:3:29","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":2861,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"1539:16:29","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":2876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1539:229:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":2859,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"1508:9:29","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":2877,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1508:278:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2858,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1483:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2857,"name":"uint256","nodeType":"ElementaryTypeName","src":"1483:7:29","typeDescriptions":{}}},"id":2878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1483:317:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2856,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1462:7:29","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2855,"name":"address","nodeType":"ElementaryTypeName","src":"1462:7:29","typeDescriptions":{}}},"id":2879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1462:348:29","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"1455:355:29","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2881,"nodeType":"ExpressionStatement","src":"1455:355:29"}]},"documentation":{"id":2837,"nodeType":"StructuredDocumentation","src":"1064:236:29","text":"@notice Deterministically computes the pool address given the factory and PoolKey\n @param factory The Uniswap V3 factory contract address\n @param key The PoolKey\n @return pool The contract address of the V3 pool"},"id":2883,"implemented":true,"kind":"function","modifiers":[],"name":"computeAddress","nodeType":"FunctionDefinition","parameters":{"id":2842,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"factory","nodeType":"VariableDeclaration","scope":2883,"src":"1329:15:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2838,"name":"address","nodeType":"ElementaryTypeName","src":"1329:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2841,"mutability":"mutable","name":"key","nodeType":"VariableDeclaration","scope":2883,"src":"1346:18:29","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_memory_ptr","typeString":"struct PoolAddress.PoolKey"},"typeName":{"id":2840,"name":"PoolKey","nodeType":"UserDefinedTypeName","referencedDeclaration":2805,"src":"1346:7:29","typeDescriptions":{"typeIdentifier":"t_struct$_PoolKey_$2805_storage_ptr","typeString":"struct PoolAddress.PoolKey"}},"visibility":"internal"}],"src":"1328:37:29"},"returnParameters":{"id":2845,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2844,"mutability":"mutable","name":"pool","nodeType":"VariableDeclaration","scope":2883,"src":"1389:12:29","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2843,"name":"address","nodeType":"ElementaryTypeName","src":"1389:7:29","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1388:14:29"},"scope":2884,"src":"1305:512:29","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2885,"src":"167:1652:29"}],"src":"45:1775:29"},"id":29},"contracts/PredictiveLiquidityManagerFinal.sol":{"ast":{"absolutePath":"contracts/PredictiveLiquidityManagerFinal.sol","exportedSymbols":{"Address":[1237],"Context":[1260],"IERC165":[121],"IERC20":[554],"IERC20Decimals":[2906],"IERC721":[883],"IERC721Enumerable":[914],"IERC721Metadata":[941],"IERC721Permit":[2423],"INonfungiblePositionManager":[2618],"IPeripheryImmutableState":[2634],"IPeripheryPayments":[2660],"IPoolInitializer":[2679],"ISwapRouter":[2775],"IUniswapV3Factory":[1383],"IUniswapV3MintCallback":[1419],"IUniswapV3Pool":[1405],"IUniswapV3PoolActions":[1529],"IUniswapV3PoolDerivedState":[1560],"IUniswapV3PoolEvents":[1679],"IUniswapV3PoolImmutables":[1719],"IUniswapV3PoolOwnerActions":[1745],"IUniswapV3PoolState":[1853],"IUniswapV3SwapCallback":[1433],"IWETH9":[2792],"Ownable":[109],"PoolAddress":[2884],"PredictiveLiquidityManagerFinal":[4840],"ReentrancyGuard":[1300],"SafeERC20":[767],"SafeMath":[476],"SqrtMath":[5031],"TickMath":[2388]},"id":4841,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2886,"literals":["solidity","^","0.7",".6"],"nodeType":"PragmaDirective","src":"33:23:30"},{"id":2887,"literals":["abicoder","v2"],"nodeType":"PragmaDirective","src":"58:19:30"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2888,"nodeType":"ImportDirective","scope":4841,"sourceUnit":110,"src":"237:52:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":2889,"nodeType":"ImportDirective","scope":4841,"sourceUnit":555,"src":"291:56:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","file":"@openzeppelin/contracts/token/ERC20/SafeERC20.sol","id":2890,"nodeType":"ImportDirective","scope":4841,"sourceUnit":768,"src":"500:59:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","file":"@openzeppelin/contracts/math/SafeMath.sol","id":2891,"nodeType":"ImportDirective","scope":4841,"sourceUnit":477,"src":"577:51:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","file":"@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":2892,"nodeType":"ImportDirective","scope":4841,"sourceUnit":1301,"src":"656:59:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/libraries/SqrtMath.sol","file":"./libraries/SqrtMath.sol","id":2893,"nodeType":"ImportDirective","scope":4841,"sourceUnit":5032,"src":"802:34:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol","id":2894,"nodeType":"ImportDirective","scope":4841,"sourceUnit":1406,"src":"912:66:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","file":"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol","id":2895,"nodeType":"ImportDirective","scope":4841,"sourceUnit":1384,"src":"980:69:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol","file":"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol","id":2896,"nodeType":"ImportDirective","scope":4841,"sourceUnit":1420,"src":"1051:83:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-core/contracts/libraries/TickMath.sol","file":"@uniswap/v3-core/contracts/libraries/TickMath.sol","id":2897,"nodeType":"ImportDirective","scope":4841,"sourceUnit":2389,"src":"1136:59:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol","file":"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol","id":2898,"nodeType":"ImportDirective","scope":4841,"sourceUnit":2619,"src":"1241:84:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","file":"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol","id":2899,"nodeType":"ImportDirective","scope":4841,"sourceUnit":2776,"src":"1327:68:30","symbolAliases":[],"unitAlias":""},{"absolutePath":"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol","file":"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol","id":2900,"nodeType":"ImportDirective","scope":4841,"sourceUnit":2793,"src":"1397:72:30","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"interface","fullyImplemented":false,"id":2906,"linearizedBaseContracts":[2906],"name":"IERC20Decimals","nodeType":"ContractDefinition","nodes":[{"functionSelector":"313ce567","id":2905,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nodeType":"FunctionDefinition","parameters":{"id":2901,"nodeType":"ParameterList","parameters":[],"src":"1723:2:30"},"returnParameters":{"id":2904,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2903,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":2905,"src":"1749:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2902,"name":"uint8","nodeType":"ElementaryTypeName","src":"1749:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"1748:7:30"},"scope":2906,"src":"1706:50:30","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":4841,"src":"1674:85:30"},{"abstract":false,"baseContracts":[{"baseName":{"id":2907,"name":"Ownable","nodeType":"UserDefinedTypeName","referencedDeclaration":109,"src":"1844:7:30","typeDescriptions":{"typeIdentifier":"t_contract$_Ownable_$109","typeString":"contract Ownable"}},"id":2908,"nodeType":"InheritanceSpecifier","src":"1844:7:30"},{"baseName":{"id":2909,"name":"ReentrancyGuard","nodeType":"UserDefinedTypeName","referencedDeclaration":1300,"src":"1858:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_ReentrancyGuard_$1300","typeString":"contract ReentrancyGuard"}},"id":2910,"nodeType":"InheritanceSpecifier","src":"1858:15:30"},{"baseName":{"id":2911,"name":"IUniswapV3MintCallback","nodeType":"UserDefinedTypeName","referencedDeclaration":1419,"src":"1880:22:30","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3MintCallback_$1419","typeString":"contract IUniswapV3MintCallback"}},"id":2912,"nodeType":"InheritanceSpecifier","src":"1880:22:30"}],"contractDependencies":[109,1260,1300,1419],"contractKind":"contract","fullyImplemented":true,"id":4840,"linearizedBaseContracts":[4840,1419,1300,109,1260],"name":"PredictiveLiquidityManagerFinal","nodeType":"ContractDefinition","nodes":[{"id":2915,"libraryName":{"id":2913,"name":"SafeERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":767,"src":"1968:9:30","typeDescriptions":{"typeIdentifier":"t_contract$_SafeERC20_$767","typeString":"library SafeERC20"}},"nodeType":"UsingForDirective","src":"1962:27:30","typeName":{"id":2914,"name":"IERC20","nodeType":"UserDefinedTypeName","referencedDeclaration":554,"src":"1982:6:30","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}}},{"id":2918,"libraryName":{"id":2916,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":476,"src":"2001:8:30","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$476","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"1995:27:30","typeName":{"id":2917,"name":"uint256","nodeType":"ElementaryTypeName","src":"2014:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"constant":false,"functionSelector":"c45a0155","id":2920,"mutability":"immutable","name":"factory","nodeType":"VariableDeclaration","scope":4840,"src":"2180:42:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"},"typeName":{"id":2919,"name":"IUniswapV3Factory","nodeType":"UserDefinedTypeName","referencedDeclaration":1383,"src":"2180:17:30","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"}},"visibility":"public"},{"constant":false,"functionSelector":"791b98bc","id":2922,"mutability":"immutable","name":"positionManager","nodeType":"VariableDeclaration","scope":4840,"src":"2229:60:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"},"typeName":{"id":2921,"name":"INonfungiblePositionManager","nodeType":"UserDefinedTypeName","referencedDeclaration":2618,"src":"2229:27:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"visibility":"public"},{"constant":false,"functionSelector":"c31c9c07","id":2924,"mutability":"immutable","name":"swapRouter","nodeType":"VariableDeclaration","scope":4840,"src":"2296:39:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"},"typeName":{"id":2923,"name":"ISwapRouter","nodeType":"UserDefinedTypeName","referencedDeclaration":2775,"src":"2296:11:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}},"visibility":"public"},{"constant":false,"functionSelector":"0dfe1681","id":2926,"mutability":"immutable","name":"token0","nodeType":"VariableDeclaration","scope":4840,"src":"2342:31:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2925,"name":"address","nodeType":"ElementaryTypeName","src":"2342:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"d21220a7","id":2928,"mutability":"immutable","name":"token1","nodeType":"VariableDeclaration","scope":4840,"src":"2380:31:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2927,"name":"address","nodeType":"ElementaryTypeName","src":"2380:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"b31ac6e2","id":2930,"mutability":"immutable","name":"token0Decimals","nodeType":"VariableDeclaration","scope":4840,"src":"2418:37:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2929,"name":"uint8","nodeType":"ElementaryTypeName","src":"2418:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"0b77884d","id":2932,"mutability":"immutable","name":"token1Decimals","nodeType":"VariableDeclaration","scope":4840,"src":"2462:37:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":2931,"name":"uint8","nodeType":"ElementaryTypeName","src":"2462:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"public"},{"constant":false,"functionSelector":"ddca3f43","id":2934,"mutability":"immutable","name":"fee","nodeType":"VariableDeclaration","scope":4840,"src":"2506:27:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2933,"name":"uint24","nodeType":"ElementaryTypeName","src":"2506:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"public"},{"constant":false,"functionSelector":"d0c93a7c","id":2936,"mutability":"immutable","name":"tickSpacing","nodeType":"VariableDeclaration","scope":4840,"src":"2540:34:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2935,"name":"int24","nodeType":"ElementaryTypeName","src":"2540:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"public"},{"constant":false,"functionSelector":"4aa4a4fc","id":2938,"mutability":"immutable","name":"WETH9","nodeType":"VariableDeclaration","scope":4840,"src":"2581:30:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"2581:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"PredictiveLiquidityManagerFinal.Position","id":2949,"members":[{"constant":false,"id":2940,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2949,"src":"2647:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint256","nodeType":"ElementaryTypeName","src":"2647:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2942,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2949,"src":"2673:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2941,"name":"uint128","nodeType":"ElementaryTypeName","src":"2673:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":2944,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":2949,"src":"2701:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2943,"name":"int24","nodeType":"ElementaryTypeName","src":"2701:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2946,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":2949,"src":"2727:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2945,"name":"int24","nodeType":"ElementaryTypeName","src":"2727:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2948,"mutability":"mutable","name":"active","nodeType":"VariableDeclaration","scope":2949,"src":"2753:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2947,"name":"bool","nodeType":"ElementaryTypeName","src":"2753:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Position","nodeType":"StructDefinition","scope":4840,"src":"2620:152:30","visibility":"public"},{"constant":false,"functionSelector":"d534d636","id":2951,"mutability":"mutable","name":"currentPosition","nodeType":"VariableDeclaration","scope":4840,"src":"2778:31:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position"},"typeName":{"id":2950,"name":"Position","nodeType":"UserDefinedTypeName","referencedDeclaration":2949,"src":"2778:8:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage_ptr","typeString":"struct PredictiveLiquidityManagerFinal.Position"}},"visibility":"public"},{"constant":false,"functionSelector":"01d31e7c","id":2954,"mutability":"mutable","name":"rangeWidthMultiplier","nodeType":"VariableDeclaration","scope":4840,"src":"2846:38:30","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2952,"name":"uint24","nodeType":"ElementaryTypeName","src":"2846:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"value":{"hexValue":"34","id":2953,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2883:1:30","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"visibility":"public"},{"canonicalName":"PredictiveLiquidityManagerFinal.SwapParams","id":2967,"members":[{"constant":false,"id":2956,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":2967,"src":"2953:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2955,"name":"address","nodeType":"ElementaryTypeName","src":"2953:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2958,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":2967,"src":"2979:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2957,"name":"address","nodeType":"ElementaryTypeName","src":"2979:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2960,"mutability":"mutable","name":"poolFee","nodeType":"VariableDeclaration","scope":2967,"src":"3006:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":2959,"name":"uint24","nodeType":"ElementaryTypeName","src":"3006:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":2962,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":2967,"src":"3031:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2961,"name":"uint256","nodeType":"ElementaryTypeName","src":"3031:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2964,"mutability":"mutable","name":"amountOutMinimum","nodeType":"VariableDeclaration","scope":2967,"src":"3058:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2963,"name":"uint256","nodeType":"ElementaryTypeName","src":"3058:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2966,"mutability":"mutable","name":"sqrtPriceLimitX96","nodeType":"VariableDeclaration","scope":2967,"src":"3093:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":2965,"name":"uint160","nodeType":"ElementaryTypeName","src":"3093:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"name":"SwapParams","nodeType":"StructDefinition","scope":4840,"src":"2924:202:30","visibility":"public"},{"anonymous":false,"id":2981,"name":"OperationReported","nodeType":"EventDefinition","parameters":{"id":2980,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2969,"indexed":false,"mutability":"mutable","name":"actualPrice","nodeType":"VariableDeclaration","scope":2981,"src":"3205:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2968,"name":"uint256","nodeType":"ElementaryTypeName","src":"3205:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2971,"indexed":false,"mutability":"mutable","name":"predictedPrice","nodeType":"VariableDeclaration","scope":2981,"src":"3235:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2970,"name":"uint256","nodeType":"ElementaryTypeName","src":"3235:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2973,"indexed":false,"mutability":"mutable","name":"currentTick","nodeType":"VariableDeclaration","scope":2981,"src":"3268:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2972,"name":"int24","nodeType":"ElementaryTypeName","src":"3268:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2975,"indexed":false,"mutability":"mutable","name":"predictedTick","nodeType":"VariableDeclaration","scope":2981,"src":"3296:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2974,"name":"int24","nodeType":"ElementaryTypeName","src":"3296:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2977,"indexed":false,"mutability":"mutable","name":"adjusted","nodeType":"VariableDeclaration","scope":2981,"src":"3326:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2976,"name":"bool","nodeType":"ElementaryTypeName","src":"3326:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":2979,"indexed":false,"mutability":"mutable","name":"gasUsed","nodeType":"VariableDeclaration","scope":2981,"src":"3350:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2978,"name":"uint256","nodeType":"ElementaryTypeName","src":"3350:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3194:178:30"},"src":"3171:202:30"},{"anonymous":false,"id":2991,"name":"LiquidityAdjusted","nodeType":"EventDefinition","parameters":{"id":2990,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2983,"indexed":false,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2991,"src":"3415:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2982,"name":"uint256","nodeType":"ElementaryTypeName","src":"3415:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2985,"indexed":false,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":2991,"src":"3441:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2984,"name":"int24","nodeType":"ElementaryTypeName","src":"3441:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2987,"indexed":false,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":2991,"src":"3467:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":2986,"name":"int24","nodeType":"ElementaryTypeName","src":"3467:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":2989,"indexed":false,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":2991,"src":"3493:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":2988,"name":"uint128","nodeType":"ElementaryTypeName","src":"3493:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"3404:113:30"},"src":"3381:137:30"},{"anonymous":false,"id":2999,"name":"LiquidityRemoved","nodeType":"EventDefinition","parameters":{"id":2998,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2993,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":2999,"src":"3559:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2992,"name":"uint256","nodeType":"ElementaryTypeName","src":"3559:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2995,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":2999,"src":"3593:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2994,"name":"uint256","nodeType":"ElementaryTypeName","src":"3593:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2997,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":2999,"src":"3619:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2996,"name":"uint256","nodeType":"ElementaryTypeName","src":"3619:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3548:93:30"},"src":"3526:116:30"},{"anonymous":false,"id":3009,"name":"Swapped","nodeType":"EventDefinition","parameters":{"id":3008,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3001,"indexed":true,"mutability":"mutable","name":"tokenIn","nodeType":"VariableDeclaration","scope":3009,"src":"3674:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3000,"name":"address","nodeType":"ElementaryTypeName","src":"3674:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3003,"indexed":true,"mutability":"mutable","name":"tokenOut","nodeType":"VariableDeclaration","scope":3009,"src":"3708:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3002,"name":"address","nodeType":"ElementaryTypeName","src":"3708:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3005,"indexed":false,"mutability":"mutable","name":"amountIn","nodeType":"VariableDeclaration","scope":3009,"src":"3743:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3004,"name":"uint256","nodeType":"ElementaryTypeName","src":"3743:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3007,"indexed":false,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":3009,"src":"3770:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3006,"name":"uint256","nodeType":"ElementaryTypeName","src":"3770:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3663:131:30"},"src":"3650:145:30"},{"anonymous":false,"id":3017,"name":"Deposited","nodeType":"EventDefinition","parameters":{"id":3016,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3011,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":3017,"src":"3829:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3010,"name":"address","nodeType":"ElementaryTypeName","src":"3829:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3013,"indexed":true,"mutability":"mutable","name":"sender","nodeType":"VariableDeclaration","scope":3017,"src":"3861:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3012,"name":"address","nodeType":"ElementaryTypeName","src":"3861:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3015,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3017,"src":"3894:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3014,"name":"uint256","nodeType":"ElementaryTypeName","src":"3894:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3818:97:30"},"src":"3803:113:30"},{"anonymous":false,"id":3025,"name":"Withdrawn","nodeType":"EventDefinition","parameters":{"id":3024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3019,"indexed":true,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":3025,"src":"3950:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3018,"name":"address","nodeType":"ElementaryTypeName","src":"3950:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3021,"indexed":true,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":3025,"src":"3982:25:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3020,"name":"address","nodeType":"ElementaryTypeName","src":"3982:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3023,"indexed":false,"mutability":"mutable","name":"amount","nodeType":"VariableDeclaration","scope":3025,"src":"4018:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3022,"name":"uint256","nodeType":"ElementaryTypeName","src":"4018:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3939:100:30"},"src":"3924:116:30"},{"anonymous":false,"id":3033,"name":"LiquidityMintFailed","nodeType":"EventDefinition","parameters":{"id":3032,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3027,"indexed":false,"mutability":"mutable","name":"amount0Desired","nodeType":"VariableDeclaration","scope":3033,"src":"4084:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3026,"name":"uint256","nodeType":"ElementaryTypeName","src":"4084:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3029,"indexed":false,"mutability":"mutable","name":"amount1Desired","nodeType":"VariableDeclaration","scope":3033,"src":"4117:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3028,"name":"uint256","nodeType":"ElementaryTypeName","src":"4117:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3031,"indexed":false,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":3033,"src":"4150:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3030,"name":"string","nodeType":"ElementaryTypeName","src":"4150:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4073:97:30"},"src":"4048:123:30"},{"anonymous":false,"id":3039,"name":"LiquidityRemoveFailed","nodeType":"EventDefinition","parameters":{"id":3038,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3035,"indexed":true,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":3039,"src":"4207:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3034,"name":"uint256","nodeType":"ElementaryTypeName","src":"4207:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3037,"indexed":false,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":3039,"src":"4232:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3036,"name":"string","nodeType":"ElementaryTypeName","src":"4232:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"4206:40:30"},"src":"4179:68:30"},{"anonymous":false,"id":3045,"name":"StrategyParamUpdated","nodeType":"EventDefinition","parameters":{"id":3044,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3041,"indexed":false,"mutability":"mutable","name":"paramName","nodeType":"VariableDeclaration","scope":3045,"src":"4282:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3040,"name":"string","nodeType":"ElementaryTypeName","src":"4282:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3043,"indexed":false,"mutability":"mutable","name":"newValue","nodeType":"VariableDeclaration","scope":3045,"src":"4300:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3042,"name":"uint256","nodeType":"ElementaryTypeName","src":"4300:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4281:36:30"},"src":"4255:63:30"},{"anonymous":false,"id":3067,"name":"LiquidityManagementMetrics","nodeType":"EventDefinition","parameters":{"id":3066,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3047,"indexed":false,"mutability":"mutable","name":"timestamp","nodeType":"VariableDeclaration","scope":3067,"src":"4440:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3046,"name":"uint256","nodeType":"ElementaryTypeName","src":"4440:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3049,"indexed":false,"mutability":"mutable","name":"actualPrice","nodeType":"VariableDeclaration","scope":3067,"src":"4493:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3048,"name":"uint256","nodeType":"ElementaryTypeName","src":"4493:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3051,"indexed":false,"mutability":"mutable","name":"predictedPrice","nodeType":"VariableDeclaration","scope":3067,"src":"4546:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3050,"name":"uint256","nodeType":"ElementaryTypeName","src":"4546:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3053,"indexed":false,"mutability":"mutable","name":"currentTick","nodeType":"VariableDeclaration","scope":3067,"src":"4621:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3052,"name":"int24","nodeType":"ElementaryTypeName","src":"4621:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3055,"indexed":false,"mutability":"mutable","name":"predictedTick","nodeType":"VariableDeclaration","scope":3067,"src":"4668:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3054,"name":"int24","nodeType":"ElementaryTypeName","src":"4668:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3057,"indexed":false,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3067,"src":"4733:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3056,"name":"int24","nodeType":"ElementaryTypeName","src":"4733:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3059,"indexed":false,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3067,"src":"4808:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3058,"name":"int24","nodeType":"ElementaryTypeName","src":"4808:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3061,"indexed":false,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":3067,"src":"4883:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3060,"name":"uint128","nodeType":"ElementaryTypeName","src":"4883:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3063,"indexed":false,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3067,"src":"4940:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3062,"name":"uint256","nodeType":"ElementaryTypeName","src":"4940:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3065,"indexed":false,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3067,"src":"4991:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3064,"name":"uint256","nodeType":"ElementaryTypeName","src":"4991:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4429:609:30"},"src":"4397:642:30"},{"body":{"id":3301,"nodeType":"Block","src":"5317:2075:30","statements":[{"expression":{"id":3090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3086,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"5396:7:30","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3088,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"5424:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3087,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"5406:17:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$1383_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3089,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5406:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"}},"src":"5396:37:30","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"}},"id":3091,"nodeType":"ExpressionStatement","src":"5396:37:30"},{"expression":{"id":3096,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3092,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"5444:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3094,"name":"_positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"5490:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3093,"name":"INonfungiblePositionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"5462:27:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INonfungiblePositionManager_$2618_$","typeString":"type(contract INonfungiblePositionManager)"}},"id":3095,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5462:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"src":"5444:63:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"id":3097,"nodeType":"ExpressionStatement","src":"5444:63:30"},{"expression":{"id":3102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3098,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"5518:10:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3100,"name":"_swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"5543:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3099,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"5531:11:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2775_$","typeString":"type(contract ISwapRouter)"}},"id":3101,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5531:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}},"src":"5518:37:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}},"id":3103,"nodeType":"ExpressionStatement","src":"5518:37:30"},{"expression":{"id":3106,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3104,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"5566:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3105,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"5575:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5566:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3107,"nodeType":"ExpressionStatement","src":"5566:16:30"},{"expression":{"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3108,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"5593:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3109,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5602:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5593:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3111,"nodeType":"ExpressionStatement","src":"5593:16:30"},{"expression":{"id":3114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3112,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"5620:3:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3113,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"5626:4:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"5620:10:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":3115,"nodeType":"ExpressionStatement","src":"5620:10:30"},{"expression":{"id":3118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3116,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"5641:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3117,"name":"_weth9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"5649:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5641:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3119,"nodeType":"ExpressionStatement","src":"5641:14:30"},{"clauses":[{"block":{"id":3132,"nodeType":"Block","src":"5800:53:30","statements":[{"expression":{"id":3130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3128,"name":"token0Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"5815:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3129,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3126,"src":"5832:9:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"5815:26:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3131,"nodeType":"ExpressionStatement","src":"5815:26:30"}]},"errorName":"","id":3133,"nodeType":"TryCatchClause","parameters":{"id":3127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3126,"mutability":"mutable","name":"_decimals","nodeType":"VariableDeclaration","scope":3133,"src":"5783:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3125,"name":"uint8","nodeType":"ElementaryTypeName","src":"5783:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5782:17:30"},"src":"5774:79:30"},{"block":{"id":3138,"nodeType":"Block","src":"5860:71:30","statements":[{"expression":{"arguments":[{"hexValue":"546f6b656e3020646f6573206e6f7420737570706f727420646563696d616c732829","id":3135,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5882:36:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_661d8ba06e4fe11f48d275e6363a31b01958af1680fc61f9e1e59f57f2f459e5","typeString":"literal_string \"Token0 does not support decimals()\""},"value":"Token0 does not support decimals()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_661d8ba06e4fe11f48d275e6363a31b01958af1680fc61f9e1e59f57f2f459e5","typeString":"literal_string \"Token0 does not support decimals()\""}],"id":3134,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"5875:6:30","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3136,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5875:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3137,"nodeType":"ExpressionStatement","src":"5875:44:30"}]},"errorName":"","id":3139,"nodeType":"TryCatchClause","src":"5854:77:30"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3121,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"5754:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3120,"name":"IERC20Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"5739:14:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Decimals_$2906_$","typeString":"type(contract IERC20Decimals)"}},"id":3122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5739:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Decimals_$2906","typeString":"contract IERC20Decimals"}},"id":3123,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2905,"src":"5739:32:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5739:34:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3140,"nodeType":"TryStatement","src":"5735:196:30"},{"clauses":[{"block":{"id":3153,"nodeType":"Block","src":"6008:53:30","statements":[{"expression":{"id":3151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3149,"name":"token1Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"6023:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3150,"name":"_decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3147,"src":"6040:9:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"6023:26:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3152,"nodeType":"ExpressionStatement","src":"6023:26:30"}]},"errorName":"","id":3154,"nodeType":"TryCatchClause","parameters":{"id":3148,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3147,"mutability":"mutable","name":"_decimals","nodeType":"VariableDeclaration","scope":3154,"src":"5991:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":3146,"name":"uint8","nodeType":"ElementaryTypeName","src":"5991:5:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"5990:17:30"},"src":"5982:79:30"},{"block":{"id":3159,"nodeType":"Block","src":"6068:71:30","statements":[{"expression":{"arguments":[{"hexValue":"546f6b656e3120646f6573206e6f7420737570706f727420646563696d616c732829","id":3156,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6090:36:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1a7fec9648706a07f007a7b8cfb0532c4d975c09980513eb1cfb7916bca8e585","typeString":"literal_string \"Token1 does not support decimals()\""},"value":"Token1 does not support decimals()"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_1a7fec9648706a07f007a7b8cfb0532c4d975c09980513eb1cfb7916bca8e585","typeString":"literal_string \"Token1 does not support decimals()\""}],"id":3155,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"6083:6:30","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":3157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6083:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3158,"nodeType":"ExpressionStatement","src":"6083:44:30"}]},"errorName":"","id":3160,"nodeType":"TryCatchClause","src":"6062:77:30"}],"externalCall":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3142,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"5962:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3141,"name":"IERC20Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2906,"src":"5947:14:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20Decimals_$2906_$","typeString":"type(contract IERC20Decimals)"}},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5947:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20Decimals_$2906","typeString":"contract IERC20Decimals"}},"id":3144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decimals","nodeType":"MemberAccess","referencedDeclaration":2905,"src":"5947:32:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint8_$","typeString":"function () view external returns (uint8)"}},"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5947:34:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"id":3161,"nodeType":"TryStatement","src":"5943:196:30"},{"assignments":[3163],"declarations":[{"constant":false,"id":3163,"mutability":"mutable","name":"poolAddress","nodeType":"VariableDeclaration","scope":3301,"src":"6216:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3162,"name":"address","nodeType":"ElementaryTypeName","src":"6216:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3172,"initialValue":{"arguments":[{"id":3168,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"6288:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3169,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"6310:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3170,"name":"_fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3079,"src":"6332:4:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"arguments":[{"id":3165,"name":"_factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3069,"src":"6256:8:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3164,"name":"IUniswapV3Factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1383,"src":"6238:17:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Factory_$1383_$","typeString":"type(contract IUniswapV3Factory)"}},"id":3166,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6238:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"}},"id":3167,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":1356,"src":"6238:35:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":3171,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6238:109:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6216:131:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3174,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"6366:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6389:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6381:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3175,"name":"address","nodeType":"ElementaryTypeName","src":"6381:7:30","typeDescriptions":{}}},"id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6381:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"6366:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f6573206e6f74206578697374","id":3180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6393:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37","typeString":"literal_string \"Pool does not exist\""},"value":"Pool does not exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37","typeString":"literal_string \"Pool does not exist\""}],"id":3173,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6358:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6358:57:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3182,"nodeType":"ExpressionStatement","src":"6358:57:30"},{"expression":{"id":3189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3183,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"6426:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":3185,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3163,"src":"6455:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3184,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"6440:14:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$1405_$","typeString":"type(contract IUniswapV3Pool)"}},"id":3186,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6440:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$1405","typeString":"contract IUniswapV3Pool"}},"id":3187,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tickSpacing","nodeType":"MemberAccess","referencedDeclaration":1712,"src":"6440:39:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_int24_$","typeString":"function () view external returns (int24)"}},"id":3188,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6440:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"6426:55:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3190,"nodeType":"ExpressionStatement","src":"6426:55:30"},{"expression":{"arguments":[{"arguments":[{"id":3197,"name":"_positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"6673:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3196,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6665:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3195,"name":"address","nodeType":"ElementaryTypeName","src":"6665:7:30","typeDescriptions":{}}},"id":3198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6665:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3201,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6710:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3200,"name":"uint256","nodeType":"ElementaryTypeName","src":"6710:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3199,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6705:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3202,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6705:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3203,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6705:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3192,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"6630:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3191,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6623:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3193,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6623:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3194,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"6623:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6623:110:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3205,"nodeType":"ExpressionStatement","src":"6623:110:30"},{"expression":{"arguments":[{"arguments":[{"id":3212,"name":"_positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"6794:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3211,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6786:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3210,"name":"address","nodeType":"ElementaryTypeName","src":"6786:7:30","typeDescriptions":{}}},"id":3213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6786:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3216,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6831:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3215,"name":"uint256","nodeType":"ElementaryTypeName","src":"6831:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3214,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6826:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3217,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6826:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3218,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6826:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3207,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"6751:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3206,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6744:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3208,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6744:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"6744:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3219,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6744:110:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3220,"nodeType":"ExpressionStatement","src":"6744:110:30"},{"expression":{"arguments":[{"arguments":[{"id":3227,"name":"_swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6901:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6893:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3225,"name":"address","nodeType":"ElementaryTypeName","src":"6893:7:30","typeDescriptions":{}}},"id":3228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6893:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3231,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6920:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3230,"name":"uint256","nodeType":"ElementaryTypeName","src":"6920:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3229,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6915:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6915:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6915:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3222,"name":"_token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3075,"src":"6872:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3221,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6865:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6865:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"6865:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3234,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6865:68:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3235,"nodeType":"ExpressionStatement","src":"6865:68:30"},{"expression":{"arguments":[{"arguments":[{"id":3242,"name":"_swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"6980:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3241,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6972:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3240,"name":"address","nodeType":"ElementaryTypeName","src":"6972:7:30","typeDescriptions":{}}},"id":3243,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6972:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3246,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6999:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3245,"name":"uint256","nodeType":"ElementaryTypeName","src":"6999:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3244,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6994:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6994:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3248,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"6994:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3237,"name":"_token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3077,"src":"6951:7:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3236,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"6944:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3238,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6944:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3239,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"6944:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3249,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6944:68:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3250,"nodeType":"ExpressionStatement","src":"6944:68:30"},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3256,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3251,"name":"_weth9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"7029:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3254,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7047:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3253,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7039:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3252,"name":"address","nodeType":"ElementaryTypeName","src":"7039:7:30","typeDescriptions":{}}},"id":3255,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7039:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7029:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3288,"nodeType":"IfStatement","src":"7025:256:30","trueBody":{"id":3287,"nodeType":"Block","src":"7051:230:30","statements":[{"expression":{"arguments":[{"arguments":[{"id":3263,"name":"_positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3071,"src":"7119:16:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3262,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7111:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3261,"name":"address","nodeType":"ElementaryTypeName","src":"7111:7:30","typeDescriptions":{}}},"id":3264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7111:25:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3267,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7160:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3266,"name":"uint256","nodeType":"ElementaryTypeName","src":"7160:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3265,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7155:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7155:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7155:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3258,"name":"_weth9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"7073:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3257,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7066:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3259,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7066:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"7066:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3270,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7066:121:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3271,"nodeType":"ExpressionStatement","src":"7066:121:30"},{"expression":{"arguments":[{"arguments":[{"id":3278,"name":"_swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3073,"src":"7237:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3277,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7229:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3276,"name":"address","nodeType":"ElementaryTypeName","src":"7229:7:30","typeDescriptions":{}}},"id":3279,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7229:20:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"arguments":[{"id":3282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7256:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":3281,"name":"uint256","nodeType":"ElementaryTypeName","src":"7256:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":3280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7251:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7251:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":3284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"7251:17:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3273,"name":"_weth9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3081,"src":"7209:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3272,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"7202:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7202:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"7202:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3285,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7202:67:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3286,"nodeType":"ExpressionStatement","src":"7202:67:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3294,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3289,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"7297:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3292,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7322:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3291,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7314:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3290,"name":"address","nodeType":"ElementaryTypeName","src":"7314:7:30","typeDescriptions":{}}},"id":3293,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7314:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"7297:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3300,"nodeType":"IfStatement","src":"7293:92:30","trueBody":{"id":3299,"nodeType":"Block","src":"7326:59:30","statements":[{"expression":{"arguments":[{"id":3296,"name":"_initialOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3083,"src":"7359:13:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3295,"name":"transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":108,"src":"7341:17:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":3297,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7341:32:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3298,"nodeType":"ExpressionStatement","src":"7341:32:30"}]}}]},"id":3302,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":3084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3069,"mutability":"mutable","name":"_factory","nodeType":"VariableDeclaration","scope":3302,"src":"5097:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3068,"name":"address","nodeType":"ElementaryTypeName","src":"5097:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3071,"mutability":"mutable","name":"_positionManager","nodeType":"VariableDeclaration","scope":3302,"src":"5124:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3070,"name":"address","nodeType":"ElementaryTypeName","src":"5124:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3073,"mutability":"mutable","name":"_swapRouter","nodeType":"VariableDeclaration","scope":3302,"src":"5159:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3072,"name":"address","nodeType":"ElementaryTypeName","src":"5159:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3075,"mutability":"mutable","name":"_token0","nodeType":"VariableDeclaration","scope":3302,"src":"5189:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3074,"name":"address","nodeType":"ElementaryTypeName","src":"5189:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3077,"mutability":"mutable","name":"_token1","nodeType":"VariableDeclaration","scope":3302,"src":"5215:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3076,"name":"address","nodeType":"ElementaryTypeName","src":"5215:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3079,"mutability":"mutable","name":"_fee","nodeType":"VariableDeclaration","scope":3302,"src":"5241:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":3078,"name":"uint24","nodeType":"ElementaryTypeName","src":"5241:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"},{"constant":false,"id":3081,"mutability":"mutable","name":"_weth9","nodeType":"VariableDeclaration","scope":3302,"src":"5263:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3080,"name":"address","nodeType":"ElementaryTypeName","src":"5263:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3083,"mutability":"mutable","name":"_initialOwner","nodeType":"VariableDeclaration","scope":3302,"src":"5288:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3082,"name":"address","nodeType":"ElementaryTypeName","src":"5288:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5086:230:30"},"returnParameters":{"id":3085,"nodeType":"ParameterList","parameters":[],"src":"5317:0:30"},"scope":4840,"src":"5075:2317:30","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3416,"nodeType":"Block","src":"7574:1735:30","statements":[{"assignments":[3312],"declarations":[{"constant":false,"id":3312,"mutability":"mutable","name":"gasStart","nodeType":"VariableDeclaration","scope":3416,"src":"7585:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3311,"name":"uint256","nodeType":"ElementaryTypeName","src":"7585:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3315,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3313,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"7604:7:30","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7604:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7585:28:30"},{"assignments":[3317],"declarations":[{"constant":false,"id":3317,"mutability":"mutable","name":"adjusted","nodeType":"VariableDeclaration","scope":3416,"src":"7624:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3316,"name":"bool","nodeType":"ElementaryTypeName","src":"7624:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3319,"initialValue":{"hexValue":"66616c7365","id":3318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7640:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"7624:21:30"},{"assignments":[3321,3323],"declarations":[{"constant":false,"id":3321,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":3416,"src":"7741:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":3320,"name":"uint160","nodeType":"ElementaryTypeName","src":"7741:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":3323,"mutability":"mutable","name":"currentTick","nodeType":"VariableDeclaration","scope":3416,"src":"7776:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3322,"name":"int24","nodeType":"ElementaryTypeName","src":"7776:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":3326,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3324,"name":"_getCurrentSqrtPriceAndTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4081,"src":"7807:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint160_$_t_int24_$","typeString":"function () view returns (uint160,int24)"}},"id":3325,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7807:29:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_int24_$","typeString":"tuple(uint160,int24)"}},"nodeType":"VariableDeclarationStatement","src":"7726:110:30"},{"assignments":[3328],"declarations":[{"constant":false,"id":3328,"mutability":"mutable","name":"currentPriceDecimal","nodeType":"VariableDeclaration","scope":3416,"src":"7847:27:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3327,"name":"uint256","nodeType":"ElementaryTypeName","src":"7847:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3332,"initialValue":{"arguments":[{"id":3330,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3321,"src":"7898:12:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":3329,"name":"_sqrtPriceX96ToPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4243,"src":"7877:20:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint160_$returns$_t_uint256_$","typeString":"function (uint160) view returns (uint256)"}},"id":3331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7877:34:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7847:64:30"},{"assignments":[3334],"declarations":[{"constant":false,"id":3334,"mutability":"mutable","name":"predictedTick","nodeType":"VariableDeclaration","scope":3416,"src":"7922:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3333,"name":"int24","nodeType":"ElementaryTypeName","src":"7922:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":3338,"initialValue":{"arguments":[{"id":3336,"name":"predictedPriceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"7957:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3335,"name":"_priceToTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4164,"src":"7944:12:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_int24_$","typeString":"function (uint256) view returns (int24)"}},"id":3337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7944:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"7922:57:30"},{"assignments":[3340,3342],"declarations":[{"constant":false,"id":3340,"mutability":"mutable","name":"targetTickLower","nodeType":"VariableDeclaration","scope":3416,"src":"8040:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3339,"name":"int24","nodeType":"ElementaryTypeName","src":"8040:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3342,"mutability":"mutable","name":"targetTickUpper","nodeType":"VariableDeclaration","scope":3416,"src":"8063:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3341,"name":"int24","nodeType":"ElementaryTypeName","src":"8063:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":3346,"initialValue":{"arguments":[{"id":3344,"name":"predictedTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8118:13:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"}],"id":3343,"name":"_calculateTicks","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4044,"src":"8088:15:30","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_int24_$returns$_t_int24_$_t_int24_$","typeString":"function (int24) view returns (int24,int24)"}},"id":3345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8088:54:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_int24_$_t_int24_$","typeString":"tuple(int24,int24)"}},"nodeType":"VariableDeclarationStatement","src":"8039:103:30"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3354,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"8240:23:30","subExpression":{"expression":{"id":3347,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"8241:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3348,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":2948,"src":"8241:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":3353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3350,"name":"targetTickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"8280:15:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3351,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"8299:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3352,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":2944,"src":"8299:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8280:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8240:84:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":3358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3355,"name":"targetTickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"8341:15:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3356,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"8360:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"8360:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"8341:44:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8240:145:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3370,"nodeType":"IfStatement","src":"8222:282:30","trueBody":{"id":3369,"nodeType":"Block","src":"8397:107:30","statements":[{"expression":{"arguments":[{"id":3361,"name":"targetTickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3340,"src":"8429:15:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3362,"name":"targetTickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3342,"src":"8446:15:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"}],"id":3360,"name":"_adjustLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3614,"src":"8412:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_int24_$_t_int24_$returns$__$","typeString":"function (int24,int24)"}},"id":3363,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8412:50:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3364,"nodeType":"ExpressionStatement","src":"8412:50:30"},{"expression":{"id":3367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3365,"name":"adjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"8477:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8488:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"8477:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3368,"nodeType":"ExpressionStatement","src":"8477:15:30"}]}},{"eventCall":{"arguments":[{"id":3372,"name":"currentPriceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"8627:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3373,"name":"predictedPriceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"8661:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3374,"name":"currentTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"8697:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3375,"name":"predictedTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"8723:13:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3376,"name":"adjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3317,"src":"8751:8:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3380,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3377,"name":"gasStart","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"8774:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":3378,"name":"gasleft","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-7,"src":"8785:7:30","typeDescriptions":{"typeIdentifier":"t_function_gasleft_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8785:9:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8774:20:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3371,"name":"OperationReported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"8595:17:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_int24_$_t_int24_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,int24,int24,bool,uint256)"}},"id":3381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8595:210:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3382,"nodeType":"EmitStatement","src":"8590:215:30"},{"eventCall":{"arguments":[{"expression":{"id":3384,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8923:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"8923:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3386,"name":"currentPriceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"8953:19:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3387,"name":"predictedPriceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3304,"src":"8987:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3388,"name":"currentTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3323,"src":"9023:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3389,"name":"predictedTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3334,"src":"9049:13:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":3390,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"9077:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3391,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":2944,"src":"9077:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":3392,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"9117:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3393,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"9117:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":3394,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"9157:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3395,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2942,"src":"9157:25:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"arguments":[{"arguments":[{"id":3402,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9230:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3401,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9222:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3400,"name":"address","nodeType":"ElementaryTypeName","src":"9222:7:30","typeDescriptions":{}}},"id":3403,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9222:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":3397,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"9204:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3396,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9197:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9197:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3399,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"9197:24:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3404,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9197:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"arguments":[{"id":3411,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9284:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3410,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9276:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3409,"name":"address","nodeType":"ElementaryTypeName","src":"9276:7:30","typeDescriptions":{}}},"id":3412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9276:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":3406,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9258:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3405,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9251:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3407,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9251:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"9251:24:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9251:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3383,"name":"LiquidityManagementMetrics","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3067,"src":"8882:26:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$_t_int24_$_t_int24_$_t_int24_$_t_int24_$_t_uint128_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256,int24,int24,int24,int24,uint128,uint256,uint256)"}},"id":3414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8882:419:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3415,"nodeType":"EmitStatement","src":"8877:424:30"}]},"functionSelector":"41675b05","id":3417,"implemented":true,"kind":"function","modifiers":[{"id":3307,"modifierName":{"id":3306,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"7551:12:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7551:12:30"},{"id":3309,"modifierName":{"id":3308,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"7564:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"7564:9:30"}],"name":"updatePredictionAndAdjust","nodeType":"FunctionDefinition","parameters":{"id":3305,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3304,"mutability":"mutable","name":"predictedPriceDecimal","nodeType":"VariableDeclaration","scope":3417,"src":"7505:29:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3303,"name":"uint256","nodeType":"ElementaryTypeName","src":"7505:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7494:47:30"},"returnParameters":{"id":3310,"nodeType":"ParameterList","parameters":[],"src":"7574:0:30"},"scope":4840,"src":"7460:1849:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3539,"nodeType":"Block","src":"9435:1463:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3429,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9468:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"9468:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3431,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"9486:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9468:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3436,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3433,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9496:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3434,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"9496:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3435,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9514:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9496:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9468:52:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e496e","id":3438,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9535:17:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_96b6969c794b38e9db79973f913a03fb7261caa659882d184f77b4014bec49da","typeString":"literal_string \"Invalid tokenIn\""},"value":"Invalid tokenIn"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_96b6969c794b38e9db79973f913a03fb7261caa659882d184f77b4014bec49da","typeString":"literal_string \"Invalid tokenIn\""}],"id":3428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9446:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3439,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9446:117:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3440,"nodeType":"ExpressionStatement","src":"9446:117:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3450,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3445,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3442,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9596:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":2958,"src":"9596:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3444,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"9615:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9596:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3446,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9625:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":2958,"src":"9625:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":3448,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"9644:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9625:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9596:54:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420746f6b656e4f7574","id":3451,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9665:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_5b315838595b6f0906c99fe9714c2e147346e98cd548cbaadd82971a173fc974","typeString":"literal_string \"Invalid tokenOut\""},"value":"Invalid tokenOut"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5b315838595b6f0906c99fe9714c2e147346e98cd548cbaadd82971a173fc974","typeString":"literal_string \"Invalid tokenOut\""}],"id":3441,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9574:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3452,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9574:120:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3453,"nodeType":"ExpressionStatement","src":"9574:120:30"},{"expression":{"arguments":[{"expression":{"id":3459,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9802:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"9802:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":3463,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"9835:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3462,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9827:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3461,"name":"address","nodeType":"ElementaryTypeName","src":"9827:7:30","typeDescriptions":{}}},"id":3464,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9827:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":3465,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9855:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"9855:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":3455,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9755:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"9755:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3454,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9748:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3457,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9748:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":613,"src":"9748:39:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9748:133:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3468,"nodeType":"ExpressionStatement","src":"9748:133:30"},{"expression":{"arguments":[{"arguments":[{"id":3476,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"9949:10:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}],"id":3475,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9941:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3474,"name":"address","nodeType":"ElementaryTypeName","src":"9941:7:30","typeDescriptions":{}}},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9941:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3478,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9975:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"9975:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":3470,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"9899:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"9899:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3469,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"9892:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9892:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"9892:34:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3480,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9892:109:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3481,"nodeType":"ExpressionStatement","src":"9892:109:30"},{"assignments":[3485],"declarations":[{"constant":false,"id":3485,"mutability":"mutable","name":"swapParams","nodeType":"VariableDeclaration","scope":3539,"src":"10046:52:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2703_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"},"typeName":{"id":3484,"name":"ISwapRouter.ExactInputSingleParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2703,"src":"10046:34:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2703_storage_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams"}},"visibility":"internal"}],"id":3507,"initialValue":{"arguments":[{"expression":{"id":3488,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10178:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"10178:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3490,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10221:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":2958,"src":"10221:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3492,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10260:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"poolFee","nodeType":"MemberAccess","referencedDeclaration":2960,"src":"10260:14:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"arguments":[{"id":3496,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"10312:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3495,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10304:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3494,"name":"address","nodeType":"ElementaryTypeName","src":"10304:7:30","typeDescriptions":{}}},"id":3497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10304:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":3498,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10346:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3499,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"10346:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3500,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10390:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"10390:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3502,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10442:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3503,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountOutMinimum","nodeType":"MemberAccess","referencedDeclaration":2964,"src":"10442:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":3504,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10503:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrtPriceLimitX96","nodeType":"MemberAccess","referencedDeclaration":2966,"src":"10503:24:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":3486,"name":"ISwapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2775,"src":"10101:11:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_ISwapRouter_$2775_$","typeString":"type(contract ISwapRouter)"}},"id":3487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"ExactInputSingleParams","nodeType":"MemberAccess","referencedDeclaration":2703,"src":"10101:48:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_ExactInputSingleParams_$2703_storage_ptr_$","typeString":"type(struct ISwapRouter.ExactInputSingleParams storage pointer)"}},"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenIn","tokenOut","fee","recipient","deadline","amountIn","amountOutMinimum","sqrtPriceLimitX96"],"nodeType":"FunctionCall","src":"10101:442:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2703_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}},"nodeType":"VariableDeclarationStatement","src":"10046:497:30"},{"expression":{"id":3513,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3508,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"10556:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3511,"name":"swapParams","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3485,"src":"10596:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2703_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_ExactInputSingleParams_$2703_memory_ptr","typeString":"struct ISwapRouter.ExactInputSingleParams memory"}],"expression":{"id":3509,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"10568:10:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}},"id":3510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"exactInputSingle","nodeType":"MemberAccess","referencedDeclaration":2711,"src":"10568:27:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_ExactInputSingleParams_$2703_memory_ptr_$returns$_t_uint256_$","typeString":"function (struct ISwapRouter.ExactInputSingleParams memory) payable external returns (uint256)"}},"id":3512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10568:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10556:51:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3514,"nodeType":"ExpressionStatement","src":"10556:51:30"},{"eventCall":{"arguments":[{"expression":{"id":3516,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10645:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"10645:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3518,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10674:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenOut","nodeType":"MemberAccess","referencedDeclaration":2958,"src":"10674:15:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":3520,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10704:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3521,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"amountIn","nodeType":"MemberAccess","referencedDeclaration":2962,"src":"10704:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3522,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"10734:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3515,"name":"Swapped","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3009,"src":"10623:7:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256,uint256)"}},"id":3523,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10623:131:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3524,"nodeType":"EmitStatement","src":"10618:136:30"},{"expression":{"arguments":[{"arguments":[{"id":3532,"name":"swapRouter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2924,"src":"10846:10:30","typeDescriptions":{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_ISwapRouter_$2775","typeString":"contract ISwapRouter"}],"id":3531,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10838:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3530,"name":"address","nodeType":"ElementaryTypeName","src":"10838:7:30","typeDescriptions":{}}},"id":3533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10838:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"hexValue":"30","id":3534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10859:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"expression":{"arguments":[{"expression":{"id":3526,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3419,"src":"10810:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams calldata"}},"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"tokenIn","nodeType":"MemberAccess","referencedDeclaration":2956,"src":"10810:14:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3525,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"10803:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10803:22:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeApprove","nodeType":"MemberAccess","referencedDeclaration":656,"src":"10803:34:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10803:58:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3536,"nodeType":"ExpressionStatement","src":"10803:58:30"},{"expression":{"id":3537,"name":"amountOut","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3426,"src":"10881:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3427,"id":3538,"nodeType":"Return","src":"10874:16:30"}]},"functionSelector":"516606eb","id":3540,"implemented":true,"kind":"function","modifiers":[{"id":3422,"modifierName":{"id":3421,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"9384:12:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9384:12:30"},{"id":3424,"modifierName":{"id":3423,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"9397:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"9397:9:30"}],"name":"swap","nodeType":"FunctionDefinition","parameters":{"id":3420,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3419,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3540,"src":"9341:26:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_calldata_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams"},"typeName":{"id":3418,"name":"SwapParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2967,"src":"9341:10:30","typeDescriptions":{"typeIdentifier":"t_struct$_SwapParams_$2967_storage_ptr","typeString":"struct PredictiveLiquidityManagerFinal.SwapParams"}},"visibility":"internal"}],"src":"9330:44:30"},"returnParameters":{"id":3427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3426,"mutability":"mutable","name":"amountOut","nodeType":"VariableDeclaration","scope":3540,"src":"9416:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3425,"name":"uint256","nodeType":"ElementaryTypeName","src":"9416:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9415:19:30"},"scope":4840,"src":"9317:1581:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3613,"nodeType":"Block","src":"11029:505:30","statements":[{"condition":{"expression":{"id":3547,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11044:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3548,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":2948,"src":"11044:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3553,"nodeType":"IfStatement","src":"11040:73:30","trueBody":{"id":3552,"nodeType":"Block","src":"11068:45:30","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":3549,"name":"_removeLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3840,"src":"11083:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":3550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11083:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3551,"nodeType":"ExpressionStatement","src":"11083:18:30"}]}},{"assignments":[3555],"declarations":[{"constant":false,"id":3555,"mutability":"mutable","name":"balance0","nodeType":"VariableDeclaration","scope":3613,"src":"11123:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3554,"name":"uint256","nodeType":"ElementaryTypeName","src":"11123:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3565,"initialValue":{"arguments":[{"arguments":[{"id":3562,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11175:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3561,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11167:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3560,"name":"address","nodeType":"ElementaryTypeName","src":"11167:7:30","typeDescriptions":{}}},"id":3563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11167:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":3557,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"11149:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3556,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"11142:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11142:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"11142:24:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11142:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11123:58:30"},{"assignments":[3567],"declarations":[{"constant":false,"id":3567,"mutability":"mutable","name":"balance1","nodeType":"VariableDeclaration","scope":3613,"src":"11192:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3566,"name":"uint256","nodeType":"ElementaryTypeName","src":"11192:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3577,"initialValue":{"arguments":[{"arguments":[{"id":3574,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"11244:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3573,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11236:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3572,"name":"address","nodeType":"ElementaryTypeName","src":"11236:7:30","typeDescriptions":{}}},"id":3575,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11236:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":3569,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"11218:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3568,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"11211:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":3570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11211:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":3571,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"11211:24:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11211:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11192:58:30"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3578,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"11265:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3579,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11276:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11265:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3581,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"11281:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3582,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11292:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11281:12:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11265:28:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3611,"nodeType":"Block","src":"11384:143:30","statements":[{"expression":{"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3593,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11399:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3595,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":2948,"src":"11399:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11424:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11399:30:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3598,"nodeType":"ExpressionStatement","src":"11399:30:30"},{"expression":{"id":3603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3599,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11444:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3601,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11444:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3602,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11470:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11444:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3604,"nodeType":"ExpressionStatement","src":"11444:27:30"},{"expression":{"id":3609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3605,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11486:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3607,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2942,"src":"11486:25:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11514:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11486:29:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":3610,"nodeType":"ExpressionStatement","src":"11486:29:30"}]},"id":3612,"nodeType":"IfStatement","src":"11261:266:30","trueBody":{"id":3592,"nodeType":"Block","src":"11295:83:30","statements":[{"expression":{"arguments":[{"id":3586,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3542,"src":"11325:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3587,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3544,"src":"11336:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3588,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3555,"src":"11347:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3589,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3567,"src":"11357:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3585,"name":"_mintLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3983,"src":"11310:14:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_int24_$_t_int24_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (int24,int24,uint256,uint256)"}},"id":3590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11310:56:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3591,"nodeType":"ExpressionStatement","src":"11310:56:30"}]}}]},"id":3614,"implemented":true,"kind":"function","modifiers":[],"name":"_adjustLiquidity","nodeType":"FunctionDefinition","parameters":{"id":3545,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3542,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3614,"src":"10986:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3541,"name":"int24","nodeType":"ElementaryTypeName","src":"10986:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3544,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3614,"src":"11003:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3543,"name":"int24","nodeType":"ElementaryTypeName","src":"11003:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"10985:34:30"},"returnParameters":{"id":3546,"nodeType":"ParameterList","parameters":[],"src":"11029:0:30"},"scope":4840,"src":"10960:574:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3839,"nodeType":"Block","src":"11579:2557:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3618,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11612:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3619,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":2948,"src":"11612:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":3620,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11638:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3621,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11638:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":3622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11665:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11638:28:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11612:54:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2061637469766520706f736974696f6e","id":3625,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11681:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_7f8125015117dd75b23ce94a1f1b95a56c6b263752737858dfbd59ad91b03334","typeString":"literal_string \"No active position\""},"value":"No active position"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7f8125015117dd75b23ce94a1f1b95a56c6b263752737858dfbd59ad91b03334","typeString":"literal_string \"No active position\""}],"id":3617,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11590:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11590:122:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3627,"nodeType":"ExpressionStatement","src":"11590:122:30"},{"assignments":[3629],"declarations":[{"constant":false,"id":3629,"mutability":"mutable","name":"currentTokenId","nodeType":"VariableDeclaration","scope":3839,"src":"11723:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3628,"name":"uint256","nodeType":"ElementaryTypeName","src":"11723:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3632,"initialValue":{"expression":{"id":3630,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11748:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3631,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11748:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11723:48:30"},{"assignments":[3634],"declarations":[{"constant":false,"id":3634,"mutability":"mutable","name":"currentLiquidity","nodeType":"VariableDeclaration","scope":3839,"src":"11782:24:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3633,"name":"uint128","nodeType":"ElementaryTypeName","src":"11782:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":3637,"initialValue":{"expression":{"id":3635,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11809:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3636,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2942,"src":"11809:25:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"VariableDeclarationStatement","src":"11782:52:30"},{"expression":{"id":3642,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3638,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11926:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3640,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":2948,"src":"11926:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":3641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"11951:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"11926:30:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3643,"nodeType":"ExpressionStatement","src":"11926:30:30"},{"assignments":[3645],"declarations":[{"constant":false,"id":3645,"mutability":"mutable","name":"_tokenId","nodeType":"VariableDeclaration","scope":3839,"src":"11967:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3644,"name":"uint256","nodeType":"ElementaryTypeName","src":"11967:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3648,"initialValue":{"expression":{"id":3646,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"11986:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"11986:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11967:42:30"},{"expression":{"id":3653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3649,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"12020:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3651,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"12020:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12046:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12020:27:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3654,"nodeType":"ExpressionStatement","src":"12020:27:30"},{"expression":{"id":3659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3655,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"12058:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3657,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2942,"src":"12058:25:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12086:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12058:29:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":3660,"nodeType":"ExpressionStatement","src":"12058:29:30"},{"expression":{"id":3665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3661,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"12098:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3663,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":2944,"src":"12098:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3664,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12126:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12098:29:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3666,"nodeType":"ExpressionStatement","src":"12098:29:30"},{"expression":{"id":3671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":3667,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"12138:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3669,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"12138:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":3670,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12166:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12138:29:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":3672,"nodeType":"ExpressionStatement","src":"12138:29:30"},{"assignments":[3674],"declarations":[{"constant":false,"id":3674,"mutability":"mutable","name":"decreased","nodeType":"VariableDeclaration","scope":3839,"src":"12180:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3673,"name":"bool","nodeType":"ElementaryTypeName","src":"12180:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3676,"initialValue":{"hexValue":"66616c7365","id":3675,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12197:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"12180:22:30"},{"assignments":[3678],"declarations":[{"constant":false,"id":3678,"mutability":"mutable","name":"collected","nodeType":"VariableDeclaration","scope":3839,"src":"12213:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3677,"name":"bool","nodeType":"ElementaryTypeName","src":"12213:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":3680,"initialValue":{"hexValue":"66616c7365","id":3679,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12230:5:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"nodeType":"VariableDeclarationStatement","src":"12213:22:30"},{"assignments":[3682],"declarations":[{"constant":false,"id":3682,"mutability":"mutable","name":"errorMsg","nodeType":"VariableDeclaration","scope":3839,"src":"12246:22:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3681,"name":"string","nodeType":"ElementaryTypeName","src":"12246:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3684,"initialValue":{"hexValue":"","id":3683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12271:2:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"nodeType":"VariableDeclarationStatement","src":"12246:27:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3685,"name":"currentLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"12326:16:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12345:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"12326:20:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3727,"nodeType":"Block","src":"13004:43:30","statements":[{"expression":{"id":3725,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3723,"name":"decreased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"13019:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3724,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13031:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13019:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3726,"nodeType":"ExpressionStatement","src":"13019:16:30"}]},"id":3728,"nodeType":"IfStatement","src":"12322:725:30","trueBody":{"id":3722,"nodeType":"Block","src":"12348:650:30","statements":[{"clauses":[{"block":{"id":3704,"nodeType":"Block","src":"12779:51:30","statements":[{"expression":{"id":3702,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3700,"name":"decreased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"12798:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3701,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12810:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12798:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"ExpressionStatement","src":"12798:16:30"}]},"errorName":"","id":3705,"nodeType":"TryCatchClause","src":"12779:51:30"},{"block":{"id":3713,"nodeType":"Block","src":"12865:52:30","statements":[{"expression":{"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3709,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"12884:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3710,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3707,"src":"12895:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"12884:17:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3712,"nodeType":"ExpressionStatement","src":"12884:17:30"}]},"errorName":"Error","id":3714,"nodeType":"TryCatchClause","parameters":{"id":3708,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3707,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":3714,"src":"12843:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3706,"name":"string","nodeType":"ElementaryTypeName","src":"12843:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"12842:22:30"},"src":"12831:86:30"},{"block":{"id":3719,"nodeType":"Block","src":"12924:63:30","statements":[{"expression":{"id":3717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3715,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"12943:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"4465637265617365206661696c6564","id":3716,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12954:17:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_e65da398349dc5bfa7721072c1d74cc87eff8a511079838a1d19d73d14a822da","typeString":"literal_string \"Decrease failed\""},"value":"Decrease failed"},"src":"12943:28:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3718,"nodeType":"ExpressionStatement","src":"12943:28:30"}]},"errorName":"","id":3720,"nodeType":"TryCatchClause","src":"12918:69:30"}],"externalCall":{"arguments":[{"arguments":[{"id":3692,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"12528:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3693,"name":"currentLiquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3634,"src":"12574:16:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"hexValue":"30","id":3694,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12629:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3695,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12669:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":3696,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12707:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"12707:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3690,"name":"INonfungiblePositionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"12440:27:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INonfungiblePositionManager_$2618_$","typeString":"type(contract INonfungiblePositionManager)"}},"id":3691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"DecreaseLiquidityParams","nodeType":"MemberAccess","referencedDeclaration":2582,"src":"12440:51:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_DecreaseLiquidityParams_$2582_storage_ptr_$","typeString":"type(struct INonfungiblePositionManager.DecreaseLiquidityParams storage pointer)"}},"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenId","liquidity","amount0Min","amount1Min","deadline"],"nodeType":"FunctionCall","src":"12440:306:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_DecreaseLiquidityParams_$2582_memory_ptr","typeString":"struct INonfungiblePositionManager.DecreaseLiquidityParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_DecreaseLiquidityParams_$2582_memory_ptr","typeString":"struct INonfungiblePositionManager.DecreaseLiquidityParams memory"}],"expression":{"id":3688,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"12384:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"id":3689,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"decreaseLiquidity","nodeType":"MemberAccess","referencedDeclaration":2592,"src":"12384:33:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_DecreaseLiquidityParams_$2582_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct INonfungiblePositionManager.DecreaseLiquidityParams memory) payable external returns (uint256,uint256)"}},"id":3699,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12384:381:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":3721,"nodeType":"TryStatement","src":"12363:624:30"}]}},{"assignments":[3730,3732],"declarations":[{"constant":false,"id":3730,"mutability":"mutable","name":"amount0","nodeType":"VariableDeclaration","scope":3839,"src":"13106:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3729,"name":"uint256","nodeType":"ElementaryTypeName","src":"13106:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3732,"mutability":"mutable","name":"amount1","nodeType":"VariableDeclaration","scope":3839,"src":"13123:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3731,"name":"uint256","nodeType":"ElementaryTypeName","src":"13123:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3736,"initialValue":{"components":[{"hexValue":"30","id":3733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13143:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3734,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13146:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"id":3735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"TupleExpression","src":"13142:6:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_rational_0_by_1_$_t_rational_0_by_1_$","typeString":"tuple(int_const 0,int_const 0)"}},"nodeType":"VariableDeclarationStatement","src":"13105:43:30"},{"clauses":[{"block":{"id":3775,"nodeType":"Block","src":"13529:87:30","statements":[{"expression":{"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":3763,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"13545:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3764,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"13554:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3765,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"13544:18:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"components":[{"id":3766,"name":"a0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3759,"src":"13566:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3767,"name":"a1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3761,"src":"13570:2:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":3768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"13565:8:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"src":"13544:29:30","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3770,"nodeType":"ExpressionStatement","src":"13544:29:30"},{"expression":{"id":3773,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3771,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13588:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":3772,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13600:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13588:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3774,"nodeType":"ExpressionStatement","src":"13588:16:30"}]},"errorName":"","id":3776,"nodeType":"TryCatchClause","parameters":{"id":3762,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3759,"mutability":"mutable","name":"a0","nodeType":"VariableDeclaration","scope":3776,"src":"13505:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3758,"name":"uint256","nodeType":"ElementaryTypeName","src":"13505:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3761,"mutability":"mutable","name":"a1","nodeType":"VariableDeclaration","scope":3776,"src":"13517:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3760,"name":"uint256","nodeType":"ElementaryTypeName","src":"13517:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13504:24:30"},"src":"13496:120:30"},{"block":{"id":3792,"nodeType":"Block","src":"13651:77:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3786,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3782,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"13676:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3781,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13670:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3780,"name":"bytes","nodeType":"ElementaryTypeName","src":"13670:5:30","typeDescriptions":{}}},"id":3783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13670:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13670:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13696:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13670:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3791,"nodeType":"IfStatement","src":"13666:50:30","trueBody":{"expression":{"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3787,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"13699:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3788,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3778,"src":"13710:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"13699:17:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3790,"nodeType":"ExpressionStatement","src":"13699:17:30"}}]},"errorName":"Error","id":3793,"nodeType":"TryCatchClause","parameters":{"id":3779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3778,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":3793,"src":"13629:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3777,"name":"string","nodeType":"ElementaryTypeName","src":"13629:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"13628:22:30"},"src":"13617:111:30"},{"block":{"id":3806,"nodeType":"Block","src":"13735:87:30","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3796,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"13760:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3795,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13754:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3794,"name":"bytes","nodeType":"ElementaryTypeName","src":"13754:5:30","typeDescriptions":{}}},"id":3797,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13754:15:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3798,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"13754:22:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":3799,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13780:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"13754:27:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3805,"nodeType":"IfStatement","src":"13750:60:30","trueBody":{"expression":{"id":3803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3801,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"13783:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"436f6c6c656374206661696c6564","id":3802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13794:16:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b12072dd527d2417da6522069697f8a6f3d489041ec6622c421caa2710d78316","typeString":"literal_string \"Collect failed\""},"value":"Collect failed"},"src":"13783:27:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"id":3804,"nodeType":"ExpressionStatement","src":"13783:27:30"}}]},"errorName":"","id":3807,"nodeType":"TryCatchClause","src":"13729:93:30"}],"externalCall":{"arguments":[{"arguments":[{"id":3741,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"13292:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"arguments":[{"id":3744,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"13342:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3743,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13334:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3742,"name":"address","nodeType":"ElementaryTypeName","src":"13334:7:30","typeDescriptions":{}}},"id":3745,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13334:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"arguments":[{"id":3748,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13387:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3747,"name":"uint128","nodeType":"ElementaryTypeName","src":"13387:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3746,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13382:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3749,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13382:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3750,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13382:17:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"arguments":[{"id":3753,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13439:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":3752,"name":"uint128","nodeType":"ElementaryTypeName","src":"13439:7:30","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":3751,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13434:4:30","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":3754,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13434:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":3755,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"13434:17:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"expression":{"id":3739,"name":"INonfungiblePositionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"13218:27:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INonfungiblePositionManager_$2618_$","typeString":"type(contract INonfungiblePositionManager)"}},"id":3740,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"CollectParams","nodeType":"MemberAccess","referencedDeclaration":2601,"src":"13218:41:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_CollectParams_$2601_storage_ptr_$","typeString":"type(struct INonfungiblePositionManager.CollectParams storage pointer)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["tokenId","recipient","amount0Max","amount1Max"],"nodeType":"FunctionCall","src":"13218:253:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_CollectParams_$2601_memory_ptr","typeString":"struct INonfungiblePositionManager.CollectParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_CollectParams_$2601_memory_ptr","typeString":"struct INonfungiblePositionManager.CollectParams memory"}],"expression":{"id":3737,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"13176:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"id":3738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"collect","nodeType":"MemberAccess","referencedDeclaration":2611,"src":"13176:23:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_CollectParams_$2601_memory_ptr_$returns$_t_uint256_$_t_uint256_$","typeString":"function (struct INonfungiblePositionManager.CollectParams memory) payable external returns (uint256,uint256)"}},"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13176:310:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint256)"}},"id":3808,"nodeType":"TryStatement","src":"13159:663:30"},{"condition":{"id":3809,"name":"decreased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"13869:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3820,"nodeType":"IfStatement","src":"13865:87:30","trueBody":{"id":3819,"nodeType":"Block","src":"13880:72:30","statements":[{"clauses":[{"block":{"id":3814,"nodeType":"Block","src":"13930:2:30","statements":[]},"errorName":"","id":3815,"nodeType":"TryCatchClause","src":"13930:2:30"},{"block":{"id":3816,"nodeType":"Block","src":"13939:2:30","statements":[]},"errorName":"","id":3817,"nodeType":"TryCatchClause","src":"13933:8:30"}],"externalCall":{"arguments":[{"id":3812,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"13920:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3810,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"13899:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"id":3811,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"13899:20:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$returns$__$","typeString":"function (uint256) payable external"}},"id":3813,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"13899:30:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3818,"nodeType":"TryStatement","src":"13895:46:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13968:10:30","subExpression":{"id":3821,"name":"decreased","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3674,"src":"13969:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"id":3824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"13982:10:30","subExpression":{"id":3823,"name":"collected","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3678,"src":"13983:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"13968:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3832,"nodeType":"IfStatement","src":"13964:103:30","trueBody":{"id":3831,"nodeType":"Block","src":"13994:73:30","statements":[{"eventCall":{"arguments":[{"id":3827,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"14036:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3828,"name":"errorMsg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3682,"src":"14046:8:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3826,"name":"LiquidityRemoveFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3039,"src":"14014:21:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,string memory)"}},"id":3829,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14014:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3830,"nodeType":"EmitStatement","src":"14009:46:30"}]}},{"eventCall":{"arguments":[{"id":3834,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3645,"src":"14101:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3835,"name":"amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3730,"src":"14111:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3836,"name":"amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3732,"src":"14120:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3833,"name":"LiquidityRemoved","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2999,"src":"14084:16:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,uint256)"}},"id":3837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14084:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3838,"nodeType":"EmitStatement","src":"14079:49:30"}]},"id":3840,"implemented":true,"kind":"function","modifiers":[],"name":"_removeLiquidity","nodeType":"FunctionDefinition","parameters":{"id":3615,"nodeType":"ParameterList","parameters":[],"src":"11567:2:30"},"returnParameters":{"id":3616,"nodeType":"ParameterList","parameters":[],"src":"11579:0:30"},"scope":4840,"src":"11542:2594:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3982,"nodeType":"Block","src":"14302:2130:30","statements":[{"expression":{"arguments":[{"id":3854,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"14321:23:30","subExpression":{"expression":{"id":3852,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"14322:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3853,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":2948,"src":"14322:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f736974696f6e20616c726561647920616374697665","id":3855,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14346:25:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_44869874655bf0887220635de03422dfc5fe91eb11e0815cf64ede1a814a8cfa","typeString":"literal_string \"Position already active\""},"value":"Position already active"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_44869874655bf0887220635de03422dfc5fe91eb11e0815cf64ede1a814a8cfa","typeString":"literal_string \"Position already active\""}],"id":3851,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14313:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3856,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14313:59:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3857,"nodeType":"ExpressionStatement","src":"14313:59:30"},{"assignments":[3861],"declarations":[{"constant":false,"id":3861,"mutability":"mutable","name":"params","nodeType":"VariableDeclaration","scope":3982,"src":"14385:65:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2532_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams"},"typeName":{"id":3860,"name":"INonfungiblePositionManager.MintParams","nodeType":"UserDefinedTypeName","referencedDeclaration":2532,"src":"14385:38:30","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2532_storage_ptr","typeString":"struct INonfungiblePositionManager.MintParams"}},"visibility":"internal"}],"id":3880,"initialValue":{"arguments":[{"id":3864,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"14519:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3865,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"14552:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3866,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"14582:3:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},{"id":3867,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"14615:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3868,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"14654:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3869,"name":"amount0Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"14698:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3870,"name":"amount1Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"14747:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":3871,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14792:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":3872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14824:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"arguments":[{"id":3875,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"14863:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":3874,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14855:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3873,"name":"address","nodeType":"ElementaryTypeName","src":"14855:7:30","typeDescriptions":{}}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"14855:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":3877,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"14897:5:30","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":3878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"14897:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3862,"name":"INonfungiblePositionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2618,"src":"14453:27:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_INonfungiblePositionManager_$2618_$","typeString":"type(contract INonfungiblePositionManager)"}},"id":3863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MintParams","nodeType":"MemberAccess","referencedDeclaration":2532,"src":"14453:38:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_MintParams_$2532_storage_ptr_$","typeString":"type(struct INonfungiblePositionManager.MintParams storage pointer)"}},"id":3879,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":["token0","token1","fee","tickLower","tickUpper","amount0Desired","amount1Desired","amount0Min","amount1Min","recipient","deadline"],"nodeType":"FunctionCall","src":"14453:475:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2532_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams memory"}},"nodeType":"VariableDeclarationStatement","src":"14385:543:30"},{"assignments":[3882],"declarations":[{"constant":false,"id":3882,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":3982,"src":"14941:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3881,"name":"uint256","nodeType":"ElementaryTypeName","src":"14941:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3883,"nodeType":"VariableDeclarationStatement","src":"14941:15:30"},{"assignments":[3885],"declarations":[{"constant":false,"id":3885,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":3982,"src":"14967:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3884,"name":"uint128","nodeType":"ElementaryTypeName","src":"14967:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"id":3886,"nodeType":"VariableDeclarationStatement","src":"14967:17:30"},{"assignments":[3888],"declarations":[{"constant":false,"id":3888,"mutability":"mutable","name":"amount0Actual","nodeType":"VariableDeclaration","scope":3982,"src":"14995:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3887,"name":"uint256","nodeType":"ElementaryTypeName","src":"14995:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3889,"nodeType":"VariableDeclarationStatement","src":"14995:21:30"},{"assignments":[3891],"declarations":[{"constant":false,"id":3891,"mutability":"mutable","name":"amount1Actual","nodeType":"VariableDeclaration","scope":3982,"src":"15027:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3890,"name":"uint256","nodeType":"ElementaryTypeName","src":"15027:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3892,"nodeType":"VariableDeclarationStatement","src":"15027:21:30"},{"clauses":[{"block":{"id":3960,"nodeType":"Block","src":"15240:881:30","statements":[{"expression":{"id":3908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3906,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"15255:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3907,"name":"_tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3898,"src":"15265:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15255:18:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3909,"nodeType":"ExpressionStatement","src":"15255:18:30"},{"expression":{"id":3912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3910,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"15288:9:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3911,"name":"_liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3900,"src":"15300:10:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"15288:22:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"id":3913,"nodeType":"ExpressionStatement","src":"15288:22:30"},{"expression":{"id":3916,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3914,"name":"amount0Actual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3888,"src":"15325:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3915,"name":"_amount0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3902,"src":"15341:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15325:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3917,"nodeType":"ExpressionStatement","src":"15325:24:30"},{"expression":{"id":3920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3918,"name":"amount1Actual","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3891,"src":"15364:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3919,"name":"_amount1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3904,"src":"15380:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"15364:24:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3921,"nodeType":"ExpressionStatement","src":"15364:24:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint128","typeString":"uint128"},"id":3924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3922,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"15409:9:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3923,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"15421:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"15409:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3958,"nodeType":"Block","src":"15849:261:30","statements":[{"clauses":[{"block":{"id":3947,"nodeType":"Block","src":"15902:2:30","statements":[]},"errorName":"","id":3948,"nodeType":"TryCatchClause","src":"15902:2:30"},{"block":{"id":3949,"nodeType":"Block","src":"15911:2:30","statements":[]},"errorName":"","id":3950,"nodeType":"TryCatchClause","src":"15905:8:30"}],"externalCall":{"arguments":[{"id":3945,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"15893:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3943,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"15872:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"id":3944,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"burn","nodeType":"MemberAccess","referencedDeclaration":2617,"src":"15872:20:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_uint256_$returns$__$","typeString":"function (uint256) payable external"}},"id":3946,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15872:29:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3951,"nodeType":"TryStatement","src":"15868:45:30"},{"eventCall":{"arguments":[{"id":3953,"name":"amount0Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"15978:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3954,"name":"amount1Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"16015:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"5a65726f206c6971756964697479206d696e746564","id":3955,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16052:23:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_ba3f67c9f8db8f9ad7578a5b5bfe72d10e3ead8623bd80de22ff704bc271202b","typeString":"literal_string \"Zero liquidity minted\""},"value":"Zero liquidity minted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_ba3f67c9f8db8f9ad7578a5b5bfe72d10e3ead8623bd80de22ff704bc271202b","typeString":"literal_string \"Zero liquidity minted\""}],"id":3952,"name":"LiquidityMintFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"15936:19:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":3956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15936:158:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3957,"nodeType":"EmitStatement","src":"15931:163:30"}]},"id":3959,"nodeType":"IfStatement","src":"15405:705:30","trueBody":{"id":3942,"nodeType":"Block","src":"15424:419:30","statements":[{"expression":{"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3925,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"15443:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":3927,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"15492:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3928,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"15522:9:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"id":3929,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"15554:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3930,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"15586:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"hexValue":"74727565","id":3931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"15618:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint128","typeString":"uint128"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3926,"name":"Position","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2949,"src":"15461:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Position_$2949_storage_ptr_$","typeString":"type(struct PredictiveLiquidityManagerFinal.Position storage pointer)"}},"id":3932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15461:180:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_memory_ptr","typeString":"struct PredictiveLiquidityManagerFinal.Position memory"}},"src":"15443:198:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":3934,"nodeType":"ExpressionStatement","src":"15443:198:30"},{"eventCall":{"arguments":[{"id":3936,"name":"tokenId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3882,"src":"15705:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3937,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3842,"src":"15735:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3938,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3844,"src":"15767:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":3939,"name":"liquidity","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3885,"src":"15799:9:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_uint128","typeString":"uint128"}],"id":3935,"name":"LiquidityAdjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2991,"src":"15665:17:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_int24_$_t_int24_$_t_uint128_$returns$__$","typeString":"function (uint256,int24,int24,uint128)"}},"id":3940,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15665:162:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3941,"nodeType":"EmitStatement","src":"15660:167:30"}]}}]},"errorName":"","id":3961,"nodeType":"TryCatchClause","parameters":{"id":3905,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3898,"mutability":"mutable","name":"_tokenId","nodeType":"VariableDeclaration","scope":3961,"src":"15117:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3897,"name":"uint256","nodeType":"ElementaryTypeName","src":"15117:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3900,"mutability":"mutable","name":"_liquidity","nodeType":"VariableDeclaration","scope":3961,"src":"15148:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":3899,"name":"uint128","nodeType":"ElementaryTypeName","src":"15148:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":3902,"mutability":"mutable","name":"_amount0","nodeType":"VariableDeclaration","scope":3961,"src":"15181:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3901,"name":"uint256","nodeType":"ElementaryTypeName","src":"15181:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3904,"mutability":"mutable","name":"_amount1","nodeType":"VariableDeclaration","scope":3961,"src":"15212:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3903,"name":"uint256","nodeType":"ElementaryTypeName","src":"15212:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15102:137:30"},"src":"15094:1027:30"},{"block":{"id":3971,"nodeType":"Block","src":"16156:91:30","statements":[{"eventCall":{"arguments":[{"id":3966,"name":"amount0Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"16196:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3967,"name":"amount1Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"16212:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3968,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3963,"src":"16228:6:30","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3965,"name":"LiquidityMintFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"16176:19:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":3969,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16176:59:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3970,"nodeType":"EmitStatement","src":"16171:64:30"}]},"errorName":"Error","id":3972,"nodeType":"TryCatchClause","parameters":{"id":3964,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3963,"mutability":"mutable","name":"reason","nodeType":"VariableDeclaration","scope":3972,"src":"16134:20:30","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3962,"name":"string","nodeType":"ElementaryTypeName","src":"16134:6:30","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"16133:22:30"},"src":"16122:125:30"},{"block":{"id":3979,"nodeType":"Block","src":"16254:171:30","statements":[{"eventCall":{"arguments":[{"id":3974,"name":"amount0Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3846,"src":"16312:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3975,"name":"amount1Desired","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3848,"src":"16345:14:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"556e6b6e6f776e206d696e74206572726f72","id":3976,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16378:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_34cbab512ecc1bb9723527c06813bbc156590fb1ae4cb863d2cf2d7cc2530654","typeString":"literal_string \"Unknown mint error\""},"value":"Unknown mint error"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_34cbab512ecc1bb9723527c06813bbc156590fb1ae4cb863d2cf2d7cc2530654","typeString":"literal_string \"Unknown mint error\""}],"id":3973,"name":"LiquidityMintFailed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3033,"src":"16274:19:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$","typeString":"function (uint256,uint256,string memory)"}},"id":3977,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16274:139:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3978,"nodeType":"EmitStatement","src":"16269:144:30"}]},"errorName":"","id":3980,"nodeType":"TryCatchClause","src":"16248:177:30"}],"externalCall":{"arguments":[{"id":3895,"name":"params","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3861,"src":"15086:6:30","typeDescriptions":{"typeIdentifier":"t_struct$_MintParams_$2532_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_MintParams_$2532_memory_ptr","typeString":"struct INonfungiblePositionManager.MintParams memory"}],"expression":{"id":3893,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"15065:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}},"id":3894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mint","nodeType":"MemberAccess","referencedDeclaration":2546,"src":"15065:20:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_struct$_MintParams_$2532_memory_ptr_$returns$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$","typeString":"function (struct INonfungiblePositionManager.MintParams memory) payable external returns (uint256,uint128,uint256,uint256)"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"15065:28:30","tryCall":true,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint128_$_t_uint256_$_t_uint256_$","typeString":"tuple(uint256,uint128,uint256,uint256)"}},"id":3981,"nodeType":"TryStatement","src":"15061:1364:30"}]},"id":3983,"implemented":true,"kind":"function","modifiers":[],"name":"_mintLiquidity","nodeType":"FunctionDefinition","parameters":{"id":3849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3842,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":3983,"src":"14178:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3841,"name":"int24","nodeType":"ElementaryTypeName","src":"14178:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":3983,"src":"14204:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3843,"name":"int24","nodeType":"ElementaryTypeName","src":"14204:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"amount0Desired","nodeType":"VariableDeclaration","scope":3983,"src":"14230:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3845,"name":"uint256","nodeType":"ElementaryTypeName","src":"14230:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3848,"mutability":"mutable","name":"amount1Desired","nodeType":"VariableDeclaration","scope":3983,"src":"14263:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3847,"name":"uint256","nodeType":"ElementaryTypeName","src":"14263:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14167:125:30"},"returnParameters":{"id":3850,"nodeType":"ParameterList","parameters":[],"src":"14302:0:30"},"scope":4840,"src":"14144:2288:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4043,"nodeType":"Block","src":"16607:394:30","statements":[{"assignments":[3993],"declarations":[{"constant":false,"id":3993,"mutability":"mutable","name":"halfWidth","nodeType":"VariableDeclaration","scope":4043,"src":"16618:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3992,"name":"int24","nodeType":"ElementaryTypeName","src":"16618:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"id":4000,"initialValue":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":3999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3994,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"16636:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"arguments":[{"id":3997,"name":"rangeWidthMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"16656:20:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":3996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16650:5:30","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":3995,"name":"int24","nodeType":"ElementaryTypeName","src":"16650:5:30","typeDescriptions":{}}},"id":3998,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"16650:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16636:41:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"VariableDeclarationStatement","src":"16618:59:30"},{"expression":{"id":4010,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4001,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"16690:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4009,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4007,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4004,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4002,"name":"targetCenterTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"16703:16:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4003,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"16722:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16703:30:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":4005,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16702:32:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4006,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"16737:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16702:46:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":4008,"name":"halfWidth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"16751:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16702:58:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16690:70:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4011,"nodeType":"ExpressionStatement","src":"16690:70:30"},{"expression":{"id":4021,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4012,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"16771:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4020,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4015,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4013,"name":"targetCenterTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3985,"src":"16784:16:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":4014,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"16803:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16784:30:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}}],"id":4016,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"16783:32:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":4017,"name":"tickSpacing","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"16818:11:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16783:46:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":4019,"name":"halfWidth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3993,"src":"16832:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16783:58:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16771:70:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4022,"nodeType":"ExpressionStatement","src":"16771:70:30"},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4026,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4023,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"16858:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":4024,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"16870:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$2388_$","typeString":"type(library TickMath)"}},"id":4025,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_TICK","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"16870:17:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16858:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4032,"nodeType":"IfStatement","src":"16854:64:30","trueBody":{"expression":{"id":4030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4027,"name":"tickLower","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3988,"src":"16889:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4028,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"16901:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$2388_$","typeString":"type(library TickMath)"}},"id":4029,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MIN_TICK","nodeType":"MemberAccess","referencedDeclaration":1861,"src":"16901:17:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16889:29:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4031,"nodeType":"ExpressionStatement","src":"16889:29:30"}},{"condition":{"commonType":{"typeIdentifier":"t_int24","typeString":"int24"},"id":4036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4033,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"16933:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":4034,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"16945:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$2388_$","typeString":"type(library TickMath)"}},"id":4035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_TICK","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"16945:17:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16933:29:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4042,"nodeType":"IfStatement","src":"16929:64:30","trueBody":{"expression":{"id":4040,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4037,"name":"tickUpper","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3990,"src":"16964:9:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":4038,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"16976:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$2388_$","typeString":"type(library TickMath)"}},"id":4039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"MAX_TICK","nodeType":"MemberAccess","referencedDeclaration":1866,"src":"16976:17:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"16964:29:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":4041,"nodeType":"ExpressionStatement","src":"16964:29:30"}}]},"id":4044,"implemented":true,"kind":"function","modifiers":[],"name":"_calculateTicks","nodeType":"FunctionDefinition","parameters":{"id":3986,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3985,"mutability":"mutable","name":"targetCenterTick","nodeType":"VariableDeclaration","scope":4044,"src":"16520:22:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3984,"name":"int24","nodeType":"ElementaryTypeName","src":"16520:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"16509:40:30"},"returnParameters":{"id":3991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3988,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":4044,"src":"16573:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3987,"name":"int24","nodeType":"ElementaryTypeName","src":"16573:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":3990,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":4044,"src":"16590:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":3989,"name":"int24","nodeType":"ElementaryTypeName","src":"16590:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"16572:34:30"},"scope":4840,"src":"16485:516:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4080,"nodeType":"Block","src":"17137:223:30","statements":[{"assignments":[4052],"declarations":[{"constant":false,"id":4052,"mutability":"mutable","name":"poolAddress","nodeType":"VariableDeclaration","scope":4080,"src":"17148:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4051,"name":"address","nodeType":"ElementaryTypeName","src":"17148:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":4059,"initialValue":{"arguments":[{"id":4055,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"17186:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4056,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"17194:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4057,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"17202:3:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":4053,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"17170:7:30","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"}},"id":4054,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":1356,"src":"17170:15:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17170:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"17148:58:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4061,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"17225:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4064,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17248:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17240:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4062,"name":"address","nodeType":"ElementaryTypeName","src":"17240:7:30","typeDescriptions":{}}},"id":4065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17240:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"17225:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"506f6f6c20646f65736e2774206578697374","id":4067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17252:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_87e7f60b8ff0f06b751ad82b250a560c5b632939464075923cf9b80024908ad5","typeString":"literal_string \"Pool doesn't exist\""},"value":"Pool doesn't exist"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_87e7f60b8ff0f06b751ad82b250a560c5b632939464075923cf9b80024908ad5","typeString":"literal_string \"Pool doesn't exist\""}],"id":4060,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17217:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17217:56:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4069,"nodeType":"ExpressionStatement","src":"17217:56:30"},{"expression":{"id":4078,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"components":[{"id":4070,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4047,"src":"17285:12:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},{"id":4071,"name":"tick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4049,"src":"17299:4:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},null,null,null,null,null],"id":4072,"isConstant":false,"isInlineArray":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"TupleExpression","src":"17284:30:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_int24_$__$__$__$__$__$","typeString":"tuple(uint160,int24,,,,,)"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4074,"name":"poolAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4052,"src":"17332:11:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4073,"name":"IUniswapV3Pool","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1405,"src":"17317:14:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IUniswapV3Pool_$1405_$","typeString":"type(contract IUniswapV3Pool)"}},"id":4075,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17317:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Pool_$1405","typeString":"contract IUniswapV3Pool"}},"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"slot0","nodeType":"MemberAccess","referencedDeclaration":1766,"src":"17317:33:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$__$returns$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$","typeString":"function () view external returns (uint160,int24,uint16,uint16,uint16,uint8,bool)"}},"id":4077,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17317:35:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint160_$_t_int24_$_t_uint16_$_t_uint16_$_t_uint16_$_t_uint8_$_t_bool_$","typeString":"tuple(uint160,int24,uint16,uint16,uint16,uint8,bool)"}},"src":"17284:68:30","typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4079,"nodeType":"ExpressionStatement","src":"17284:68:30"}]},"id":4081,"implemented":true,"kind":"function","modifiers":[],"name":"_getCurrentSqrtPriceAndTick","nodeType":"FunctionDefinition","parameters":{"id":4045,"nodeType":"ParameterList","parameters":[],"src":"17045:2:30"},"returnParameters":{"id":4050,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4047,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":4081,"src":"17098:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4046,"name":"uint160","nodeType":"ElementaryTypeName","src":"17098:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"},{"constant":false,"id":4049,"mutability":"mutable","name":"tick","nodeType":"VariableDeclaration","scope":4081,"src":"17120:10:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4048,"name":"int24","nodeType":"ElementaryTypeName","src":"17120:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"17097:34:30"},"scope":4840,"src":"17009:351:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4163,"nodeType":"Block","src":"17442:611:30","statements":[{"assignments":[4089],"declarations":[{"constant":false,"id":4089,"mutability":"mutable","name":"priceForSqrt","nodeType":"VariableDeclaration","scope":4163,"src":"17453:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4088,"name":"uint256","nodeType":"ElementaryTypeName","src":"17453:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4090,"nodeType":"VariableDeclarationStatement","src":"17453:20:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4093,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4091,"name":"token1Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"17488:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4092,"name":"token0Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17506:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"17488:32:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4141,"nodeType":"Block","src":"17703:175:30","statements":[{"assignments":[4119],"declarations":[{"constant":false,"id":4119,"mutability":"mutable","name":"factor","nodeType":"VariableDeclaration","scope":4141,"src":"17718:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4118,"name":"uint256","nodeType":"ElementaryTypeName","src":"17718:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4133,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4132,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4120,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17735:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"arguments":[{"arguments":[{"id":4128,"name":"token1Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"17795:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4127,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17787:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4126,"name":"uint256","nodeType":"ElementaryTypeName","src":"17787:7:30","typeDescriptions":{}}},"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17787:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4123,"name":"token0Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17767:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4122,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17759:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4121,"name":"uint256","nodeType":"ElementaryTypeName","src":"17759:7:30","typeDescriptions":{}}},"id":4124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17759:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":325,"src":"17759:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4130,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17759:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4131,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17758:54:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17735:77:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17718:94:30"},{"expression":{"id":4139,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4134,"name":"priceForSqrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"17827:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4137,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4119,"src":"17859:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4135,"name":"priceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"17842:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4136,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":359,"src":"17842:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4138,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17842:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17827:39:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4140,"nodeType":"ExpressionStatement","src":"17827:39:30"}]},"id":4142,"nodeType":"IfStatement","src":"17484:394:30","trueBody":{"id":4117,"nodeType":"Block","src":"17522:175:30","statements":[{"assignments":[4095],"declarations":[{"constant":false,"id":4095,"mutability":"mutable","name":"factor","nodeType":"VariableDeclaration","scope":4117,"src":"17537:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4094,"name":"uint256","nodeType":"ElementaryTypeName","src":"17537:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4109,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4108,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17554:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"arguments":[{"arguments":[{"id":4104,"name":"token0Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"17614:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4103,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17606:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4102,"name":"uint256","nodeType":"ElementaryTypeName","src":"17606:7:30","typeDescriptions":{}}},"id":4105,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17606:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4099,"name":"token1Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"17586:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4098,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17578:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4097,"name":"uint256","nodeType":"ElementaryTypeName","src":"17578:7:30","typeDescriptions":{}}},"id":4100,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17578:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":325,"src":"17578:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4106,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17578:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4107,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"17577:54:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17554:77:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"17537:94:30"},{"expression":{"id":4115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4110,"name":"priceForSqrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"17646:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4113,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4095,"src":"17678:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4111,"name":"priceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4083,"src":"17661:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"17661:16:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17661:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"17646:39:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4116,"nodeType":"ExpressionStatement","src":"17646:39:30"}]}},{"assignments":[4144],"declarations":[{"constant":false,"id":4144,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":4163,"src":"17890:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4143,"name":"uint160","nodeType":"ElementaryTypeName","src":"17890:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"id":4157,"initialValue":{"arguments":[{"arguments":[{"commonType":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"},"id":4154,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":4152,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17967:1:30","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3936","id":4153,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17972:2:30","typeDescriptions":{"typeIdentifier":"t_rational_96_by_1","typeString":"int_const 96"},"value":"96"},"src":"17967:7:30","typeDescriptions":{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_79228162514264337593543950336_by_1","typeString":"int_const 79228162514264337593543950336"}],"expression":{"arguments":[{"id":4149,"name":"priceForSqrt","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4089,"src":"17949:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4147,"name":"SqrtMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5031,"src":"17935:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_SqrtMath_$5031_$","typeString":"type(library SqrtMath)"}},"id":4148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sqrt","nodeType":"MemberAccess","referencedDeclaration":4978,"src":"17935:13:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4150,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17935:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":359,"src":"17935:31:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17935:40:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17913:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":4145,"name":"uint160","nodeType":"ElementaryTypeName","src":"17913:7:30","typeDescriptions":{}}},"id":4156,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"17913:73:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"nodeType":"VariableDeclarationStatement","src":"17890:96:30"},{"expression":{"arguments":[{"id":4160,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4144,"src":"18032:12:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"expression":{"id":4158,"name":"TickMath","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2388,"src":"18004:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_TickMath_$2388_$","typeString":"type(library TickMath)"}},"id":4159,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getTickAtSqrtRatio","nodeType":"MemberAccess","referencedDeclaration":2387,"src":"18004:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint160_$returns$_t_int24_$","typeString":"function (uint160) pure returns (int24)"}},"id":4161,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18004:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"functionReturnParameters":4087,"id":4162,"nodeType":"Return","src":"17997:48:30"}]},"id":4164,"implemented":true,"kind":"function","modifiers":[],"name":"_priceToTick","nodeType":"FunctionDefinition","parameters":{"id":4084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4083,"mutability":"mutable","name":"priceDecimal","nodeType":"VariableDeclaration","scope":4164,"src":"17390:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4082,"name":"uint256","nodeType":"ElementaryTypeName","src":"17390:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17389:22:30"},"returnParameters":{"id":4087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4086,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4164,"src":"17435:5:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4085,"name":"int24","nodeType":"ElementaryTypeName","src":"17435:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"17434:7:30"},"scope":4840,"src":"17368:685:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4242,"nodeType":"Block","src":"18174:552:30","statements":[{"assignments":[4172],"declarations":[{"constant":false,"id":4172,"mutability":"mutable","name":"ratioX192","nodeType":"VariableDeclaration","scope":4242,"src":"18185:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4171,"name":"uint256","nodeType":"ElementaryTypeName","src":"18185:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4183,"initialValue":{"arguments":[{"arguments":[{"id":4180,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"18239:12:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4179,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18231:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4178,"name":"uint256","nodeType":"ElementaryTypeName","src":"18231:7:30","typeDescriptions":{}}},"id":4181,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18231:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4175,"name":"sqrtPriceX96","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4166,"src":"18213:12:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":4174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18205:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4173,"name":"uint256","nodeType":"ElementaryTypeName","src":"18205:7:30","typeDescriptions":{}}},"id":4176,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18205:21:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":359,"src":"18205:25:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4182,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18205:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18185:68:30"},{"assignments":[4185],"declarations":[{"constant":false,"id":4185,"mutability":"mutable","name":"priceUnadjusted","nodeType":"VariableDeclaration","scope":4242,"src":"18264:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4184,"name":"uint256","nodeType":"ElementaryTypeName","src":"18264:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4189,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4186,"name":"ratioX192","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"18290:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313932","id":4187,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18303:3:30","typeDescriptions":{"typeIdentifier":"t_rational_192_by_1","typeString":"int_const 192"},"value":"192"},"src":"18290:16:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18264:42:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint8","typeString":"uint8"},"id":4192,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4190,"name":"token1Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"18323:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4191,"name":"token0Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"18341:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"18323:32:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4240,"nodeType":"Block","src":"18541:178:30","statements":[{"assignments":[4218],"declarations":[{"constant":false,"id":4218,"mutability":"mutable","name":"factor","nodeType":"VariableDeclaration","scope":4240,"src":"18556:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4217,"name":"uint256","nodeType":"ElementaryTypeName","src":"18556:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4232,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4231,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18573:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"arguments":[{"arguments":[{"id":4227,"name":"token1Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"18633:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4226,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18625:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4225,"name":"uint256","nodeType":"ElementaryTypeName","src":"18625:7:30","typeDescriptions":{}}},"id":4228,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18625:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4222,"name":"token0Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"18605:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4221,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18597:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4220,"name":"uint256","nodeType":"ElementaryTypeName","src":"18597:7:30","typeDescriptions":{}}},"id":4223,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18597:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":325,"src":"18597:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18597:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4230,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18596:54:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18573:77:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18556:94:30"},{"expression":{"id":4238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4233,"name":"priceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"18665:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4236,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4218,"src":"18700:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4234,"name":"priceUnadjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"18680:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"18680:19:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18680:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18665:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4239,"nodeType":"ExpressionStatement","src":"18665:42:30"}]},"id":4241,"nodeType":"IfStatement","src":"18319:400:30","trueBody":{"id":4216,"nodeType":"Block","src":"18357:178:30","statements":[{"assignments":[4194],"declarations":[{"constant":false,"id":4194,"mutability":"mutable","name":"factor","nodeType":"VariableDeclaration","scope":4216,"src":"18372:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4193,"name":"uint256","nodeType":"ElementaryTypeName","src":"18372:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4208,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":4195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"18389:2:30","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"components":[{"arguments":[{"arguments":[{"id":4203,"name":"token0Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2930,"src":"18449:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4202,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18441:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4201,"name":"uint256","nodeType":"ElementaryTypeName","src":"18441:7:30","typeDescriptions":{}}},"id":4204,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18441:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4198,"name":"token1Decimals","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2932,"src":"18421:14:30","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":4197,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18413:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4196,"name":"uint256","nodeType":"ElementaryTypeName","src":"18413:7:30","typeDescriptions":{}}},"id":4199,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18413:23:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":325,"src":"18413:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4205,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18413:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4206,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"18412:54:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18389:77:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"18372:94:30"},{"expression":{"id":4214,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4209,"name":"priceDecimal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4169,"src":"18481:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":4212,"name":"factor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4194,"src":"18516:6:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4210,"name":"priceUnadjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4185,"src":"18496:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":359,"src":"18496:19:30","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4213,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"18496:27:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"18481:42:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4215,"nodeType":"ExpressionStatement","src":"18481:42:30"}]}}]},"id":4243,"implemented":true,"kind":"function","modifiers":[],"name":"_sqrtPriceX96ToPrice","nodeType":"FunctionDefinition","parameters":{"id":4167,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4166,"mutability":"mutable","name":"sqrtPriceX96","nodeType":"VariableDeclaration","scope":4243,"src":"18101:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":4165,"name":"uint160","nodeType":"ElementaryTypeName","src":"18101:7:30","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"18090:38:30"},"returnParameters":{"id":4170,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4169,"mutability":"mutable","name":"priceDecimal","nodeType":"VariableDeclaration","scope":4243,"src":"18152:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4168,"name":"uint256","nodeType":"ElementaryTypeName","src":"18152:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18151:22:30"},"scope":4840,"src":"18061:665:30","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4267,"nodeType":"Block","src":"18986:212:30","statements":[{"eventCall":{"arguments":[{"id":4259,"name":"_actualPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4245,"src":"19034:12:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4260,"name":"_predictedPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4247,"src":"19061:15:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":4261,"name":"_currentTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4249,"src":"19091:12:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4262,"name":"_predictedTick","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"19118:14:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"id":4263,"name":"_adjusted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4253,"src":"19147:9:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"id":4264,"name":"_gasUsed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4255,"src":"19171:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_int24","typeString":"int24"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4258,"name":"OperationReported","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2981,"src":"19002:17:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$_t_int24_$_t_int24_$_t_bool_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256,int24,int24,bool,uint256)"}},"id":4265,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19002:188:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4266,"nodeType":"EmitStatement","src":"18997:193:30"}]},"id":4268,"implemented":true,"kind":"function","modifiers":[],"name":"_emitOperationReported","nodeType":"FunctionDefinition","parameters":{"id":4256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4245,"mutability":"mutable","name":"_actualPrice","nodeType":"VariableDeclaration","scope":4268,"src":"18803:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4244,"name":"uint256","nodeType":"ElementaryTypeName","src":"18803:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4247,"mutability":"mutable","name":"_predictedPrice","nodeType":"VariableDeclaration","scope":4268,"src":"18834:23:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4246,"name":"uint256","nodeType":"ElementaryTypeName","src":"18834:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4249,"mutability":"mutable","name":"_currentTick","nodeType":"VariableDeclaration","scope":4268,"src":"18868:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4248,"name":"int24","nodeType":"ElementaryTypeName","src":"18868:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4251,"mutability":"mutable","name":"_predictedTick","nodeType":"VariableDeclaration","scope":4268,"src":"18897:20:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4250,"name":"int24","nodeType":"ElementaryTypeName","src":"18897:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4253,"mutability":"mutable","name":"_adjusted","nodeType":"VariableDeclaration","scope":4268,"src":"18928:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4252,"name":"bool","nodeType":"ElementaryTypeName","src":"18928:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4255,"mutability":"mutable","name":"_gasUsed","nodeType":"VariableDeclaration","scope":4268,"src":"18953:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4254,"name":"uint256","nodeType":"ElementaryTypeName","src":"18953:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"18792:184:30"},"returnParameters":{"id":4257,"nodeType":"ParameterList","parameters":[],"src":"18986:0:30"},"scope":4840,"src":"18761:437:30","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"baseFunctions":[1418],"body":{"id":4317,"nodeType":"Block","src":"19399:353:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19432:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"19432:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"id":4283,"name":"positionManager","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"19454:15:30","typeDescriptions":{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_INonfungiblePositionManager_$2618","typeString":"contract INonfungiblePositionManager"}],"id":4282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19446:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4281,"name":"address","nodeType":"ElementaryTypeName","src":"19446:7:30","typeDescriptions":{}}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19446:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"19432:38:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"43616c6c6261636b2073656e646572206d69736d61746368","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19485:26:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_1f51ff47eb13ce7682ffc5c6a8dbf2cc8251a06f9a3b24b891be498a64ef76b7","typeString":"literal_string \"Callback sender mismatch\""},"value":"Callback sender mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_1f51ff47eb13ce7682ffc5c6a8dbf2cc8251a06f9a3b24b891be498a64ef76b7","typeString":"literal_string \"Callback sender mismatch\""}],"id":4278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19410:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19410:112:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4288,"nodeType":"ExpressionStatement","src":"19410:112:30"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4291,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4289,"name":"amount0Owed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"19539:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4290,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19553:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19539:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4302,"nodeType":"IfStatement","src":"19535:100:30","trueBody":{"id":4301,"nodeType":"Block","src":"19556:79:30","statements":[{"expression":{"arguments":[{"expression":{"id":4296,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19599:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4297,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"19599:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4298,"name":"amount0Owed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4270,"src":"19611:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4293,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"19578:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4292,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"19571:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19571:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4295,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":588,"src":"19571:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4299,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19571:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4300,"nodeType":"ExpressionStatement","src":"19571:52:30"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4303,"name":"amount1Owed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"19649:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4304,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19663:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19649:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4316,"nodeType":"IfStatement","src":"19645:100:30","trueBody":{"id":4315,"nodeType":"Block","src":"19666:79:30","statements":[{"expression":{"arguments":[{"expression":{"id":4310,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19709:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4311,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"19709:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4312,"name":"amount1Owed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4272,"src":"19721:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4307,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"19688:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4306,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"19681:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19681:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":588,"src":"19681:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4313,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19681:52:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4314,"nodeType":"ExpressionStatement","src":"19681:52:30"}]}}]},"functionSelector":"d3487997","id":4318,"implemented":true,"kind":"function","modifiers":[],"name":"uniswapV3MintCallback","nodeType":"FunctionDefinition","overrides":{"id":4276,"nodeType":"OverrideSpecifier","overrides":[],"src":"19390:8:30"},"parameters":{"id":4275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4270,"mutability":"mutable","name":"amount0Owed","nodeType":"VariableDeclaration","scope":4318,"src":"19288:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4269,"name":"uint256","nodeType":"ElementaryTypeName","src":"19288:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4272,"mutability":"mutable","name":"amount1Owed","nodeType":"VariableDeclaration","scope":4318,"src":"19318:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4271,"name":"uint256","nodeType":"ElementaryTypeName","src":"19318:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4274,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4318,"src":"19348:14:30","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":4273,"name":"bytes","nodeType":"ElementaryTypeName","src":"19348:5:30","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"19277:103:30"},"returnParameters":{"id":4277,"nodeType":"ParameterList","parameters":[],"src":"19399:0:30"},"scope":4840,"src":"19247:505:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4321,"nodeType":"Block","src":"19822:2:30","statements":[]},"id":4322,"implemented":true,"kind":"receive","modifiers":[],"name":"","nodeType":"FunctionDefinition","parameters":{"id":4319,"nodeType":"ParameterList","parameters":[],"src":"19802:2:30"},"returnParameters":{"id":4320,"nodeType":"ParameterList","parameters":[],"src":"19822:0:30"},"scope":4840,"src":"19795:29:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4349,"nodeType":"Block","src":"19894:135:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":4328,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"19921:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4327,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19913:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4326,"name":"address","nodeType":"ElementaryTypeName","src":"19913:7:30","typeDescriptions":{}}},"id":4329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19913:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"19913:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4331,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"19937:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"19913:25:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f2045544820746f20726566756e64","id":4333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19940:18:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_8add2de00d7b9d85843872167b04166d8faa6b5d9abddab527403555bd1de776","typeString":"literal_string \"No ETH to refund\""},"value":"No ETH to refund"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8add2de00d7b9d85843872167b04166d8faa6b5d9abddab527403555bd1de776","typeString":"literal_string \"No ETH to refund\""}],"id":4325,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19905:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4334,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19905:54:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4335,"nodeType":"ExpressionStatement","src":"19905:54:30"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":4344,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20007:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4343,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19999:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4342,"name":"address","nodeType":"ElementaryTypeName","src":"19999:7:30","typeDescriptions":{}}},"id":4345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19999:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"19999:21:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"expression":{"id":4338,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"19978:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4339,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"19978:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"id":4337,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19970:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4336,"name":"address","nodeType":"ElementaryTypeName","src":"19970:8:30","stateMutability":"payable","typeDescriptions":{}}},"id":4340,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19970:19:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4341,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"19970:28:30","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"19970:51:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4348,"nodeType":"ExpressionStatement","src":"19970:51:30"}]},"functionSelector":"12210e8a","id":4350,"implemented":true,"kind":"function","modifiers":[],"name":"refundETH","nodeType":"FunctionDefinition","parameters":{"id":4323,"nodeType":"ParameterList","parameters":[],"src":"19874:2:30"},"returnParameters":{"id":4324,"nodeType":"ParameterList","parameters":[],"src":"19894:0:30"},"scope":4840,"src":"19856:173:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4398,"nodeType":"Block","src":"20175:264:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4362,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"20194:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20215:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4364,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20207:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4363,"name":"address","nodeType":"ElementaryTypeName","src":"20207:7:30","typeDescriptions":{}}},"id":4366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20207:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20194:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":4368,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20219:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":4361,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20186:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4369,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20186:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4370,"nodeType":"ExpressionStatement","src":"20186:53:30"},{"assignments":[4372],"declarations":[{"constant":false,"id":4372,"mutability":"mutable","name":"balance","nodeType":"VariableDeclaration","scope":4398,"src":"20250:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4371,"name":"uint256","nodeType":"ElementaryTypeName","src":"20250:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4382,"initialValue":{"arguments":[{"arguments":[{"id":4379,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20300:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4378,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20292:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4377,"name":"address","nodeType":"ElementaryTypeName","src":"20292:7:30","typeDescriptions":{}}},"id":4380,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20292:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":4374,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"20275:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4373,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"20268:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20268:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4376,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"20268:23:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20268:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20250:56:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4386,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4384,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"20325:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4385,"name":"amountMinimum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4354,"src":"20336:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20325:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4387,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20351:22:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20317:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4388,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20317:57:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4389,"nodeType":"ExpressionStatement","src":"20317:57:30"},{"expression":{"arguments":[{"id":4394,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4356,"src":"20412:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4395,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4372,"src":"20423:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4391,"name":"token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4352,"src":"20392:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4390,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"20385:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20385:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":588,"src":"20385:26:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20385:46:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4397,"nodeType":"ExpressionStatement","src":"20385:46:30"}]},"functionSelector":"df2ab5bb","id":4399,"implemented":true,"kind":"function","modifiers":[{"id":4359,"modifierName":{"id":4358,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"20165:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"20165:9:30"}],"name":"sweepToken","nodeType":"FunctionDefinition","parameters":{"id":4357,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4352,"mutability":"mutable","name":"token","nodeType":"VariableDeclaration","scope":4399,"src":"20067:13:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4351,"name":"address","nodeType":"ElementaryTypeName","src":"20067:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4354,"mutability":"mutable","name":"amountMinimum","nodeType":"VariableDeclaration","scope":4399,"src":"20091:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4353,"name":"uint256","nodeType":"ElementaryTypeName","src":"20091:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4356,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":4399,"src":"20123:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4355,"name":"address","nodeType":"ElementaryTypeName","src":"20123:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20056:91:30"},"returnParameters":{"id":4360,"nodeType":"ParameterList","parameters":[],"src":"20175:0:30"},"scope":4840,"src":"20037:402:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4460,"nodeType":"Block","src":"20552:349:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4412,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4407,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"20571:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4410,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20588:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20580:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4408,"name":"address","nodeType":"ElementaryTypeName","src":"20580:7:30","typeDescriptions":{}}},"id":4411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20580:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20571:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"5745544839206e6f7420736574","id":4413,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20592:15:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_b39775a60751529ff5cba1ab02f690a6255c8af3b19f825012d2298820e7f489","typeString":"literal_string \"WETH9 not set\""},"value":"WETH9 not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b39775a60751529ff5cba1ab02f690a6255c8af3b19f825012d2298820e7f489","typeString":"literal_string \"WETH9 not set\""}],"id":4406,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20563:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4414,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20563:45:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4415,"nodeType":"ExpressionStatement","src":"20563:45:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4422,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4417,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"20627:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"20648:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4419,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20640:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4418,"name":"address","nodeType":"ElementaryTypeName","src":"20640:7:30","typeDescriptions":{}}},"id":4421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20640:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"20627:23:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e74","id":4423,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20652:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""},"value":"Invalid recipient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d","typeString":"literal_string \"Invalid recipient\""}],"id":4416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20619:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20619:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4425,"nodeType":"ExpressionStatement","src":"20619:53:30"},{"assignments":[4427],"declarations":[{"constant":false,"id":4427,"mutability":"mutable","name":"balance","nodeType":"VariableDeclaration","scope":4460,"src":"20683:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4426,"name":"uint256","nodeType":"ElementaryTypeName","src":"20683:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4437,"initialValue":{"arguments":[{"arguments":[{"id":4434,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"20733:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4433,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20725:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4432,"name":"address","nodeType":"ElementaryTypeName","src":"20725:7:30","typeDescriptions":{}}},"id":4435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20725:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":4429,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"20708:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4428,"name":"IWETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"20701:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH9_$2792_$","typeString":"type(contract IWETH9)"}},"id":4430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20701:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH9_$2792","typeString":"contract IWETH9"}},"id":4431,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"20701:23:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20701:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"20683:56:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4441,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4439,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"20758:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4440,"name":"amountMinimum","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4401,"src":"20769:13:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"20758:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742057455448","id":4442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20784:19:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_60de758d3296c7eae9cdf7e88b7058fbf54b8138dae3844858ca011a2b517bef","typeString":"literal_string \"Insufficient WETH\""},"value":"Insufficient WETH"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_60de758d3296c7eae9cdf7e88b7058fbf54b8138dae3844858ca011a2b517bef","typeString":"literal_string \"Insufficient WETH\""}],"id":4438,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20750:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4443,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20750:54:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4444,"nodeType":"ExpressionStatement","src":"20750:54:30"},{"expression":{"arguments":[{"id":4449,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"20838:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4446,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"20822:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4445,"name":"IWETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"20815:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH9_$2792_$","typeString":"type(contract IWETH9)"}},"id":4447,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20815:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH9_$2792","typeString":"contract IWETH9"}},"id":4448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"20815:22:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":4450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20815:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4451,"nodeType":"ExpressionStatement","src":"20815:31:30"},{"expression":{"arguments":[{"id":4457,"name":"balance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4427,"src":"20885:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4454,"name":"recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4403,"src":"20865:9:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4453,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20857:8:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":4452,"name":"address","nodeType":"ElementaryTypeName","src":"20857:8:30","stateMutability":"payable","typeDescriptions":{}}},"id":4455,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20857:18:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"20857:27:30","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"20857:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4459,"nodeType":"ExpressionStatement","src":"20857:36:30"}]},"functionSelector":"49404b7c","id":4461,"implemented":true,"kind":"function","modifiers":[],"name":"unwrapWETH9","nodeType":"FunctionDefinition","parameters":{"id":4404,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4401,"mutability":"mutable","name":"amountMinimum","nodeType":"VariableDeclaration","scope":4461,"src":"20478:21:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4400,"name":"uint256","nodeType":"ElementaryTypeName","src":"20478:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4403,"mutability":"mutable","name":"recipient","nodeType":"VariableDeclaration","scope":4461,"src":"20510:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4402,"name":"address","nodeType":"ElementaryTypeName","src":"20510:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"20467:67:30"},"returnParameters":{"id":4405,"nodeType":"ParameterList","parameters":[],"src":"20552:0:30"},"scope":4840,"src":"20447:454:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4522,"nodeType":"Block","src":"21065:425:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4491,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4473,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"21098:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4474,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"21108:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21098:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4476,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"21135:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4477,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"21145:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21135:16:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21098:53:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4489,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4482,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4480,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"21173:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":4481,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"21183:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"21173:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4483,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"21192:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21209:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4485,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21201:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4484,"name":"address","nodeType":"ElementaryTypeName","src":"21201:7:30","typeDescriptions":{}}},"id":4487,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21201:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"21192:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21173:38:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4490,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"21172:40:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"21098:114:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206465706f73697420746f6b656e","id":4492,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21262:23:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_2b4ead52544f7c4fd94cacb66ce31ac975f3e5d5b96c986beaffd53058354f85","typeString":"literal_string \"Invalid deposit token\""},"value":"Invalid deposit token"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2b4ead52544f7c4fd94cacb66ce31ac975f3e5d5b96c986beaffd53058354f85","typeString":"literal_string \"Invalid deposit token\""}],"id":4472,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21076:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4493,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21076:220:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4494,"nodeType":"ExpressionStatement","src":"21076:220:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4496,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"21315:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4497,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21325:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21315:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f73697420616d6f756e74207a65726f","id":4499,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21328:21:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_67f3458ed9473ec120369981a7c64321611a483e2742077207296ad8e1b75d0e","typeString":"literal_string \"Deposit amount zero\""},"value":"Deposit amount zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67f3458ed9473ec120369981a7c64321611a483e2742077207296ad8e1b75d0e","typeString":"literal_string \"Deposit amount zero\""}],"id":4495,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21307:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4500,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21307:43:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4501,"nodeType":"ExpressionStatement","src":"21307:43:30"},{"expression":{"arguments":[{"expression":{"id":4506,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21393:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4507,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"21393:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"arguments":[{"id":4510,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"21413:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21405:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4508,"name":"address","nodeType":"ElementaryTypeName","src":"21405:7:30","typeDescriptions":{}}},"id":4511,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21405:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4512,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"21420:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4503,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"21368:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4502,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"21361:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21361:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransferFrom","nodeType":"MemberAccess","referencedDeclaration":613,"src":"21361:31:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,address,uint256)"}},"id":4513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21361:67:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4514,"nodeType":"ExpressionStatement","src":"21361:67:30"},{"eventCall":{"arguments":[{"id":4516,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4463,"src":"21454:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4517,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21462:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4518,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"21462:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4519,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4465,"src":"21474:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4515,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"21444:9:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4520,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21444:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4521,"nodeType":"EmitStatement","src":"21439:43:30"}]},"functionSelector":"338b5dea","id":4523,"implemented":true,"kind":"function","modifiers":[{"id":4468,"modifierName":{"id":4467,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"21042:12:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21042:12:30"},{"id":4470,"modifierName":{"id":4469,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"21055:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21055:9:30"}],"name":"depositToken","nodeType":"FunctionDefinition","parameters":{"id":4466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4463,"mutability":"mutable","name":"_token","nodeType":"VariableDeclaration","scope":4523,"src":"20985:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4462,"name":"address","nodeType":"ElementaryTypeName","src":"20985:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4465,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","scope":4523,"src":"21010:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4464,"name":"uint256","nodeType":"ElementaryTypeName","src":"21010:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"20974:58:30"},"returnParameters":{"id":4471,"nodeType":"ParameterList","parameters":[],"src":"21065:0:30"},"scope":4840,"src":"20953:537:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4565,"nodeType":"Block","src":"21560:301:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4531,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"21579:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4534,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21596:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4533,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21588:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4532,"name":"address","nodeType":"ElementaryTypeName","src":"21588:7:30","typeDescriptions":{}}},"id":4535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21588:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"21579:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57455448392061646472657373206e6f7420736574","id":4537,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21600:23:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e2d8b60b27a886b8a2c87748b4096ef19f4893d838ef953f696ef0721238046","typeString":"literal_string \"WETH9 address not set\""},"value":"WETH9 address not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e2d8b60b27a886b8a2c87748b4096ef19f4893d838ef953f696ef0721238046","typeString":"literal_string \"WETH9 address not set\""}],"id":4530,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21571:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4538,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21571:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4539,"nodeType":"ExpressionStatement","src":"21571:53:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4541,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21643:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4542,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"21643:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4543,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"21655:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"21643:13:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4465706f736974204554482076616c7565207a65726f","id":4545,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21658:24:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_47b25e07ef95bcb6ac2cf1a21d18f5ecb385543cbab4d4f6617b805d835e076e","typeString":"literal_string \"Deposit ETH value zero\""},"value":"Deposit ETH value zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47b25e07ef95bcb6ac2cf1a21d18f5ecb385543cbab4d4f6617b805d835e076e","typeString":"literal_string \"Deposit ETH value zero\""}],"id":4540,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21635:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4546,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21635:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4547,"nodeType":"ExpressionStatement","src":"21635:48:30"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"argumentTypes":[],"expression":{"arguments":[{"id":4549,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"21742:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4548,"name":"IWETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"21735:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH9_$2792_$","typeString":"type(contract IWETH9)"}},"id":4550,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21735:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH9_$2792","typeString":"contract IWETH9"}},"id":4551,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"deposit","nodeType":"MemberAccess","referencedDeclaration":2785,"src":"21735:21:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$","typeString":"function () payable external"}},"id":4554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"expression":{"id":4552,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21764:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4553,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"21764:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"21735:39:30","typeDescriptions":{"typeIdentifier":"t_function_external_payable$__$returns$__$value","typeString":"function () payable external"}},"id":4555,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21735:41:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4556,"nodeType":"ExpressionStatement","src":"21735:41:30"},{"eventCall":{"arguments":[{"id":4558,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"21802:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4559,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21809:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"21809:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"expression":{"id":4561,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"21821:3:30","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":4562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"value","nodeType":"MemberAccess","src":"21821:9:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4557,"name":"Deposited","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3017,"src":"21792:9:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4563,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"21792:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4564,"nodeType":"EmitStatement","src":"21787:44:30"}]},"functionSelector":"f6326fb3","id":4566,"implemented":true,"kind":"function","modifiers":[{"id":4526,"modifierName":{"id":4525,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"21537:12:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21537:12:30"},{"id":4528,"modifierName":{"id":4527,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"21550:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21550:9:30"}],"name":"depositETH","nodeType":"FunctionDefinition","parameters":{"id":4524,"nodeType":"ParameterList","parameters":[],"src":"21517:2:30"},"returnParameters":{"id":4529,"nodeType":"ParameterList","parameters":[],"src":"21560:0:30"},"scope":4840,"src":"21498:363:30","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":4625,"nodeType":"Block","src":"22011:433:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4580,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22030:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22052:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22044:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4581,"name":"address","nodeType":"ElementaryTypeName","src":"22044:7:30","typeDescriptions":{}}},"id":4584,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22044:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"22030:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e742061646472657373","id":4586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22056:27:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""},"value":"Invalid recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""}],"id":4579,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22022:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22022:62:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4588,"nodeType":"ExpressionStatement","src":"22022:62:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4590,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22103:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4591,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22113:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22103:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720616d6f756e74207a65726f","id":4593,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22116:22:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_426d7b4d88a506bc09f6ed29efbdcc4a0863c1c503bcb8fec11e1c49071ec5b5","typeString":"literal_string \"Withdraw amount zero\""},"value":"Withdraw amount zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_426d7b4d88a506bc09f6ed29efbdcc4a0863c1c503bcb8fec11e1c49071ec5b5","typeString":"literal_string \"Withdraw amount zero\""}],"id":4589,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22095:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4594,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22095:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4595,"nodeType":"ExpressionStatement","src":"22095:44:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4603,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22258:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4602,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22250:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4601,"name":"address","nodeType":"ElementaryTypeName","src":"22250:7:30","typeDescriptions":{}}},"id":4604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22250:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":4598,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"22232:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4597,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"22225:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22225:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"22225:24:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22225:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4606,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22268:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22225:50:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e742062616c616e6365","id":4608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22290:22:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""},"value":"Insufficient balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5","typeString":"literal_string \"Insufficient balance\""}],"id":4596,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22203:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4609,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22203:120:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4610,"nodeType":"ExpressionStatement","src":"22203:120:30"},{"expression":{"arguments":[{"id":4615,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22362:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4616,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22374:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4612,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"22341:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4611,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"22334:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4613,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22334:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"safeTransfer","nodeType":"MemberAccess","referencedDeclaration":588,"src":"22334:27:30","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_contract$_IERC20_$554_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$554_$","typeString":"function (contract IERC20,address,uint256)"}},"id":4617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22334:48:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4618,"nodeType":"ExpressionStatement","src":"22334:48:30"},{"eventCall":{"arguments":[{"id":4620,"name":"_token","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4568,"src":"22408:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4621,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4572,"src":"22416:10:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4622,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4570,"src":"22428:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4619,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"22398:9:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4623,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22398:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4624,"nodeType":"EmitStatement","src":"22393:43:30"}]},"functionSelector":"3ccdbb28","id":4626,"implemented":true,"kind":"function","modifiers":[{"id":4575,"modifierName":{"id":4574,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"21988:12:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"21988:12:30"},{"id":4577,"modifierName":{"id":4576,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"22001:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"22001:9:30"}],"name":"withdrawToken","nodeType":"FunctionDefinition","parameters":{"id":4573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4568,"mutability":"mutable","name":"_token","nodeType":"VariableDeclaration","scope":4626,"src":"21902:14:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4567,"name":"address","nodeType":"ElementaryTypeName","src":"21902:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4570,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","scope":4626,"src":"21927:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4569,"name":"uint256","nodeType":"ElementaryTypeName","src":"21927:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4572,"mutability":"mutable","name":"_recipient","nodeType":"VariableDeclaration","scope":4626,"src":"21953:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4571,"name":"address","nodeType":"ElementaryTypeName","src":"21953:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"21891:87:30"},"returnParameters":{"id":4578,"nodeType":"ParameterList","parameters":[],"src":"22011:0:30"},"scope":4840,"src":"21869:575:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4698,"nodeType":"Block","src":"22607:657:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4638,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"22626:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4641,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22643:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22635:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4639,"name":"address","nodeType":"ElementaryTypeName","src":"22635:7:30","typeDescriptions":{}}},"id":4642,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22635:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"22626:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"57455448392061646472657373206e6f7420736574","id":4644,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22647:23:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_3e2d8b60b27a886b8a2c87748b4096ef19f4893d838ef953f696ef0721238046","typeString":"literal_string \"WETH9 address not set\""},"value":"WETH9 address not set"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3e2d8b60b27a886b8a2c87748b4096ef19f4893d838ef953f696ef0721238046","typeString":"literal_string \"WETH9 address not set\""}],"id":4637,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22618:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4645,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22618:53:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4646,"nodeType":"ExpressionStatement","src":"22618:53:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"id":4653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4648,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"22690:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4651,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22712:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4650,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22704:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4649,"name":"address","nodeType":"ElementaryTypeName","src":"22704:7:30","typeDescriptions":{}}},"id":4652,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22704:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"22690:24:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420726563697069656e742061646472657373","id":4654,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22716:27:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""},"value":"Invalid recipient address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df","typeString":"literal_string \"Invalid recipient address\""}],"id":4647,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22682:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4655,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22682:62:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4656,"nodeType":"ExpressionStatement","src":"22682:62:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4658,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"22763:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4659,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"22773:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"22763:11:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"576974686472617720616d6f756e74207a65726f","id":4661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22776:22:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_426d7b4d88a506bc09f6ed29efbdcc4a0863c1c503bcb8fec11e1c49071ec5b5","typeString":"literal_string \"Withdraw amount zero\""},"value":"Withdraw amount zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_426d7b4d88a506bc09f6ed29efbdcc4a0863c1c503bcb8fec11e1c49071ec5b5","typeString":"literal_string \"Withdraw amount zero\""}],"id":4657,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22755:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22755:44:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4663,"nodeType":"ExpressionStatement","src":"22755:44:30"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4675,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"arguments":[{"id":4671,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"22924:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22916:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4669,"name":"address","nodeType":"ElementaryTypeName","src":"22916:7:30","typeDescriptions":{}}},"id":4672,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22916:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":4666,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"22899:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4665,"name":"IWETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"22892:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH9_$2792_$","typeString":"type(contract IWETH9)"}},"id":4667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22892:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH9_$2792","typeString":"contract IWETH9"}},"id":4668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"22892:23:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22892:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":4674,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"22934:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"22892:49:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420574554482062616c616e6365","id":4676,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22956:27:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1","typeString":"literal_string \"Insufficient WETH balance\""},"value":"Insufficient WETH balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1","typeString":"literal_string \"Insufficient WETH balance\""}],"id":4664,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22870:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"22870:124:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4678,"nodeType":"ExpressionStatement","src":"22870:124:30"},{"expression":{"arguments":[{"id":4683,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"23062:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":4680,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"23046:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4679,"name":"IWETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2792,"src":"23039:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IWETH9_$2792_$","typeString":"type(contract IWETH9)"}},"id":4681,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23039:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IWETH9_$2792","typeString":"contract IWETH9"}},"id":4682,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"withdraw","nodeType":"MemberAccess","referencedDeclaration":2791,"src":"23039:22:30","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256) external"}},"id":4684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23039:31:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4685,"nodeType":"ExpressionStatement","src":"23039:31:30"},{"expression":{"arguments":[{"id":4689,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"23139:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4686,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"23119:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":4688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"23119:19:30","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":4690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23119:28:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4691,"nodeType":"ExpressionStatement","src":"23119:28:30"},{"eventCall":{"arguments":[{"id":4693,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"23207:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4694,"name":"_recipient","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4630,"src":"23214:10:30","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},{"id":4695,"name":"_amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4628,"src":"23226:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address_payable","typeString":"address payable"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4692,"name":"Withdrawn","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3025,"src":"23197:9:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":4696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23197:37:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4697,"nodeType":"EmitStatement","src":"23192:42:30"}]},"functionSelector":"36118b52","id":4699,"implemented":true,"kind":"function","modifiers":[{"id":4633,"modifierName":{"id":4632,"name":"nonReentrant","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1299,"src":"22584:12:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"22584:12:30"},{"id":4635,"modifierName":{"id":4634,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"22597:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"22597:9:30"}],"name":"withdrawETH","nodeType":"FunctionDefinition","parameters":{"id":4631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4628,"mutability":"mutable","name":"_amount","nodeType":"VariableDeclaration","scope":4699,"src":"22483:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4627,"name":"uint256","nodeType":"ElementaryTypeName","src":"22483:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4630,"mutability":"mutable","name":"_recipient","nodeType":"VariableDeclaration","scope":4699,"src":"22509:26:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":4629,"name":"address","nodeType":"ElementaryTypeName","src":"22509:15:30","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"internal"}],"src":"22472:102:30"},"returnParameters":{"id":4636,"nodeType":"ParameterList","parameters":[],"src":"22607:0:30"},"scope":4840,"src":"22452:812:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4726,"nodeType":"Block","src":"23390:205:30","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":4713,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":4709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4707,"name":"_multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"23409:11:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":4708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23423:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"23409:15:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint24","typeString":"uint24"},"id":4712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4710,"name":"_multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"23428:11:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"hexValue":"313030","id":4711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"23443:3:30","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"value":"100"},"src":"23428:18:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"23409:37:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c6964206d756c7469706c696572","id":4714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23448:20:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_0c9a170025b1199db443e102b5af1d9803f66022be9833ab69fcf7c7d7ba0269","typeString":"literal_string \"Invalid multiplier\""},"value":"Invalid multiplier"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0c9a170025b1199db443e102b5af1d9803f66022be9833ab69fcf7c7d7ba0269","typeString":"literal_string \"Invalid multiplier\""}],"id":4706,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23401:7:30","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":4715,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23401:68:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4716,"nodeType":"ExpressionStatement","src":"23401:68:30"},{"expression":{"id":4719,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4717,"name":"rangeWidthMultiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2954,"src":"23480:20:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4718,"name":"_multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"23503:11:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"23480:34:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"id":4720,"nodeType":"ExpressionStatement","src":"23480:34:30"},{"eventCall":{"arguments":[{"hexValue":"72616e676557696474684d756c7469706c696572","id":4722,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23551:22:30","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8dce0d4a3459471bfd5ca698b526cb410bac112be697e35103fb7328ff5234b","typeString":"literal_string \"rangeWidthMultiplier\""},"value":"rangeWidthMultiplier"},{"id":4723,"name":"_multiplier","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4701,"src":"23575:11:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f8dce0d4a3459471bfd5ca698b526cb410bac112be697e35103fb7328ff5234b","typeString":"literal_string \"rangeWidthMultiplier\""},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"id":4721,"name":"StrategyParamUpdated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3045,"src":"23530:20:30","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$__$","typeString":"function (string memory,uint256)"}},"id":4724,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"23530:57:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":4725,"nodeType":"EmitStatement","src":"23525:62:30"}]},"functionSelector":"1ee0b02e","id":4727,"implemented":true,"kind":"function","modifiers":[{"id":4704,"modifierName":{"id":4703,"name":"onlyOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":58,"src":"23380:9:30","typeDescriptions":{"typeIdentifier":"t_modifier$__$","typeString":"modifier ()"}},"nodeType":"ModifierInvocation","src":"23380:9:30"}],"name":"setRangeWidthMultiplier","nodeType":"FunctionDefinition","parameters":{"id":4702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4701,"mutability":"mutable","name":"_multiplier","nodeType":"VariableDeclaration","scope":4727,"src":"23351:18:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":4700,"name":"uint24","nodeType":"ElementaryTypeName","src":"23351:6:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"23350:20:30"},"returnParameters":{"id":4705,"nodeType":"ParameterList","parameters":[],"src":"23390:0:30"},"scope":4840,"src":"23318:277:30","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":4752,"nodeType":"Block","src":"23909:232:30","statements":[{"expression":{"components":[{"expression":{"id":4740,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"23942:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":4741,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tokenId","nodeType":"MemberAccess","referencedDeclaration":2940,"src":"23942:23:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4742,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"23980:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":4743,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"liquidity","nodeType":"MemberAccess","referencedDeclaration":2942,"src":"23980:25:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},{"expression":{"id":4744,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"24020:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":4745,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickLower","nodeType":"MemberAccess","referencedDeclaration":2944,"src":"24020:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":4746,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"24060:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":4747,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tickUpper","nodeType":"MemberAccess","referencedDeclaration":2946,"src":"24060:25:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},{"expression":{"id":4748,"name":"currentPosition","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2951,"src":"24100:15:30","typeDescriptions":{"typeIdentifier":"t_struct$_Position_$2949_storage","typeString":"struct PredictiveLiquidityManagerFinal.Position storage ref"}},"id":4749,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"active","nodeType":"MemberAccess","referencedDeclaration":2948,"src":"24100:22:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"id":4750,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"23927:206:30","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_uint128_$_t_int24_$_t_int24_$_t_bool_$","typeString":"tuple(uint256,uint128,int24,int24,bool)"}},"functionReturnParameters":4739,"id":4751,"nodeType":"Return","src":"23920:213:30"}]},"functionSelector":"479c2e76","id":4753,"implemented":true,"kind":"function","modifiers":[],"name":"getActivePositionDetails","nodeType":"FunctionDefinition","parameters":{"id":4728,"nodeType":"ParameterList","parameters":[],"src":"23692:2:30"},"returnParameters":{"id":4739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4730,"mutability":"mutable","name":"tokenId","nodeType":"VariableDeclaration","scope":4753,"src":"23759:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4729,"name":"uint256","nodeType":"ElementaryTypeName","src":"23759:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4732,"mutability":"mutable","name":"liquidity","nodeType":"VariableDeclaration","scope":4753,"src":"23789:17:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":4731,"name":"uint128","nodeType":"ElementaryTypeName","src":"23789:7:30","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":4734,"mutability":"mutable","name":"tickLower","nodeType":"VariableDeclaration","scope":4753,"src":"23821:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4733,"name":"int24","nodeType":"ElementaryTypeName","src":"23821:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4736,"mutability":"mutable","name":"tickUpper","nodeType":"VariableDeclaration","scope":4753,"src":"23851:15:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":4735,"name":"int24","nodeType":"ElementaryTypeName","src":"23851:5:30","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"},{"constant":false,"id":4738,"mutability":"mutable","name":"active","nodeType":"VariableDeclaration","scope":4753,"src":"23881:11:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4737,"name":"bool","nodeType":"ElementaryTypeName","src":"23881:4:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"23744:159:30"},"scope":4840,"src":"23659:482:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4806,"nodeType":"Block","src":"24292:245:30","statements":[{"expression":{"id":4772,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4762,"name":"balance0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4756,"src":"24303:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4769,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24347:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4768,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24339:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4767,"name":"address","nodeType":"ElementaryTypeName","src":"24339:7:30","typeDescriptions":{}}},"id":4770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24339:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":4764,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"24321:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4763,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"24314:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24314:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"24314:24:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4771,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24314:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24303:50:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4773,"nodeType":"ExpressionStatement","src":"24303:50:30"},{"expression":{"id":4784,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4774,"name":"balance1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4758,"src":"24364:8:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"arguments":[{"id":4781,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24408:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4780,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24400:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4779,"name":"address","nodeType":"ElementaryTypeName","src":"24400:7:30","typeDescriptions":{}}},"id":4782,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24400:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":4776,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"24382:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4775,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"24375:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24375:14:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"24375:24:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4783,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24375:39:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24364:50:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4785,"nodeType":"ExpressionStatement","src":"24364:50:30"},{"expression":{"id":4804,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4786,"name":"balanceWETH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4760,"src":"24425:11:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":4792,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4787,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"24439:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":4790,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24456:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":4789,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24448:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4788,"name":"address","nodeType":"ElementaryTypeName","src":"24448:7:30","typeDescriptions":{}}},"id":4791,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24448:10:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"24439:19:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":4802,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24528:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":4803,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24439:90:30","trueExpression":{"arguments":[{"arguments":[{"id":4799,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"24506:4:30","typeDescriptions":{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_PredictiveLiquidityManagerFinal_$4840","typeString":"contract PredictiveLiquidityManagerFinal"}],"id":4798,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24498:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":4797,"name":"address","nodeType":"ElementaryTypeName","src":"24498:7:30","typeDescriptions":{}}},"id":4800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24498:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address_payable","typeString":"address payable"}],"expression":{"arguments":[{"id":4794,"name":"WETH9","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"24481:5:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":4793,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":554,"src":"24474:6:30","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$554_$","typeString":"type(contract IERC20)"}},"id":4795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24474:13:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$554","typeString":"contract IERC20"}},"id":4796,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balanceOf","nodeType":"MemberAccess","referencedDeclaration":493,"src":"24474:23:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$returns$_t_uint256_$","typeString":"function (address) view external returns (uint256)"}},"id":4801,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24474:38:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"24425:104:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4805,"nodeType":"ExpressionStatement","src":"24425:104:30"}]},"functionSelector":"ffd2a7d3","id":4807,"implemented":true,"kind":"function","modifiers":[],"name":"getContractBalances","nodeType":"FunctionDefinition","parameters":{"id":4754,"nodeType":"ParameterList","parameters":[],"src":"24177:2:30"},"returnParameters":{"id":4761,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4756,"mutability":"mutable","name":"balance0","nodeType":"VariableDeclaration","scope":4807,"src":"24230:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4755,"name":"uint256","nodeType":"ElementaryTypeName","src":"24230:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4758,"mutability":"mutable","name":"balance1","nodeType":"VariableDeclaration","scope":4807,"src":"24248:16:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4757,"name":"uint256","nodeType":"ElementaryTypeName","src":"24248:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4760,"mutability":"mutable","name":"balanceWETH","nodeType":"VariableDeclaration","scope":4807,"src":"24266:19:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4759,"name":"uint256","nodeType":"ElementaryTypeName","src":"24266:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24229:57:30"},"scope":4840,"src":"24149:388:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4819,"nodeType":"Block","src":"24603:62:30","statements":[{"expression":{"arguments":[{"id":4814,"name":"token0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2926,"src":"24637:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4815,"name":"token1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2928,"src":"24645:6:30","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":4816,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2934,"src":"24653:3:30","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint24","typeString":"uint24"}],"expression":{"id":4812,"name":"factory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"24621:7:30","typeDescriptions":{"typeIdentifier":"t_contract$_IUniswapV3Factory_$1383","typeString":"contract IUniswapV3Factory"}},"id":4813,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"getPool","nodeType":"MemberAccess","referencedDeclaration":1356,"src":"24621:15:30","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_address_$_t_address_$_t_uint24_$returns$_t_address_$","typeString":"function (address,address,uint24) view external returns (address)"}},"id":4817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24621:36:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4811,"id":4818,"nodeType":"Return","src":"24614:43:30"}]},"functionSelector":"f586c6d9","id":4820,"implemented":true,"kind":"function","modifiers":[],"name":"getPoolAddress","nodeType":"FunctionDefinition","parameters":{"id":4808,"nodeType":"ParameterList","parameters":[],"src":"24568:2:30"},"returnParameters":{"id":4811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4810,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4820,"src":"24594:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4809,"name":"address","nodeType":"ElementaryTypeName","src":"24594:7:30","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"24593:9:30"},"scope":4840,"src":"24545:120:30","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":4838,"nodeType":"Block","src":"24790:50:30","statements":[{"expression":{"arguments":[{"condition":{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":4831,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4829,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"24816:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":4830,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"24821:1:30","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"24816:6:30","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":4834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"-","prefix":true,"src":"24829:2:30","subExpression":{"id":4833,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"24830:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"id":4835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"24816:15:30","trueExpression":{"id":4832,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4822,"src":"24825:1:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":4828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24808:7:30","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":4827,"name":"uint256","nodeType":"ElementaryTypeName","src":"24808:7:30","typeDescriptions":{}}},"id":4836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"24808:24:30","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4826,"id":4837,"nodeType":"Return","src":"24801:31:30"}]},"id":4839,"implemented":true,"kind":"function","modifiers":[],"name":"abs","nodeType":"FunctionDefinition","parameters":{"id":4823,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4822,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":4839,"src":"24749:8:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":4821,"name":"int256","nodeType":"ElementaryTypeName","src":"24749:6:30","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24748:10:30"},"returnParameters":{"id":4826,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4825,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4839,"src":"24781:7:30","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4824,"name":"uint256","nodeType":"ElementaryTypeName","src":"24781:7:30","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"24780:9:30"},"scope":4840,"src":"24736:104:30","stateMutability":"pure","virtual":false,"visibility":"private"}],"scope":4841,"src":"1795:23048:30"}],"src":"33:24812:30"},"id":30},"contracts/libraries/SqrtMath.sol":{"ast":{"absolutePath":"contracts/libraries/SqrtMath.sol","exportedSymbols":{"SafeMath":[476],"SqrtMath":[5031]},"id":5032,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":4842,"literals":["solidity","^","0.7",".6"],"nodeType":"PragmaDirective","src":"33:23:31"},{"absolutePath":"@openzeppelin/contracts/math/SafeMath.sol","file":"@openzeppelin/contracts/math/SafeMath.sol","id":4843,"nodeType":"ImportDirective","scope":5032,"sourceUnit":477,"src":"60:51:31","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"contractDependencies":[],"contractKind":"library","documentation":{"id":4844,"nodeType":"StructuredDocumentation","src":"141:207:31","text":" @title Safe Square Root Math Library for Solidity 0.7.x\n @author Adapted from OpenZeppelin Contracts & other sources\n @notice Provides square root functionality using SafeMath for uint256."},"fullyImplemented":true,"id":5031,"linearizedBaseContracts":[5031],"name":"SqrtMath","nodeType":"ContractDefinition","nodes":[{"id":4847,"libraryName":{"id":4845,"name":"SafeMath","nodeType":"UserDefinedTypeName","referencedDeclaration":476,"src":"380:8:31","typeDescriptions":{"typeIdentifier":"t_contract$_SafeMath_$476","typeString":"library SafeMath"}},"nodeType":"UsingForDirective","src":"374:27:31","typeName":{"id":4846,"name":"uint256","nodeType":"ElementaryTypeName","src":"393:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"SqrtMath.Rounding","id":4850,"members":[{"id":4848,"name":"Floor","nodeType":"EnumValue","src":"523:5:31"},{"id":4849,"name":"Ceil","nodeType":"EnumValue","src":"539:4:31"}],"name":"Rounding","nodeType":"EnumDefinition","src":"498:52:31"},{"body":{"id":4977,"nodeType":"Block","src":"799:1352:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4858,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"814:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"819:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"814:6:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4863,"nodeType":"IfStatement","src":"810:20:31","trueBody":{"expression":{"hexValue":"30","id":4861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"829:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":4857,"id":4862,"nodeType":"Return","src":"822:8:31"}},{"assignments":[4865],"declarations":[{"constant":false,"id":4865,"mutability":"mutable","name":"estimate","nodeType":"VariableDeclaration","scope":4977,"src":"1011:16:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4864,"name":"uint256","nodeType":"ElementaryTypeName","src":"1011:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4874,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":4866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1030:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4871,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":4868,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1041:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4867,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":5030,"src":"1036:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1036:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":4870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1047:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1036:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":4872,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1035:14:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1030:19:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1011:38:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4875,"name":"estimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"1064:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4876,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1076:1:31","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1064:13:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4882,"nodeType":"IfStatement","src":"1060:31:31","trueBody":{"expression":{"id":4880,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4878,"name":"estimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"1079:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"31","id":4879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1090:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1079:12:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4881,"nodeType":"ExpressionStatement","src":"1079:12:31"}},{"assignments":[4884],"declarations":[{"constant":false,"id":4884,"mutability":"mutable","name":"result","nodeType":"VariableDeclaration","scope":4977,"src":"1252:14:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4883,"name":"uint256","nodeType":"ElementaryTypeName","src":"1252:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4895,"initialValue":{"arguments":[{"hexValue":"32","id":4893,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1303:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"arguments":[{"arguments":[{"id":4889,"name":"estimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"1288:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4887,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1282:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1282:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4890,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1282:15:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4885,"name":"estimate","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4865,"src":"1269:8:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"1269:12:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4891,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1269:29:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1269:33:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4894,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1269:36:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1252:53:31"},{"expression":{"id":4907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4896,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1316:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":4905,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1355:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"arguments":[{"arguments":[{"id":4901,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1342:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4899,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1336:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4900,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1336:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1336:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4897,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1325:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4898,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"1325:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1325:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1325:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4906,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1325:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1316:41:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4908,"nodeType":"ExpressionStatement","src":"1316:41:31"},{"expression":{"id":4920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4909,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1368:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":4918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1407:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"arguments":[{"arguments":[{"id":4914,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1394:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4912,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1388:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4913,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1388:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4915,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1388:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1377:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4911,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"1377:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4916,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1377:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1377:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1377:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1368:41:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4921,"nodeType":"ExpressionStatement","src":"1368:41:31"},{"expression":{"id":4933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4922,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1420:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":4931,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1459:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"arguments":[{"arguments":[{"id":4927,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1446:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4925,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1440:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4926,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1440:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1440:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4923,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1429:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4924,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"1429:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1429:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4930,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1429:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4932,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1429:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1420:41:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4934,"nodeType":"ExpressionStatement","src":"1420:41:31"},{"expression":{"id":4946,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4935,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1472:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":4944,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1511:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"arguments":[{"arguments":[{"id":4940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1498:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4938,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1492:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4939,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1492:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1492:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4936,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1481:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"1481:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4942,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1481:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4943,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1481:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4945,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1481:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1472:41:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4947,"nodeType":"ExpressionStatement","src":"1472:41:31"},{"expression":{"id":4959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":4948,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1524:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"32","id":4957,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1563:1:31","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"}],"expression":{"arguments":[{"arguments":[{"id":4953,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1550:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4951,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1544:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4952,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1544:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4954,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1544:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4949,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1533:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"1533:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1533:25:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4956,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1533:29:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4958,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1533:32:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1524:41:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4960,"nodeType":"ExpressionStatement","src":"1524:41:31"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4961,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1807:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"arguments":[{"id":4964,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1822:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":4962,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4853,"src":"1816:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4963,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"div","nodeType":"MemberAccess","referencedDeclaration":381,"src":"1816:5:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1816:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1807:22:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":4975,"nodeType":"Block","src":"2028:116:31","statements":[{"expression":{"id":4973,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"2126:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4857,"id":4974,"nodeType":"Return","src":"2119:13:31"}]},"id":4976,"nodeType":"IfStatement","src":"1803:341:31","trueBody":{"id":4972,"nodeType":"Block","src":"1831:191:31","statements":[{"expression":{"arguments":[{"hexValue":"31","id":4969,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2008:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":4967,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4884,"src":"1997:6:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4968,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sub","nodeType":"MemberAccess","referencedDeclaration":325,"src":"1997:10:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":4970,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1997:13:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4857,"id":4971,"nodeType":"Return","src":"1990:20:31"}]}}]},"documentation":{"id":4851,"nodeType":"StructuredDocumentation","src":"558:178:31","text":" @dev Returns the integer square root of a number rounded down (floor).\n Uses Babylonian method with SafeMath. 6 iterations are sufficient for uint256."},"id":4978,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":4854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4853,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":4978,"src":"756:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4852,"name":"uint256","nodeType":"ElementaryTypeName","src":"756:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"755:11:31"},"returnParameters":{"id":4857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4856,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":4978,"src":"790:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4855,"name":"uint256","nodeType":"ElementaryTypeName","src":"790:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"789:9:31"},"scope":5031,"src":"742:1409:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5019,"nodeType":"Block","src":"2354:637:31","statements":[{"assignments":[4989],"declarations":[{"constant":false,"id":4989,"mutability":"mutable","name":"resultFloor","nodeType":"VariableDeclaration","scope":5019,"src":"2365:19:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4988,"name":"uint256","nodeType":"ElementaryTypeName","src":"2365:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":4993,"initialValue":{"arguments":[{"id":4991,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2392:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":4990,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[4978,5020],"referencedDeclaration":4978,"src":"2387:4:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":4992,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2387:7:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2365:29:31"},{"condition":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$4850","typeString":"enum SqrtMath.Rounding"},"id":4997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":4994,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4983,"src":"2440:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4850","typeString":"enum SqrtMath.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":4995,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4850,"src":"2452:8:31","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$4850_$","typeString":"type(enum SqrtMath.Rounding)"}},"id":4996,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Floor","nodeType":"MemberAccess","src":"2452:14:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4850","typeString":"enum SqrtMath.Rounding"}},"src":"2440:26:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5017,"nodeType":"Block","src":"2519:465:31","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":5006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":5003,"name":"resultFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"2748:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":5001,"name":"resultFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"2732:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5002,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"mul","nodeType":"MemberAccess","referencedDeclaration":359,"src":"2732:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5004,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2732:28:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":5005,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4981,"src":"2763:1:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2732:32:31","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":5015,"nodeType":"Block","src":"2879:94:31","statements":[{"expression":{"id":5013,"name":"resultFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"2905:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4987,"id":5014,"nodeType":"Return","src":"2898:18:31"}]},"id":5016,"nodeType":"IfStatement","src":"2728:245:31","trueBody":{"id":5012,"nodeType":"Block","src":"2766:107:31","statements":[{"expression":{"arguments":[{"hexValue":"31","id":5009,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2855:1:31","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"}],"expression":{"id":5007,"name":"resultFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"2839:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":5008,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":303,"src":"2839:15:31","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":5010,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2839:18:31","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4987,"id":5011,"nodeType":"Return","src":"2832:25:31"}]}}]},"id":5018,"nodeType":"IfStatement","src":"2436:548:31","trueBody":{"id":5000,"nodeType":"Block","src":"2468:45:31","statements":[{"expression":{"id":4998,"name":"resultFloor","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4989,"src":"2490:11:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4987,"id":4999,"nodeType":"Return","src":"2483:18:31"}]}}]},"documentation":{"id":4979,"nodeType":"StructuredDocumentation","src":"2159:88:31","text":" @dev Calculates sqrt(a), following the selected rounding direction."},"id":5020,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nodeType":"FunctionDefinition","parameters":{"id":4984,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4981,"mutability":"mutable","name":"a","nodeType":"VariableDeclaration","scope":5020,"src":"2277:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4980,"name":"uint256","nodeType":"ElementaryTypeName","src":"2277:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4983,"mutability":"mutable","name":"rounding","nodeType":"VariableDeclaration","scope":5020,"src":"2297:17:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4850","typeString":"enum SqrtMath.Rounding"},"typeName":{"id":4982,"name":"Rounding","nodeType":"UserDefinedTypeName","referencedDeclaration":4850,"src":"2297:8:31","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$4850","typeString":"enum SqrtMath.Rounding"}},"visibility":"internal"}],"src":"2266:55:31"},"returnParameters":{"id":4987,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4986,"mutability":"mutable","name":"","nodeType":"VariableDeclaration","scope":5020,"src":"2345:7:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4985,"name":"uint256","nodeType":"ElementaryTypeName","src":"2345:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2344:9:31"},"scope":5031,"src":"2253:738:31","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":5029,"nodeType":"Block","src":"3312:1029:31","statements":[{"AST":{"nodeType":"YulBlock","src":"3332:1002:31","statements":[{"nodeType":"YulVariableDeclaration","src":"3347:10:31","value":{"name":"x","nodeType":"YulIdentifier","src":"3356:1:31"},"variables":[{"name":"v","nodeType":"YulTypedName","src":"3351:1:31","type":""}]},{"body":{"nodeType":"YulBlock","src":"3384:40:31","statements":[{"nodeType":"YulAssignment","src":"3403:6:31","value":{"kind":"number","nodeType":"YulLiteral","src":"3408:1:31","type":"","value":"0"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3403:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"3381:1:31"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3374:6:31"},"nodeType":"YulFunctionCall","src":"3374:9:31"},"nodeType":"YulIf","src":"3371:2:31"},{"body":{"nodeType":"YulBlock","src":"3483:84:31","statements":[{"nodeType":"YulAssignment","src":"3502:16:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3511:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3514:3:31","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3507:3:31"},"nodeType":"YulFunctionCall","src":"3507:11:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3502:1:31"}]},{"nodeType":"YulAssignment","src":"3536:16:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3545:3:31","type":"","value":"128"},{"name":"v","nodeType":"YulIdentifier","src":"3550:1:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3541:3:31"},"nodeType":"YulFunctionCall","src":"3541:11:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"3536:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"3444:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3447:34:31","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3441:2:31"},"nodeType":"YulFunctionCall","src":"3441:41:31"},"nodeType":"YulIf","src":"3438:2:31"},{"body":{"nodeType":"YulBlock","src":"3610:82:31","statements":[{"nodeType":"YulAssignment","src":"3629:15:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3638:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3641:2:31","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3634:3:31"},"nodeType":"YulFunctionCall","src":"3634:10:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3629:1:31"}]},{"nodeType":"YulAssignment","src":"3662:15:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3671:2:31","type":"","value":"64"},{"name":"v","nodeType":"YulIdentifier","src":"3675:1:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3667:3:31"},"nodeType":"YulFunctionCall","src":"3667:10:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"3662:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"3587:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3590:18:31","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3584:2:31"},"nodeType":"YulFunctionCall","src":"3584:25:31"},"nodeType":"YulIf","src":"3581:2:31"},{"body":{"nodeType":"YulBlock","src":"3727:82:31","statements":[{"nodeType":"YulAssignment","src":"3746:15:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3755:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3758:2:31","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3751:3:31"},"nodeType":"YulFunctionCall","src":"3751:10:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3746:1:31"}]},{"nodeType":"YulAssignment","src":"3779:15:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3788:2:31","type":"","value":"32"},{"name":"v","nodeType":"YulIdentifier","src":"3792:1:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3784:3:31"},"nodeType":"YulFunctionCall","src":"3784:10:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"3779:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"3712:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3715:10:31","type":"","value":"0xffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3709:2:31"},"nodeType":"YulFunctionCall","src":"3709:17:31"},"nodeType":"YulIf","src":"3706:2:31"},{"body":{"nodeType":"YulBlock","src":"3840:82:31","statements":[{"nodeType":"YulAssignment","src":"3859:15:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3868:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3871:2:31","type":"","value":"16"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3864:3:31"},"nodeType":"YulFunctionCall","src":"3864:10:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3859:1:31"}]},{"nodeType":"YulAssignment","src":"3892:15:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3901:2:31","type":"","value":"16"},{"name":"v","nodeType":"YulIdentifier","src":"3905:1:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"3897:3:31"},"nodeType":"YulFunctionCall","src":"3897:10:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"3892:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"3829:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3832:6:31","type":"","value":"0xffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3826:2:31"},"nodeType":"YulFunctionCall","src":"3826:13:31"},"nodeType":"YulIf","src":"3823:2:31"},{"body":{"nodeType":"YulBlock","src":"3951:80:31","statements":[{"nodeType":"YulAssignment","src":"3970:14:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"3979:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3982:1:31","type":"","value":"8"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3975:3:31"},"nodeType":"YulFunctionCall","src":"3975:9:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"3970:1:31"}]},{"nodeType":"YulAssignment","src":"4002:14:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4011:1:31","type":"","value":"8"},{"name":"v","nodeType":"YulIdentifier","src":"4014:1:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4007:3:31"},"nodeType":"YulFunctionCall","src":"4007:9:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"4002:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"3942:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"3945:4:31","type":"","value":"0xff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3939:2:31"},"nodeType":"YulFunctionCall","src":"3939:11:31"},"nodeType":"YulIf","src":"3936:2:31"},{"body":{"nodeType":"YulBlock","src":"4059:80:31","statements":[{"nodeType":"YulAssignment","src":"4078:14:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"4087:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4090:1:31","type":"","value":"4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4083:3:31"},"nodeType":"YulFunctionCall","src":"4083:9:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4078:1:31"}]},{"nodeType":"YulAssignment","src":"4110:14:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4119:1:31","type":"","value":"4"},{"name":"v","nodeType":"YulIdentifier","src":"4122:1:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4115:3:31"},"nodeType":"YulFunctionCall","src":"4115:9:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"4110:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"4051:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4054:3:31","type":"","value":"0xf"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4048:2:31"},"nodeType":"YulFunctionCall","src":"4048:10:31"},"nodeType":"YulIf","src":"4045:2:31"},{"body":{"nodeType":"YulBlock","src":"4167:80:31","statements":[{"nodeType":"YulAssignment","src":"4186:14:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"4195:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4198:1:31","type":"","value":"2"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4191:3:31"},"nodeType":"YulFunctionCall","src":"4191:9:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4186:1:31"}]},{"nodeType":"YulAssignment","src":"4218:14:31","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4227:1:31","type":"","value":"2"},{"name":"v","nodeType":"YulIdentifier","src":"4230:1:31"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"4223:3:31"},"nodeType":"YulFunctionCall","src":"4223:9:31"},"variableNames":[{"name":"v","nodeType":"YulIdentifier","src":"4218:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"4159:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4162:3:31","type":"","value":"0x3"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4156:2:31"},"nodeType":"YulFunctionCall","src":"4156:10:31"},"nodeType":"YulIf","src":"4153:2:31"},{"body":{"nodeType":"YulBlock","src":"4275:48:31","statements":[{"nodeType":"YulAssignment","src":"4294:14:31","value":{"arguments":[{"name":"r","nodeType":"YulIdentifier","src":"4303:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4306:1:31","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4299:3:31"},"nodeType":"YulFunctionCall","src":"4299:9:31"},"variableNames":[{"name":"r","nodeType":"YulIdentifier","src":"4294:1:31"}]}]},"condition":{"arguments":[{"name":"v","nodeType":"YulIdentifier","src":"4267:1:31"},{"kind":"number","nodeType":"YulLiteral","src":"4270:3:31","type":"","value":"0x1"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4264:2:31"},"nodeType":"YulFunctionCall","src":"4264:10:31"},"nodeType":"YulIf","src":"4261:2:31"}]},"evmVersion":"istanbul","externalReferences":[{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3403:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3502:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3511:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3629:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3638:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3746:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3755:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3859:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3868:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3970:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"3979:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"4078:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"4087:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"4186:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"4195:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"4294:1:31","valueSize":1},{"declaration":5026,"isOffset":false,"isSlot":false,"src":"4303:1:31","valueSize":1},{"declaration":5023,"isOffset":false,"isSlot":false,"src":"3356:1:31","valueSize":1}],"id":5028,"nodeType":"InlineAssembly","src":"3323:1011:31"}]},"documentation":{"id":5021,"nodeType":"StructuredDocumentation","src":"3065:182:31","text":" @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0. Adapted from OZ 4.x for 0.7.6 compatibility using assembly."},"id":5030,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nodeType":"FunctionDefinition","parameters":{"id":5024,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5023,"mutability":"mutable","name":"x","nodeType":"VariableDeclaration","scope":5030,"src":"3267:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5022,"name":"uint256","nodeType":"ElementaryTypeName","src":"3267:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3266:11:31"},"returnParameters":{"id":5027,"nodeType":"ParameterList","parameters":[{"constant":false,"id":5026,"mutability":"mutable","name":"r","nodeType":"VariableDeclaration","scope":5030,"src":"3301:9:31","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":5025,"name":"uint256","nodeType":"ElementaryTypeName","src":"3301:7:31","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3300:11:31"},"scope":5031,"src":"3253:1088:31","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":5032,"src":"350:3994:31"}],"src":"33:4313:31"},"id":31}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.","kind":"dev","methods":{"constructor":{"details":"Initializes the contract setting the deployer as the initial owner."},"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"@openzeppelin/contracts/access/Ownable.sol:Ownable","label":"_owner","offset":0,"slot":"0","type":"t_address"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.","kind":"dev","methods":{"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/math/SafeMath.sol":{"SafeMath":{"abi":[],"devdoc":{"details":"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc2406160662be805811c54d8cfe42ab8db8e41052833986db5c0098d97f0e6564736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0x24 MOD AND MOD PUSH3 0xBE8058 GT 0xC5 0x4D DUP13 INVALID TIMESTAMP 0xAB DUP14 0xB8 0xE4 LT MSTORE DUP4 CODECOPY DUP7 0xDB 0x5C STOP SWAP9 0xD9 PUSH32 0xE6564736F6C6343000706003300000000000000000000000000000000000000 ","sourceMap":"630:6594:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220bc2406160662be805811c54d8cfe42ab8db8e41052833986db5c0098d97f0e6564736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBC 0x24 MOD AND MOD PUSH3 0xBE8058 GT 0xC5 0x4D DUP13 INVALID TIMESTAMP 0xAB DUP14 0xB8 0xE4 LT MSTORE DUP4 CODECOPY DUP7 0xDB 0x5C STOP SWAP9 0xD9 PUSH32 0xE6564736F6C6343000706003300000000000000000000000000000000000000 ","sourceMap":"630:6594:2:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"add(uint256,uint256)":"infinite","div(uint256,uint256)":"infinite","div(uint256,uint256,string memory)":"infinite","mod(uint256,uint256)":"infinite","mod(uint256,uint256,string memory)":"infinite","mul(uint256,uint256)":"infinite","sub(uint256,uint256)":"infinite","sub(uint256,uint256,string memory)":"infinite","tryAdd(uint256,uint256)":"infinite","tryDiv(uint256,uint256)":"infinite","tryMod(uint256,uint256)":"infinite","tryMul(uint256,uint256)":"infinite","trySub(uint256,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's arithmetic operations with added overflow checks. Arithmetic operations in Solidity wrap on overflow. This can easily result in bugs, because programmers usually assume that an overflow raises an error, which is the standard behavior in high level programming languages. `SafeMath` restores this intuition by reverting the transaction when an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/math/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Interface of the ERC20 standard as defined in the EIP.","events":{"Approval(address,address,uint256)":{"details":"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."},"Transfer(address,address,uint256)":{"details":"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."}},"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC20/SafeERC20.sol":{"SafeERC20":{"abi":[],"devdoc":{"details":"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.","kind":"dev","methods":{},"title":"SafeERC20","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e02cf6ce8be804e958f4817ae7a6154040ff1dbd19c49d4ebfab5a7c5a57570f64736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x2C 0xF6 0xCE DUP12 0xE8 DIV 0xE9 PC DELEGATECALL DUP2 PUSH27 0xE7A6154040FF1DBD19C49D4EBFAB5A7C5A57570F64736F6C634300 SMOD MOD STOP CALLER ","sourceMap":"616:3104:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220e02cf6ce8be804e958f4817ae7a6154040ff1dbd19c49d4ebfab5a7c5a57570f64736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xE0 0x2C 0xF6 0xCE DUP12 0xE8 DIV 0xE9 PC DELEGATECALL DUP2 PUSH27 0xE7A6154040FF1DBD19C49D4EBFAB5A7C5A57570F64736F6C634300 SMOD MOD STOP CALLER ","sourceMap":"616:3104:4:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_callOptionalReturn(contract IERC20,bytes memory)":"infinite","safeApprove(contract IERC20,address,uint256)":"infinite","safeDecreaseAllowance(contract IERC20,address,uint256)":"infinite","safeIncreaseAllowance(contract IERC20,address,uint256)":"infinite","safeTransfer(contract IERC20,address,uint256)":"infinite","safeTransferFrom(contract IERC20,address,address,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721.sol":{"IERC721":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"Required interface of an ERC721 compliant contract.","events":{"Approval(address,address,uint256)":{"details":"Emitted when `owner` enables `approved` to manage the `tokenId` token."},"ApprovalForAll(address,address,bool)":{"details":"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."},"Transfer(address,address,uint256)":{"details":"Emitted when `tokenId` token is transferred from `from` to `to`."}},"kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol":{"IERC721Enumerable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional enumeration extension","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional enumeration extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":\"IERC721Enumerable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol":{"IERC721Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"details":"See https://eips.ethereum.org/EIPS/eip-721","kind":"dev","methods":{"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"symbol()":{"details":"Returns the token collection symbol."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC-721 Non-Fungible Token Standard, optional metadata extension","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","name()":"06fdde03","ownerOf(uint256)":"6352211e","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","symbol()":"95d89b41","tokenURI(uint256)":"c87b56dd","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"See https://eips.ethereum.org/EIPS/eip-721\",\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC-721 Non-Fungible Token Standard, optional metadata extension\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":\"IERC721Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Address.sol":{"Address":{"abi":[],"devdoc":{"details":"Collection of functions related to the address type","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e07463a8daede35bf991699d673badcc366d6963c7b29d5103ec99548e46dc164736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x7463A8DAEDE35BF991699D673BADC 0xC3 PUSH7 0xD6963C7B29D510 RETURNDATACOPY 0xC9 SWAP6 0x48 0xE4 PUSH14 0xC164736F6C634300070600330000 ","sourceMap":"134:7684:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212206e07463a8daede35bf991699d673badcc366d6963c7b29d5103ec99548e46dc164736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH15 0x7463A8DAEDE35BF991699D673BADC 0xC3 PUSH7 0xD6963C7B29D510 RETURNDATACOPY 0xC9 SWAP6 0x48 0xE4 PUSH14 0xC164736F6C634300070600330000 ","sourceMap":"134:7684:8:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"_verifyCallResult(bool,bytes memory,string memory)":"infinite","functionCall(address,bytes memory)":"infinite","functionCall(address,bytes memory,string memory)":"infinite","functionCallWithValue(address,bytes memory,uint256)":"infinite","functionCallWithValue(address,bytes memory,uint256,string memory)":"infinite","functionDelegateCall(address,bytes memory)":"infinite","functionDelegateCall(address,bytes memory,string memory)":"infinite","functionStaticCall(address,bytes memory)":"infinite","functionStaticCall(address,bytes memory,string memory)":"infinite","isContract(address)":"infinite","sendValue(address payable,uint256)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"ReentrancyGuard":{"abi":[],"devdoc":{"details":"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].","kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":1271,"contract":"@openzeppelin/contracts/utils/ReentrancyGuard.sol:ReentrancyGuard","label":"_status","offset":0,"slot":"0","type":"t_uint256"}],"types":{"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol":{"IUniswapV3Factory":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":true,"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"FeeAmountEnabled","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"oldOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnerChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token0","type":"address"},{"indexed":true,"internalType":"address","name":"token1","type":"address"},{"indexed":true,"internalType":"uint24","name":"fee","type":"uint24"},{"indexed":false,"internalType":"int24","name":"tickSpacing","type":"int24"},{"indexed":false,"internalType":"address","name":"pool","type":"address"}],"name":"PoolCreated","type":"event"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"createPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickSpacing","type":"int24"}],"name":"enableFeeAmount","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"feeAmountTickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"tokenA","type":"address"},{"internalType":"address","name":"tokenB","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"}],"name":"getPool","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_owner","type":"address"}],"name":"setOwner","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"params":{"fee":"The enabled fee, denominated in hundredths of a bip","tickSpacing":"The minimum number of ticks between initialized ticks for pools created with the given fee"}},"OwnerChanged(address,address)":{"params":{"newOwner":"The owner after the owner was changed","oldOwner":"The owner before the owner was changed"}},"PoolCreated(address,address,uint24,int24,address)":{"params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","pool":"The address of the created pool","tickSpacing":"The minimum number of ticks between initialized ticks","token0":"The first token of the pool by address sort order","token1":"The second token of the pool by address sort order"}}},"kind":"dev","methods":{"createPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.","params":{"fee":"The desired fee for the pool","tokenA":"One of the two tokens in the desired pool","tokenB":"The other of the two tokens in the desired pool"},"returns":{"pool":"The address of the newly created pool"}},"enableFeeAmount(uint24,int24)":{"details":"Fee amounts may never be removed once enabled","params":{"fee":"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)","tickSpacing":"The spacing between ticks to be enforced for all pools created with the given fee amount"}},"feeAmountTickSpacing(uint24)":{"details":"A fee amount can never be removed, so this value should be hard coded or cached in the calling context","params":{"fee":"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee"},"returns":{"_0":"The tick spacing"}},"getPool(address,address,uint24)":{"details":"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order","params":{"fee":"The fee collected upon every swap in the pool, denominated in hundredths of a bip","tokenA":"The contract address of either token0 or token1","tokenB":"The contract address of the other token"},"returns":{"pool":"The pool address"}},"owner()":{"details":"Can be changed by the current owner via setOwner","returns":{"_0":"The address of the factory owner"}},"setOwner(address)":{"details":"Must be called by the current owner","params":{"_owner":"The new owner of the factory"}}},"title":"The interface for the Uniswap V3 Factory","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createPool(address,address,uint24)":"a1671295","enableFeeAmount(uint24,int24)":"8a7c195f","feeAmountTickSpacing(uint24)":"22afcccb","getPool(address,address,uint24)":"1698ee82","owner()":"8da5cb5b","setOwner(address)":"13af4035"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"FeeAmountEnabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"name\":\"PoolCreated\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"createPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickSpacing\",\"type\":\"int24\"}],\"name\":\"enableFeeAmount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"feeAmountTickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenA\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenB\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"}],\"name\":\"getPool\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks for pools created with the given fee\"}},\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"The owner after the owner was changed\",\"oldOwner\":\"The owner before the owner was changed\"}},\"PoolCreated(address,address,uint24,int24,address)\":{\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"pool\":\"The address of the created pool\",\"tickSpacing\":\"The minimum number of ticks between initialized ticks\",\"token0\":\"The first token of the pool by address sort order\",\"token1\":\"The second token of the pool by address sort order\"}}},\"kind\":\"dev\",\"methods\":{\"createPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments are invalid.\",\"params\":{\"fee\":\"The desired fee for the pool\",\"tokenA\":\"One of the two tokens in the desired pool\",\"tokenB\":\"The other of the two tokens in the desired pool\"},\"returns\":{\"pool\":\"The address of the newly created pool\"}},\"enableFeeAmount(uint24,int24)\":{\"details\":\"Fee amounts may never be removed once enabled\",\"params\":{\"fee\":\"The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\",\"tickSpacing\":\"The spacing between ticks to be enforced for all pools created with the given fee amount\"}},\"feeAmountTickSpacing(uint24)\":{\"details\":\"A fee amount can never be removed, so this value should be hard coded or cached in the calling context\",\"params\":{\"fee\":\"The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\"},\"returns\":{\"_0\":\"The tick spacing\"}},\"getPool(address,address,uint24)\":{\"details\":\"tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\",\"params\":{\"fee\":\"The fee collected upon every swap in the pool, denominated in hundredths of a bip\",\"tokenA\":\"The contract address of either token0 or token1\",\"tokenB\":\"The contract address of the other token\"},\"returns\":{\"pool\":\"The pool address\"}},\"owner()\":{\"details\":\"Can be changed by the current owner via setOwner\",\"returns\":{\"_0\":\"The address of the factory owner\"}},\"setOwner(address)\":{\"details\":\"Must be called by the current owner\",\"params\":{\"_owner\":\"The new owner of the factory\"}}},\"title\":\"The interface for the Uniswap V3 Factory\",\"version\":1},\"userdoc\":{\"events\":{\"FeeAmountEnabled(uint24,int24)\":{\"notice\":\"Emitted when a new fee amount is enabled for pool creation via the factory\"},\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of the factory is changed\"},\"PoolCreated(address,address,uint24,int24,address)\":{\"notice\":\"Emitted when a pool is created\"}},\"kind\":\"user\",\"methods\":{\"createPool(address,address,uint24)\":{\"notice\":\"Creates a pool for the given two tokens and fee\"},\"enableFeeAmount(uint24,int24)\":{\"notice\":\"Enables a fee amount with the given tickSpacing\"},\"feeAmountTickSpacing(uint24)\":{\"notice\":\"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\"},\"getPool(address,address,uint24)\":{\"notice\":\"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\"},\"owner()\":{\"notice\":\"Returns the current owner of the factory\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of the factory\"}},\"notice\":\"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":\"IUniswapV3Factory\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"FeeAmountEnabled(uint24,int24)":{"notice":"Emitted when a new fee amount is enabled for pool creation via the factory"},"OwnerChanged(address,address)":{"notice":"Emitted when the owner of the factory is changed"},"PoolCreated(address,address,uint24,int24,address)":{"notice":"Emitted when a pool is created"}},"kind":"user","methods":{"createPool(address,address,uint24)":{"notice":"Creates a pool for the given two tokens and fee"},"enableFeeAmount(uint24,int24)":{"notice":"Enables a fee amount with the given tickSpacing"},"feeAmountTickSpacing(uint24)":{"notice":"Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled"},"getPool(address,address,uint24)":{"notice":"Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist"},"owner()":{"notice":"Returns the current owner of the factory"},"setOwner(address)":{"notice":"Updates the owner of the factory"}},"notice":"The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees","version":1}}},"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol":{"IUniswapV3Pool":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"details":"The pool interface is broken up into many smaller pieces","kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"The interface for a Uniswap V3 Pool","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","collectProtocol(address,uint128,uint128)":"85b66729","factory()":"c45a0155","fee()":"ddca3f43","feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","liquidity()":"1a686502","maxLiquidityPerTick()":"70cf754a","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","observations(uint256)":"252c09d7","observe(uint32[])":"883bdbfd","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","setFeeProtocol(uint8,uint8)":"8206a4d1","slot0()":"3850c7bd","snapshotCumulativesInside(int24,int24)":"a38807f2","swap(address,bool,int256,uint160,bytes)":"128acb08","tickBitmap(int16)":"5339c296","tickSpacing()":"d0c93a7c","ticks(int24)":"f30dba93","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The pool interface is broken up into many smaller pieces\",\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"The interface for a Uniswap V3 Pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":\"IUniswapV3Pool\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"tickSpacing()":{"notice":"The pool tick spacing"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform to the ERC20 specification","version":1}}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol":{"IUniswapV3MintCallback":{"abi":[{"inputs":[{"internalType":"uint256","name":"amount0Owed","type":"uint256"},{"internalType":"uint256","name":"amount1Owed","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3MintCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"uniswapV3MintCallback(uint256,uint256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.","params":{"amount0Owed":"The amount of token0 due to the pool for the minted liquidity","amount1Owed":"The amount of token1 due to the pool for the minted liquidity","data":"Any data passed through by the caller via the IUniswapV3PoolActions#mint call"}}},"title":"Callback for IUniswapV3PoolActions#mint","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uniswapV3MintCallback(uint256,uint256,bytes)":"d3487997"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the minted liquidity. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\",\"params\":{\"amount0Owed\":\"The amount of token0 due to the pool for the minted liquidity\",\"amount1Owed\":\"The amount of token1 due to the pool for the minted liquidity\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#mint call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#mint\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3MintCallback(uint256,uint256,bytes)\":{\"notice\":\"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#mint must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":\"IUniswapV3MintCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#mint\\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\\ninterface IUniswapV3MintCallback {\\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#mint call\\n    function uniswapV3MintCallback(\\n        uint256 amount0Owed,\\n        uint256 amount1Owed,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"uniswapV3MintCallback(uint256,uint256,bytes)":{"notice":"Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint."}},"notice":"Any contract that calls IUniswapV3PoolActions#mint must implement this interface","version":1}}},"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol":{"IUniswapV3SwapCallback":{"abi":[{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Callback for IUniswapV3PoolActions#swap","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Callback for IUniswapV3PoolActions#swap\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Any contract that calls IUniswapV3PoolActions#swap must implement this interface\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":\"IUniswapV3SwapCallback\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Any contract that calls IUniswapV3PoolActions#swap must implement this interface","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol":{"IUniswapV3PoolActions":{"abi":[{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"}],"name":"burn","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collect","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"flash","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"}],"name":"increaseObservationCardinalityNext","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"initialize","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"amount","type":"uint128"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"mint","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"bool","name":"zeroForOne","type":"bool"},{"internalType":"int256","name":"amountSpecified","type":"int256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"swap","outputs":[{"internalType":"int256","name":"amount0","type":"int256"},{"internalType":"int256","name":"amount1","type":"int256"}],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"burn(int24,int24,uint128)":{"details":"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect","params":{"amount":"How much liquidity to burn","tickLower":"The lower tick of the position for which to burn liquidity","tickUpper":"The upper tick of the position for which to burn liquidity"},"returns":{"amount0":"The amount of token0 sent to the recipient","amount1":"The amount of token1 sent to the recipient"}},"collect(address,int24,int24,uint128,uint128)":{"details":"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.","params":{"amount0Requested":"How much token0 should be withdrawn from the fees owed","amount1Requested":"How much token1 should be withdrawn from the fees owed","recipient":"The address which should receive the fees collected","tickLower":"The lower tick of the position for which to collect fees","tickUpper":"The upper tick of the position for which to collect fees"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"flash(address,uint256,uint256,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback","params":{"amount0":"The amount of token0 to send","amount1":"The amount of token1 to send","data":"Any data to be passed through to the callback","recipient":"The address which will receive the token0 and token1 amounts"}},"increaseObservationCardinalityNext(uint16)":{"details":"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.","params":{"observationCardinalityNext":"The desired minimum number of observations for the pool to store"}},"initialize(uint160)":{"details":"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value","params":{"sqrtPriceX96":"the initial sqrt price of the pool as a Q64.96"}},"mint(address,int24,int24,uint128,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.","params":{"amount":"The amount of liquidity to mint","data":"Any data that should be passed through to the callback","recipient":"The address for which the liquidity will be created","tickLower":"The lower tick of the position in which to add liquidity","tickUpper":"The upper tick of the position in which to add liquidity"},"returns":{"amount0":"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback","amount1":"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback"}},"swap(address,bool,int256,uint160,bytes)":{"details":"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback","params":{"amountSpecified":"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)","data":"Any data to be passed through to the callback","recipient":"The address to receive the output of the swap","sqrtPriceLimitX96":"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap","zeroForOne":"The direction of the swap, true for token0 to token1, false for token1 to token0"},"returns":{"amount0":"The delta of the balance of token0 of the pool, exact when negative, minimum when positive","amount1":"The delta of the balance of token1 of the pool, exact when negative, minimum when positive"}}},"title":"Permissionless pool actions","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"burn(int24,int24,uint128)":"a34123a7","collect(address,int24,int24,uint128,uint128)":"4f1eb3d8","flash(address,uint256,uint256,bytes)":"490e6cbc","increaseObservationCardinalityNext(uint16)":"32148f67","initialize(uint160)":"f637731d","mint(address,int24,int24,uint128,bytes)":"3c8a7d8d","swap(address,bool,int256,uint160,bytes)":"128acb08"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"}],\"name\":\"increaseObservationCardinalityNext\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"zeroForOne\",\"type\":\"bool\"},{\"internalType\":\"int256\",\"name\":\"amountSpecified\",\"type\":\"int256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"burn(int24,int24,uint128)\":{\"details\":\"Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0Fees must be collected separately via a call to #collect\",\"params\":{\"amount\":\"How much liquidity to burn\",\"tickLower\":\"The lower tick of the position for which to burn liquidity\",\"tickUpper\":\"The upper tick of the position for which to burn liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 sent to the recipient\",\"amount1\":\"The amount of token1 sent to the recipient\"}},\"collect(address,int24,int24,uint128,uint128)\":{\"details\":\"Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity. Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\",\"params\":{\"amount0Requested\":\"How much token0 should be withdrawn from the fees owed\",\"amount1Requested\":\"How much token1 should be withdrawn from the fees owed\",\"recipient\":\"The address which should receive the fees collected\",\"tickLower\":\"The lower tick of the position for which to collect fees\",\"tickUpper\":\"The upper tick of the position for which to collect fees\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"flash(address,uint256,uint256,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallbackCan be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling with 0 amount{0,1} and sending the donation amount(s) from the callback\",\"params\":{\"amount0\":\"The amount of token0 to send\",\"amount1\":\"The amount of token1 to send\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address which will receive the token0 and token1 amounts\"}},\"increaseObservationCardinalityNext(uint16)\":{\"details\":\"This method is no-op if the pool already has an observationCardinalityNext greater than or equal to the input observationCardinalityNext.\",\"params\":{\"observationCardinalityNext\":\"The desired minimum number of observations for the pool to store\"}},\"initialize(uint160)\":{\"details\":\"Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\",\"params\":{\"sqrtPriceX96\":\"the initial sqrt price of the pool as a Q64.96\"}},\"mint(address,int24,int24,uint128,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends on tickLower, tickUpper, the amount of liquidity, and the current price.\",\"params\":{\"amount\":\"The amount of liquidity to mint\",\"data\":\"Any data that should be passed through to the callback\",\"recipient\":\"The address for which the liquidity will be created\",\"tickLower\":\"The lower tick of the position in which to add liquidity\",\"tickUpper\":\"The upper tick of the position in which to add liquidity\"},\"returns\":{\"amount0\":\"The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\",\"amount1\":\"The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\"}},\"swap(address,bool,int256,uint160,bytes)\":{\"details\":\"The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\",\"params\":{\"amountSpecified\":\"The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\",\"data\":\"Any data to be passed through to the callback\",\"recipient\":\"The address to receive the output of the swap\",\"sqrtPriceLimitX96\":\"The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this value after the swap. If one for zero, the price cannot be greater than this value after the swap\",\"zeroForOne\":\"The direction of the swap, true for token0 to token1, false for token1 to token0\"},\"returns\":{\"amount0\":\"The delta of the balance of token0 of the pool, exact when negative, minimum when positive\",\"amount1\":\"The delta of the balance of token1 of the pool, exact when negative, minimum when positive\"}}},\"title\":\"Permissionless pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"burn(int24,int24,uint128)\":{\"notice\":\"Burn liquidity from the sender and account tokens owed for the liquidity to the position\"},\"collect(address,int24,int24,uint128,uint128)\":{\"notice\":\"Collects tokens owed to a position\"},\"flash(address,uint256,uint256,bytes)\":{\"notice\":\"Receive token0 and/or token1 and pay it back, plus a fee, in the callback\"},\"increaseObservationCardinalityNext(uint16)\":{\"notice\":\"Increase the maximum number of price and liquidity observations that this pool will store\"},\"initialize(uint160)\":{\"notice\":\"Sets the initial price for the pool\"},\"mint(address,int24,int24,uint128,bytes)\":{\"notice\":\"Adds liquidity for the given recipient/tickLower/tickUpper position\"},\"swap(address,bool,int256,uint160,bytes)\":{\"notice\":\"Swap token0 for token1, or token1 for token0\"}},\"notice\":\"Contains pool methods that can be called by anyone\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":\"IUniswapV3PoolActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"burn(int24,int24,uint128)":{"notice":"Burn liquidity from the sender and account tokens owed for the liquidity to the position"},"collect(address,int24,int24,uint128,uint128)":{"notice":"Collects tokens owed to a position"},"flash(address,uint256,uint256,bytes)":{"notice":"Receive token0 and/or token1 and pay it back, plus a fee, in the callback"},"increaseObservationCardinalityNext(uint16)":{"notice":"Increase the maximum number of price and liquidity observations that this pool will store"},"initialize(uint160)":{"notice":"Sets the initial price for the pool"},"mint(address,int24,int24,uint128,bytes)":{"notice":"Adds liquidity for the given recipient/tickLower/tickUpper position"},"swap(address,bool,int256,uint160,bytes)":{"notice":"Swap token0 for token1, or token1 for token0"}},"notice":"Contains pool methods that can be called by anyone","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol":{"IUniswapV3PoolDerivedState":{"abi":[{"inputs":[{"internalType":"uint32[]","name":"secondsAgos","type":"uint32[]"}],"name":"observe","outputs":[{"internalType":"int56[]","name":"tickCumulatives","type":"int56[]"},{"internalType":"uint160[]","name":"secondsPerLiquidityCumulativeX128s","type":"uint160[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"}],"name":"snapshotCumulativesInside","outputs":[{"internalType":"int56","name":"tickCumulativeInside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityInsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsInside","type":"uint32"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"observe(uint32[])":{"details":"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.","params":{"secondsAgos":"From how long ago each cumulative tick and liquidity value should be returned"},"returns":{"secondsPerLiquidityCumulativeX128s":"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp","tickCumulatives":"Cumulative tick values as of each `secondsAgos` from the current block timestamp"}},"snapshotCumulativesInside(int24,int24)":{"details":"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.","params":{"tickLower":"The lower tick of the range","tickUpper":"The upper tick of the range"},"returns":{"secondsInside":"The snapshot of seconds per liquidity for the range","secondsPerLiquidityInsideX128":"The snapshot of seconds per liquidity for the range","tickCumulativeInside":"The snapshot of the tick accumulator for the range"}}},"title":"Pool state that is not stored","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"observe(uint32[])":"883bdbfd","snapshotCumulativesInside(int24,int24)":"a38807f2"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint32[]\",\"name\":\"secondsAgos\",\"type\":\"uint32[]\"}],\"name\":\"observe\",\"outputs\":[{\"internalType\":\"int56[]\",\"name\":\"tickCumulatives\",\"type\":\"int56[]\"},{\"internalType\":\"uint160[]\",\"name\":\"secondsPerLiquidityCumulativeX128s\",\"type\":\"uint160[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"}],\"name\":\"snapshotCumulativesInside\",\"outputs\":[{\"internalType\":\"int56\",\"name\":\"tickCumulativeInside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityInsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsInside\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"observe(uint32[])\":{\"details\":\"To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick, you must call it with secondsAgos = [3600, 0].The time weighted average tick represents the geometric time weighted average price of the pool, in log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\",\"params\":{\"secondsAgos\":\"From how long ago each cumulative tick and liquidity value should be returned\"},\"returns\":{\"secondsPerLiquidityCumulativeX128s\":\"Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block timestamp\",\"tickCumulatives\":\"Cumulative tick values as of each `secondsAgos` from the current block timestamp\"}},\"snapshotCumulativesInside(int24,int24)\":{\"details\":\"Snapshots must only be compared to other snapshots, taken over a period for which a position existed. I.e., snapshots cannot be compared if a position is not held for the entire period between when the first snapshot is taken and the second snapshot is taken.\",\"params\":{\"tickLower\":\"The lower tick of the range\",\"tickUpper\":\"The upper tick of the range\"},\"returns\":{\"secondsInside\":\"The snapshot of seconds per liquidity for the range\",\"secondsPerLiquidityInsideX128\":\"The snapshot of seconds per liquidity for the range\",\"tickCumulativeInside\":\"The snapshot of the tick accumulator for the range\"}}},\"title\":\"Pool state that is not stored\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"observe(uint32[])\":{\"notice\":\"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\"},\"snapshotCumulativesInside(int24,int24)\":{\"notice\":\"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\"}},\"notice\":\"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":\"IUniswapV3PoolDerivedState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"observe(uint32[])":{"notice":"Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp"},"snapshotCumulativesInside(int24,int24)":{"notice":"Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range"}},"notice":"Contains view functions to provide information about the pool that is computed rather than stored on the blockchain. The functions here may have variable gas costs.","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol":{"IUniswapV3PoolEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Burn","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint128","name":"amount0","type":"uint128"},{"indexed":false,"internalType":"uint128","name":"amount1","type":"uint128"}],"name":"CollectProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"paid1","type":"uint256"}],"name":"Flash","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextOld","type":"uint16"},{"indexed":false,"internalType":"uint16","name":"observationCardinalityNextNew","type":"uint16"}],"name":"IncreaseObservationCardinalityNext","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Initialize","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":true,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"amount","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Mint","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint8","name":"feeProtocol0Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1Old","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol0New","type":"uint8"},{"indexed":false,"internalType":"uint8","name":"feeProtocol1New","type":"uint8"}],"name":"SetFeeProtocol","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"int256","name":"amount0","type":"int256"},{"indexed":false,"internalType":"int256","name":"amount1","type":"int256"},{"indexed":false,"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"int24","name":"tick","type":"int24"}],"name":"Swap","type":"event"}],"devdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"details":"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect","params":{"amount":"The amount of liquidity to remove","amount0":"The amount of token0 withdrawn","amount1":"The amount of token1 withdrawn","owner":"The owner of the position for which liquidity is removed","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"Collect(address,address,int24,int24,uint128,uint128)":{"details":"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees","params":{"amount0":"The amount of token0 fees collected","amount1":"The amount of token1 fees collected","owner":"The owner of the position for which fees are collected","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"CollectProtocol(address,address,uint128,uint128)":{"params":{"amount0":"The amount of token1 protocol fees that is withdrawn","recipient":"The address that receives the collected protocol fees","sender":"The address that collects the protocol fees"}},"Flash(address,address,uint256,uint256,uint256,uint256)":{"params":{"amount0":"The amount of token0 that was flashed","amount1":"The amount of token1 that was flashed","paid0":"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee","paid1":"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee","recipient":"The address that received the tokens from flash","sender":"The address that initiated the swap call, and that received the callback"}},"IncreaseObservationCardinalityNext(uint16,uint16)":{"details":"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.","params":{"observationCardinalityNextNew":"The updated value of the next observation cardinality","observationCardinalityNextOld":"The previous value of the next observation cardinality"}},"Initialize(uint160,int24)":{"details":"Mint/Burn/Swap cannot be emitted by the pool before Initialize","params":{"sqrtPriceX96":"The initial sqrt price of the pool, as a Q64.96","tick":"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool"}},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"params":{"amount":"The amount of liquidity minted to the position range","amount0":"How much token0 was required for the minted liquidity","amount1":"How much token1 was required for the minted liquidity","owner":"The owner of the position and recipient of any minted liquidity","sender":"The address that minted the liquidity","tickLower":"The lower tick of the position","tickUpper":"The upper tick of the position"}},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"params":{"feeProtocol0New":"The updated value of the token0 protocol fee","feeProtocol0Old":"The previous value of the token0 protocol fee","feeProtocol1New":"The updated value of the token1 protocol fee","feeProtocol1Old":"The previous value of the token1 protocol fee"}},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"params":{"amount0":"The delta of the token0 balance of the pool","amount1":"The delta of the token1 balance of the pool","liquidity":"The liquidity of the pool after the swap","recipient":"The address that received the output of the swap","sender":"The address that initiated the swap call, and that received the callback","sqrtPriceX96":"The sqrt(price) of the pool after the swap, as a Q64.96","tick":"The log base 1.0001 of price of the pool after the swap"}}},"kind":"dev","methods":{},"title":"Events emitted by a pool","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"name\":\"CollectProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"paid1\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextOld\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"observationCardinalityNextNew\",\"type\":\"uint16\"}],\"name\":\"IncreaseObservationCardinalityNext\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":true,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"amount\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1Old\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol0New\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"feeProtocol1New\",\"type\":\"uint8\"}],\"name\":\"SetFeeProtocol\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount0\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"amount1\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"Swap\",\"type\":\"event\"}],\"devdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"details\":\"Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\",\"params\":{\"amount\":\"The amount of liquidity to remove\",\"amount0\":\"The amount of token0 withdrawn\",\"amount1\":\"The amount of token1 withdrawn\",\"owner\":\"The owner of the position for which liquidity is removed\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"details\":\"Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\",\"params\":{\"amount0\":\"The amount of token0 fees collected\",\"amount1\":\"The amount of token1 fees collected\",\"owner\":\"The owner of the position for which fees are collected\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"CollectProtocol(address,address,uint128,uint128)\":{\"params\":{\"amount0\":\"The amount of token1 protocol fees that is withdrawn\",\"recipient\":\"The address that receives the collected protocol fees\",\"sender\":\"The address that collects the protocol fees\"}},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was flashed\",\"amount1\":\"The amount of token1 that was flashed\",\"paid0\":\"The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\",\"paid1\":\"The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\",\"recipient\":\"The address that received the tokens from flash\",\"sender\":\"The address that initiated the swap call, and that received the callback\"}},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"details\":\"observationCardinalityNext is not the observation cardinality until an observation is written at the index just before a mint/swap/burn.\",\"params\":{\"observationCardinalityNextNew\":\"The updated value of the next observation cardinality\",\"observationCardinalityNextOld\":\"The previous value of the next observation cardinality\"}},\"Initialize(uint160,int24)\":{\"details\":\"Mint/Burn/Swap cannot be emitted by the pool before Initialize\",\"params\":{\"sqrtPriceX96\":\"The initial sqrt price of the pool, as a Q64.96\",\"tick\":\"The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\"}},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"params\":{\"amount\":\"The amount of liquidity minted to the position range\",\"amount0\":\"How much token0 was required for the minted liquidity\",\"amount1\":\"How much token1 was required for the minted liquidity\",\"owner\":\"The owner of the position and recipient of any minted liquidity\",\"sender\":\"The address that minted the liquidity\",\"tickLower\":\"The lower tick of the position\",\"tickUpper\":\"The upper tick of the position\"}},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"params\":{\"feeProtocol0New\":\"The updated value of the token0 protocol fee\",\"feeProtocol0Old\":\"The previous value of the token0 protocol fee\",\"feeProtocol1New\":\"The updated value of the token1 protocol fee\",\"feeProtocol1Old\":\"The previous value of the token1 protocol fee\"}},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"params\":{\"amount0\":\"The delta of the token0 balance of the pool\",\"amount1\":\"The delta of the token1 balance of the pool\",\"liquidity\":\"The liquidity of the pool after the swap\",\"recipient\":\"The address that received the output of the swap\",\"sender\":\"The address that initiated the swap call, and that received the callback\",\"sqrtPriceX96\":\"The sqrt(price) of the pool after the swap, as a Q64.96\",\"tick\":\"The log base 1.0001 of price of the pool after the swap\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"Events emitted by a pool\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when a position's liquidity is removed\"},\"Collect(address,address,int24,int24,uint128,uint128)\":{\"notice\":\"Emitted when fees are collected by the owner of a position\"},\"CollectProtocol(address,address,uint128,uint128)\":{\"notice\":\"Emitted when the collected protocol fees are withdrawn by the factory owner\"},\"Flash(address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted by the pool for any flashes of token0/token1\"},\"IncreaseObservationCardinalityNext(uint16,uint16)\":{\"notice\":\"Emitted by the pool for increases to the number of observations that can be stored\"},\"Initialize(uint160,int24)\":{\"notice\":\"Emitted exactly once by a pool when #initialize is first called on the pool\"},\"Mint(address,address,int24,int24,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is minted for a given position\"},\"SetFeeProtocol(uint8,uint8,uint8,uint8)\":{\"notice\":\"Emitted when the protocol fee is changed by the pool\"},\"Swap(address,address,int256,int256,uint160,uint128,int24)\":{\"notice\":\"Emitted by the pool for any swaps between token0 and token1\"}},\"kind\":\"user\",\"methods\":{},\"notice\":\"Contains all events emitted by the pool\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":\"IUniswapV3PoolEvents\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Burn(address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when a position's liquidity is removed"},"Collect(address,address,int24,int24,uint128,uint128)":{"notice":"Emitted when fees are collected by the owner of a position"},"CollectProtocol(address,address,uint128,uint128)":{"notice":"Emitted when the collected protocol fees are withdrawn by the factory owner"},"Flash(address,address,uint256,uint256,uint256,uint256)":{"notice":"Emitted by the pool for any flashes of token0/token1"},"IncreaseObservationCardinalityNext(uint16,uint16)":{"notice":"Emitted by the pool for increases to the number of observations that can be stored"},"Initialize(uint160,int24)":{"notice":"Emitted exactly once by a pool when #initialize is first called on the pool"},"Mint(address,address,int24,int24,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is minted for a given position"},"SetFeeProtocol(uint8,uint8,uint8,uint8)":{"notice":"Emitted when the protocol fee is changed by the pool"},"Swap(address,address,int256,int256,uint160,uint128,int24)":{"notice":"Emitted by the pool for any swaps between token0 and token1"}},"kind":"user","methods":{},"notice":"Contains all events emitted by the pool","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol":{"IUniswapV3PoolImmutables":{"abi":[{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"maxLiquidityPerTick","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"factory()":{"returns":{"_0":"The contract address"}},"fee()":{"returns":{"_0":"The fee"}},"maxLiquidityPerTick()":{"details":"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool","returns":{"_0":"The max amount of liquidity per tick"}},"tickSpacing()":{"details":"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.","returns":{"_0":"The tick spacing"}},"token0()":{"returns":{"_0":"The token contract address"}},"token1()":{"returns":{"_0":"The token contract address"}}},"title":"Pool state that never changes","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"factory()":"c45a0155","fee()":"ddca3f43","maxLiquidityPerTick()":"70cf754a","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token1()":"d21220a7"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxLiquidityPerTick\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"factory()\":{\"returns\":{\"_0\":\"The contract address\"}},\"fee()\":{\"returns\":{\"_0\":\"The fee\"}},\"maxLiquidityPerTick()\":{\"details\":\"This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\",\"returns\":{\"_0\":\"The max amount of liquidity per tick\"}},\"tickSpacing()\":{\"details\":\"Ticks can only be used at multiples of this value, minimum of 1 and always positive e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ... This value is an int24 to avoid casting even though it is always positive.\",\"returns\":{\"_0\":\"The tick spacing\"}},\"token0()\":{\"returns\":{\"_0\":\"The token contract address\"}},\"token1()\":{\"returns\":{\"_0\":\"The token contract address\"}}},\"title\":\"Pool state that never changes\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"factory()\":{\"notice\":\"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\"},\"fee()\":{\"notice\":\"The pool's fee in hundredths of a bip, i.e. 1e-6\"},\"maxLiquidityPerTick()\":{\"notice\":\"The maximum amount of position liquidity that can use any tick in the range\"},\"tickSpacing()\":{\"notice\":\"The pool tick spacing\"},\"token0()\":{\"notice\":\"The first of the two tokens of the pool, sorted by address\"},\"token1()\":{\"notice\":\"The second of the two tokens of the pool, sorted by address\"}},\"notice\":\"These parameters are fixed for a pool forever, i.e., the methods will always return the same values\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":\"IUniswapV3PoolImmutables\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"factory()":{"notice":"The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface"},"fee()":{"notice":"The pool's fee in hundredths of a bip, i.e. 1e-6"},"maxLiquidityPerTick()":{"notice":"The maximum amount of position liquidity that can use any tick in the range"},"tickSpacing()":{"notice":"The pool tick spacing"},"token0()":{"notice":"The first of the two tokens of the pool, sorted by address"},"token1()":{"notice":"The second of the two tokens of the pool, sorted by address"}},"notice":"These parameters are fixed for a pool forever, i.e., the methods will always return the same values","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol":{"IUniswapV3PoolOwnerActions":{"abi":[{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Requested","type":"uint128"},{"internalType":"uint128","name":"amount1Requested","type":"uint128"}],"name":"collectProtocol","outputs":[{"internalType":"uint128","name":"amount0","type":"uint128"},{"internalType":"uint128","name":"amount1","type":"uint128"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint8","name":"feeProtocol0","type":"uint8"},{"internalType":"uint8","name":"feeProtocol1","type":"uint8"}],"name":"setFeeProtocol","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"collectProtocol(address,uint128,uint128)":{"params":{"amount0Requested":"The maximum amount of token0 to send, can be 0 to collect fees in only token1","amount1Requested":"The maximum amount of token1 to send, can be 0 to collect fees in only token0","recipient":"The address to which collected protocol fees should be sent"},"returns":{"amount0":"The protocol fee collected in token0","amount1":"The protocol fee collected in token1"}},"setFeeProtocol(uint8,uint8)":{"params":{"feeProtocol0":"new protocol fee for token0 of the pool","feeProtocol1":"new protocol fee for token1 of the pool"}}},"title":"Permissioned pool actions","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"collectProtocol(address,uint128,uint128)":"85b66729","setFeeProtocol(uint8,uint8)":"8206a4d1"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Requested\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Requested\",\"type\":\"uint128\"}],\"name\":\"collectProtocol\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"amount0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1\",\"type\":\"uint128\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"feeProtocol0\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol1\",\"type\":\"uint8\"}],\"name\":\"setFeeProtocol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"params\":{\"amount0Requested\":\"The maximum amount of token0 to send, can be 0 to collect fees in only token1\",\"amount1Requested\":\"The maximum amount of token1 to send, can be 0 to collect fees in only token0\",\"recipient\":\"The address to which collected protocol fees should be sent\"},\"returns\":{\"amount0\":\"The protocol fee collected in token0\",\"amount1\":\"The protocol fee collected in token1\"}},\"setFeeProtocol(uint8,uint8)\":{\"params\":{\"feeProtocol0\":\"new protocol fee for token0 of the pool\",\"feeProtocol1\":\"new protocol fee for token1 of the pool\"}}},\"title\":\"Permissioned pool actions\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"collectProtocol(address,uint128,uint128)\":{\"notice\":\"Collect the protocol fee accrued to the pool\"},\"setFeeProtocol(uint8,uint8)\":{\"notice\":\"Set the denominator of the protocol's % share of the fees\"}},\"notice\":\"Contains pool methods that may only be called by the factory owner\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":\"IUniswapV3PoolOwnerActions\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"collectProtocol(address,uint128,uint128)":{"notice":"Collect the protocol fee accrued to the pool"},"setFeeProtocol(uint8,uint8)":{"notice":"Set the denominator of the protocol's % share of the fees"}},"notice":"Contains pool methods that may only be called by the factory owner","version":1}}},"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol":{"IUniswapV3PoolState":{"abi":[{"inputs":[],"name":"feeGrowthGlobal0X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"feeGrowthGlobal1X128","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"liquidity","outputs":[{"internalType":"uint128","name":"","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"observations","outputs":[{"internalType":"uint32","name":"blockTimestamp","type":"uint32"},{"internalType":"int56","name":"tickCumulative","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityCumulativeX128","type":"uint160"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"key","type":"bytes32"}],"name":"positions","outputs":[{"internalType":"uint128","name":"_liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"protocolFees","outputs":[{"internalType":"uint128","name":"token0","type":"uint128"},{"internalType":"uint128","name":"token1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"slot0","outputs":[{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"},{"internalType":"int24","name":"tick","type":"int24"},{"internalType":"uint16","name":"observationIndex","type":"uint16"},{"internalType":"uint16","name":"observationCardinality","type":"uint16"},{"internalType":"uint16","name":"observationCardinalityNext","type":"uint16"},{"internalType":"uint8","name":"feeProtocol","type":"uint8"},{"internalType":"bool","name":"unlocked","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int16","name":"wordPosition","type":"int16"}],"name":"tickBitmap","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"int24","name":"tick","type":"int24"}],"name":"ticks","outputs":[{"internalType":"uint128","name":"liquidityGross","type":"uint128"},{"internalType":"int128","name":"liquidityNet","type":"int128"},{"internalType":"uint256","name":"feeGrowthOutside0X128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthOutside1X128","type":"uint256"},{"internalType":"int56","name":"tickCumulativeOutside","type":"int56"},{"internalType":"uint160","name":"secondsPerLiquidityOutsideX128","type":"uint160"},{"internalType":"uint32","name":"secondsOutside","type":"uint32"},{"internalType":"bool","name":"initialized","type":"bool"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"feeGrowthGlobal0X128()":{"details":"This value can overflow the uint256"},"feeGrowthGlobal1X128()":{"details":"This value can overflow the uint256"},"liquidity()":{"details":"This value has no relationship to the total liquidity across all ticks"},"observations(uint256)":{"details":"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.","params":{"index":"The element of the observations array to fetch"},"returns":{"blockTimestamp":"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use"}},"positions(bytes32)":{"params":{"key":"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper"},"returns":{"_liquidity":"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke"}},"protocolFees()":{"details":"Protocol fees will never exceed uint128 max in either token"},"slot0()":{"returns":{"sqrtPriceX96":"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy"}},"ticks(int24)":{"params":{"tick":"The tick to look up"},"returns":{"liquidityGross":"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position."}}},"title":"Pool state that can change","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"feeGrowthGlobal0X128()":"f3058399","feeGrowthGlobal1X128()":"46141319","liquidity()":"1a686502","observations(uint256)":"252c09d7","positions(bytes32)":"514ea4bf","protocolFees()":"1ad8b03b","slot0()":"3850c7bd","tickBitmap(int16)":"5339c296","ticks(int24)":"f30dba93"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"feeGrowthGlobal0X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeGrowthGlobal1X128\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"liquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"observations\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"blockTimestamp\",\"type\":\"uint32\"},{\"internalType\":\"int56\",\"name\":\"tickCumulative\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityCumulativeX128\",\"type\":\"uint160\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"_liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFees\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"token0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"token1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slot0\",\"outputs\":[{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"},{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"},{\"internalType\":\"uint16\",\"name\":\"observationIndex\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinality\",\"type\":\"uint16\"},{\"internalType\":\"uint16\",\"name\":\"observationCardinalityNext\",\"type\":\"uint16\"},{\"internalType\":\"uint8\",\"name\":\"feeProtocol\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"unlocked\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int16\",\"name\":\"wordPosition\",\"type\":\"int16\"}],\"name\":\"tickBitmap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int24\",\"name\":\"tick\",\"type\":\"int24\"}],\"name\":\"ticks\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidityGross\",\"type\":\"uint128\"},{\"internalType\":\"int128\",\"name\":\"liquidityNet\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside0X128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthOutside1X128\",\"type\":\"uint256\"},{\"internalType\":\"int56\",\"name\":\"tickCumulativeOutside\",\"type\":\"int56\"},{\"internalType\":\"uint160\",\"name\":\"secondsPerLiquidityOutsideX128\",\"type\":\"uint160\"},{\"internalType\":\"uint32\",\"name\":\"secondsOutside\",\"type\":\"uint32\"},{\"internalType\":\"bool\",\"name\":\"initialized\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"details\":\"This value can overflow the uint256\"},\"feeGrowthGlobal1X128()\":{\"details\":\"This value can overflow the uint256\"},\"liquidity()\":{\"details\":\"This value has no relationship to the total liquidity across all ticks\"},\"observations(uint256)\":{\"details\":\"You most likely want to use #observe() instead of this method to get an observation as of some amount of time ago, rather than at a specific index in the array.\",\"params\":{\"index\":\"The element of the observations array to fetch\"},\"returns\":{\"blockTimestamp\":\"The timestamp of the observation, Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp, Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp, Returns initialized whether the observation has been initialized and the values are safe to use\"}},\"positions(bytes32)\":{\"params\":{\"key\":\"The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\"},\"returns\":{\"_liquidity\":\"The amount of liquidity in the position, Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke, Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke, Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke, Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\"}},\"protocolFees()\":{\"details\":\"Protocol fees will never exceed uint128 max in either token\"},\"slot0()\":{\"returns\":{\"sqrtPriceX96\":\"The current price of the pool as a sqrt(token1/token0) Q64.96 value tick The current tick of the pool, i.e. according to the last tick transition that was run. This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick boundary. observationIndex The index of the last oracle observation that was written, observationCardinality The current maximum number of observations stored in the pool, observationCardinalityNext The next maximum number of observations, to be updated when the observation. feeProtocol The protocol fee for both tokens of the pool. Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0 is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee. unlocked Whether the pool is currently locked to reentrancy\"}},\"ticks(int24)\":{\"params\":{\"tick\":\"The tick to look up\"},\"returns\":{\"liquidityGross\":\"the total amount of position liquidity that uses the pool either as tick lower or tick upper, liquidityNet how much liquidity changes when the pool price crosses the tick, feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0, feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1, tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick, secondsOutside the seconds spent on the other side of the tick from the current tick, initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false. Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0. In addition, these values are only relative and must be used only in comparison to previous snapshots for a specific position.\"}}},\"title\":\"Pool state that can change\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"feeGrowthGlobal0X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\"},\"feeGrowthGlobal1X128()\":{\"notice\":\"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\"},\"liquidity()\":{\"notice\":\"The currently in range liquidity available to the pool\"},\"observations(uint256)\":{\"notice\":\"Returns data about a specific observation index\"},\"positions(bytes32)\":{\"notice\":\"Returns the information about a position by the position's key\"},\"protocolFees()\":{\"notice\":\"The amounts of token0 and token1 that are owed to the protocol\"},\"slot0()\":{\"notice\":\"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally.\"},\"tickBitmap(int16)\":{\"notice\":\"Returns 256 packed tick initialized boolean values. See TickBitmap for more information\"},\"ticks(int24)\":{\"notice\":\"Look up information about a specific tick in the pool\"}},\"notice\":\"These methods compose the pool's state, and can change with any frequency including multiple times per transaction\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":\"IUniswapV3PoolState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"feeGrowthGlobal0X128()":{"notice":"The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool"},"feeGrowthGlobal1X128()":{"notice":"The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool"},"liquidity()":{"notice":"The currently in range liquidity available to the pool"},"observations(uint256)":{"notice":"Returns data about a specific observation index"},"positions(bytes32)":{"notice":"Returns the information about a position by the position's key"},"protocolFees()":{"notice":"The amounts of token0 and token1 that are owed to the protocol"},"slot0()":{"notice":"The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas when accessed externally."},"tickBitmap(int16)":{"notice":"Returns 256 packed tick initialized boolean values. See TickBitmap for more information"},"ticks(int24)":{"notice":"Look up information about a specific tick in the pool"}},"notice":"These methods compose the pool's state, and can change with any frequency including multiple times per transaction","version":1}}},"@uniswap/v3-core/contracts/libraries/TickMath.sol":{"TickMath":{"abi":[],"devdoc":{"kind":"dev","methods":{},"stateVariables":{"MAX_SQRT_RATIO":{"details":"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)"},"MAX_TICK":{"details":"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128"},"MIN_SQRT_RATIO":{"details":"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)"},"MIN_TICK":{"details":"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128"}},"title":"Math library for computing sqrt prices from ticks and vice versa","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9134836b885f0a9fd4b249b400faa10e84305e8ad0ccad36352dc5b2b23307764736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SGT 0x48 CALLDATASIZE 0xB8 DUP6 CREATE 0xA9 REVERT 0x4B 0x24 SWAP12 BLOCKHASH 0xF 0xAA LT 0xE8 NUMBER SDIV 0xE8 0xAD 0xC 0xCA 0xD3 PUSH4 0x52DC5B2B 0x23 ADDRESS PUSH24 0x64736F6C6343000706003300000000000000000000000000 ","sourceMap":"306:8331:21:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d9134836b885f0a9fd4b249b400faa10e84305e8ad0ccad36352dc5b2b23307764736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD9 SGT 0x48 CALLDATASIZE 0xB8 DUP6 CREATE 0xA9 REVERT 0x4B 0x24 SWAP12 BLOCKHASH 0xF 0xAA LT 0xE8 NUMBER SDIV 0xE8 0xAD 0xC 0xCA 0xD3 PUSH4 0x52DC5B2B 0x23 ADDRESS PUSH24 0x64736F6C6343000706003300000000000000000000000000 ","sourceMap":"306:8331:21:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"getSqrtRatioAtTick(int24)":"infinite","getTickAtSqrtRatio(uint160)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"MAX_SQRT_RATIO\":{\"details\":\"The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\"},\"MAX_TICK\":{\"details\":\"The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\"},\"MIN_SQRT_RATIO\":{\"details\":\"The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\"},\"MIN_TICK\":{\"details\":\"The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\"}},\"title\":\"Math library for computing sqrt prices from ticks and vice versa\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":\"TickMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Math library for computing sqrt prices from ticks and vice versa\\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\\n/// prices between 2**-128 and 2**128\\nlibrary TickMath {\\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\\n    int24 internal constant MIN_TICK = -887272;\\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\\n    int24 internal constant MAX_TICK = -MIN_TICK;\\n\\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\\n\\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\\n    /// @dev Throws if |tick| > max tick\\n    /// @param tick The input tick for the above formula\\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\\n    /// at the given tick\\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\\n        require(absTick <= uint256(MAX_TICK), 'T');\\n\\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\\n\\n        if (tick > 0) ratio = type(uint256).max / ratio;\\n\\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\\n    }\\n\\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\\n    /// ever return.\\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\\n        // second inequality must be < because the price can never reach the price at the max tick\\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\\n\\n        uint256 r = ratio;\\n        uint256 msb = 0;\\n\\n        assembly {\\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(5, gt(r, 0xFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(4, gt(r, 0xFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(3, gt(r, 0xFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(2, gt(r, 0xF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(1, gt(r, 0x3))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := gt(r, 0x1)\\n            msb := or(msb, f)\\n        }\\n\\n        if (msb >= 128) r = ratio >> (msb - 127);\\n        else r = ratio << (127 - msb);\\n\\n        int256 log_2 = (int256(msb) - 128) << 64;\\n\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(63, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(62, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(61, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(60, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(59, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(58, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(57, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(56, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(55, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(54, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(53, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(52, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(51, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(50, f))\\n        }\\n\\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\\n\\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\\n\\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\\n    }\\n}\\n\",\"keccak256\":\"0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports prices between 2**-128 and 2**128","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol":{"IERC721Permit":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"returns":{"_0":"The domain seperator used in encoding of permit signature"}},"PERMIT_TYPEHASH()":{"returns":{"_0":"The typehash for the permit"}},"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"deadline":"The deadline timestamp by which the call must be mined for the approve to work","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","spender":"The account that is being approved","tokenId":"The ID of the token that is being approved for spending","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`"}},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."}},"title":"ERC721 with permit","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","getApproved(uint256)":"081812fc","isApprovedForAll(address,address)":"e985e9c5","ownerOf(uint256)":"6352211e","permit(address,uint256,uint256,uint8,bytes32,bytes32)":"7ac2ff7b","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"title\":\"ERC721 with permit\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"}},\"notice\":\"Extension to ERC721 that includes a permit function for signature based approvals\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":\"IERC721Permit\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"The domain separator used in the permit signature"},"PERMIT_TYPEHASH()":{"notice":"The permit typehash used in the permit signature"},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Approve of a specific token ID for spending by spender via signature"}},"notice":"Extension to ERC721 that includes a permit function for signature based approvals","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol":{"INonfungiblePositionManager":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"approved","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"operator","type":"address"},{"indexed":false,"internalType":"bool","name":"approved","type":"bool"}],"name":"ApprovalForAll","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"Collect","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"DecreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"IncreaseLiquidity","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[],"name":"DOMAIN_SEPARATOR","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"PERMIT_TYPEHASH","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"pure","type":"function"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"approve","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"balance","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"burn","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint128","name":"amount0Max","type":"uint128"},{"internalType":"uint128","name":"amount1Max","type":"uint128"}],"internalType":"struct INonfungiblePositionManager.CollectParams","name":"params","type":"tuple"}],"name":"collect","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"createAndInitializePoolIfNecessary","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.DecreaseLiquidityParams","name":"params","type":"tuple"}],"name":"decreaseLiquidity","outputs":[{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"getApproved","outputs":[{"internalType":"address","name":"operator","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.IncreaseLiquidityParams","name":"params","type":"tuple"}],"name":"increaseLiquidity","outputs":[{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"operator","type":"address"}],"name":"isApprovedForAll","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"internalType":"uint256","name":"amount0Min","type":"uint256"},{"internalType":"uint256","name":"amount1Min","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"internalType":"struct INonfungiblePositionManager.MintParams","name":"params","type":"tuple"}],"name":"mint","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"amount0","type":"uint256"},{"internalType":"uint256","name":"amount1","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"ownerOf","outputs":[{"internalType":"address","name":"owner","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint8","name":"v","type":"uint8"},{"internalType":"bytes32","name":"r","type":"bytes32"},{"internalType":"bytes32","name":"s","type":"bytes32"}],"name":"permit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"positions","outputs":[{"internalType":"uint96","name":"nonce","type":"uint96"},{"internalType":"address","name":"operator","type":"address"},{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"uint256","name":"feeGrowthInside0LastX128","type":"uint256"},{"internalType":"uint256","name":"feeGrowthInside1LastX128","type":"uint256"},{"internalType":"uint128","name":"tokensOwed0","type":"uint128"},{"internalType":"uint128","name":"tokensOwed1","type":"uint128"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"safeTransferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"operator","type":"address"},{"internalType":"bool","name":"_approved","type":"bool"}],"name":"setApprovalForAll","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"tokenOfOwnerByIndex","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"tokenURI","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"tokenId","type":"uint256"}],"name":"transferFrom","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"events":{"Collect(uint256,address,uint256,uint256)":{"details":"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior","params":{"amount0":"The amount of token0 owed to the position that was collected","amount1":"The amount of token1 owed to the position that was collected","recipient":"The address of the account that received the collected tokens","tokenId":"The ID of the token for which underlying tokens were collected"}},"DecreaseLiquidity(uint256,uint128,uint256,uint256)":{"params":{"amount0":"The amount of token0 that was accounted for the decrease in liquidity","amount1":"The amount of token1 that was accounted for the decrease in liquidity","liquidity":"The amount by which liquidity for the NFT position was decreased","tokenId":"The ID of the token for which liquidity was decreased"}},"IncreaseLiquidity(uint256,uint128,uint256,uint256)":{"details":"Also emitted when a token is minted","params":{"amount0":"The amount of token0 that was paid for the increase in liquidity","amount1":"The amount of token1 that was paid for the increase in liquidity","liquidity":"The amount by which liquidity for the NFT position was increased","tokenId":"The ID of the token for which liquidity was increased"}}},"kind":"dev","methods":{"DOMAIN_SEPARATOR()":{"returns":{"_0":"The domain seperator used in encoding of permit signature"}},"PERMIT_TYPEHASH()":{"returns":{"_0":"The typehash for the permit"}},"WETH9()":{"returns":{"_0":"Returns the address of WETH9"}},"approve(address,uint256)":{"details":"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the number of tokens in ``owner``'s account."},"burn(uint256)":{"params":{"tokenId":"The ID of the token that is being burned"}},"collect((uint256,address,uint128,uint128))":{"params":{"params":"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect"},"returns":{"amount0":"The amount of fees collected in token0","amount1":"The amount of fees collected in token1"}},"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"details":"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool","params":{"fee":"The fee amount of the v3 pool for the specified token pair","sqrtPriceX96":"The initial square root price of the pool as a Q64.96 value","token0":"The contract address of token0 of the pool","token1":"The contract address of token1 of the pool"},"returns":{"pool":"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"}},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"params":{"params":"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 accounted to the position's tokens owed","amount1":"The amount of token1 accounted to the position's tokens owed"}},"factory()":{"returns":{"_0":"Returns the address of the Uniswap V3 factory"}},"getApproved(uint256)":{"details":"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"params":{"params":"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change"},"returns":{"amount0":"The amount of token0 to acheive resulting liquidity","amount1":"The amount of token1 to acheive resulting liquidity","liquidity":"The new liquidity amount as a result of the increase"}},"isApprovedForAll(address,address)":{"details":"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"},"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":{"details":"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.","params":{"params":"The params necessary to mint a position, encoded as `MintParams` in calldata"},"returns":{"amount0":"The amount of token0","amount1":"The amount of token1","liquidity":"The amount of liquidity for this position","tokenId":"The ID of the token that represents the minted position"}},"name()":{"details":"Returns the token collection name."},"ownerOf(uint256)":{"details":"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"params":{"deadline":"The deadline timestamp by which the call must be mined for the approve to work","r":"Must produce valid secp256k1 signature from the holder along with `v` and `s`","s":"Must produce valid secp256k1 signature from the holder along with `r` and `v`","spender":"The account that is being approved","tokenId":"The ID of the token that is being approved for spending","v":"Must produce valid secp256k1 signature from the holder along with `r` and `s`"}},"positions(uint256)":{"details":"Throws if the token ID is not valid.","params":{"tokenId":"The ID of the token that represents the position"},"returns":{"fee":"The fee associated with the pool","feeGrowthInside0LastX128":"The fee growth of token0 as of the last action on the individual position","feeGrowthInside1LastX128":"The fee growth of token1 as of the last action on the individual position","liquidity":"The liquidity of the position","nonce":"The nonce for permits","operator":"The address that is approved for spending","tickLower":"The lower end of the tick range for the position","tickUpper":"The higher end of the tick range for the position","token0":"The address of the token0 for a specific pool","token1":"The address of the token1 for a specific pool","tokensOwed0":"The uncollected amount of token0 owed to the position as of the last computation","tokensOwed1":"The uncollected amount of token1 owed to the position as of the last computation"}},"refundETH()":{"details":"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"},"safeTransferFrom(address,address,uint256)":{"details":"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"safeTransferFrom(address,address,uint256,bytes)":{"details":"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."},"setApprovalForAll(address,bool)":{"details":"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."},"supportsInterface(bytes4)":{"details":"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."},"sweepToken(address,uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing the token from users","params":{"amountMinimum":"The minimum amount of token required for a transfer","recipient":"The destination address of the token","token":"The contract address of the token which will be transferred to `recipient`"}},"symbol()":{"details":"Returns the token collection symbol."},"tokenByIndex(uint256)":{"details":"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens."},"tokenOfOwnerByIndex(address,uint256)":{"details":"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens."},"tokenURI(uint256)":{"details":"Returns the Uniform Resource Identifier (URI) for `tokenId` token."},"totalSupply()":{"details":"Returns the total amount of tokens stored by the contract."},"transferFrom(address,address,uint256)":{"details":"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."},"unwrapWETH9(uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.","params":{"amountMinimum":"The minimum amount of WETH9 to unwrap","recipient":"The address receiving ETH"}}},"title":"Non-fungible token for positions","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"DOMAIN_SEPARATOR()":"3644e515","PERMIT_TYPEHASH()":"30adf81f","WETH9()":"4aa4a4fc","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(uint256)":"42966c68","collect((uint256,address,uint128,uint128))":"fc6f7865","createAndInitializePoolIfNecessary(address,address,uint24,uint160)":"13ead562","decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":"0c49ccbe","factory()":"c45a0155","getApproved(uint256)":"081812fc","increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":"219f5d17","isApprovedForAll(address,address)":"e985e9c5","mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":"88316456","name()":"06fdde03","ownerOf(uint256)":"6352211e","permit(address,uint256,uint256,uint8,bytes32,bytes32)":"7ac2ff7b","positions(uint256)":"99fbab88","refundETH()":"12210e8a","safeTransferFrom(address,address,uint256)":"42842e0e","safeTransferFrom(address,address,uint256,bytes)":"b88d4fde","setApprovalForAll(address,bool)":"a22cb465","supportsInterface(bytes4)":"01ffc9a7","sweepToken(address,uint256,address)":"df2ab5bb","symbol()":"95d89b41","tokenByIndex(uint256)":"4f6ccce7","tokenOfOwnerByIndex(address,uint256)":"2f745c59","tokenURI(uint256)":"c87b56dd","totalSupply()":"18160ddd","transferFrom(address,address,uint256)":"23b872dd","unwrapWETH9(uint256,address)":"49404b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Collect\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"DecreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"IncreaseLiquidity\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint128\",\"name\":\"amount0Max\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"amount1Max\",\"type\":\"uint128\"}],\"internalType\":\"struct INonfungiblePositionManager.CollectParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"collect\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.DecreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"decreaseLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.IncreaseLiquidityParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"increaseLiquidity\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount0Min\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Min\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"internalType\":\"struct INonfungiblePositionManager.MintParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"positions\",\"outputs\":[{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside0LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"feeGrowthInside1LastX128\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed0\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"tokensOwed1\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"details\":\"The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\",\"params\":{\"amount0\":\"The amount of token0 owed to the position that was collected\",\"amount1\":\"The amount of token1 owed to the position that was collected\",\"recipient\":\"The address of the account that received the collected tokens\",\"tokenId\":\"The ID of the token for which underlying tokens were collected\"}},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"params\":{\"amount0\":\"The amount of token0 that was accounted for the decrease in liquidity\",\"amount1\":\"The amount of token1 that was accounted for the decrease in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was decreased\",\"tokenId\":\"The ID of the token for which liquidity was decreased\"}},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"details\":\"Also emitted when a token is minted\",\"params\":{\"amount0\":\"The amount of token0 that was paid for the increase in liquidity\",\"amount1\":\"The amount of token1 that was paid for the increase in liquidity\",\"liquidity\":\"The amount by which liquidity for the NFT position was increased\",\"tokenId\":\"The ID of the token for which liquidity was increased\"}}},\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"returns\":{\"_0\":\"The domain seperator used in encoding of permit signature\"}},\"PERMIT_TYPEHASH()\":{\"returns\":{\"_0\":\"The typehash for the permit\"}},\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"burn(uint256)\":{\"params\":{\"tokenId\":\"The ID of the token that is being burned\"}},\"collect((uint256,address,uint128,uint128))\":{\"params\":{\"params\":\"tokenId The ID of the NFT for which tokens are being collected, recipient The account that should receive the tokens, amount0Max The maximum amount of token0 to collect, amount1Max The maximum amount of token1 to collect\"},\"returns\":{\"amount0\":\"The amount of fees collected in token0\",\"amount1\":\"The amount of fees collected in token1\"}},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being decreased, amount The amount by which liquidity will be decreased, amount0Min The minimum amount of token0 that should be accounted for the burned liquidity, amount1Min The minimum amount of token1 that should be accounted for the burned liquidity, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 accounted to the position's tokens owed\",\"amount1\":\"The amount of token1 accounted to the position's tokens owed\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"params\":{\"params\":\"tokenId The ID of the token for which liquidity is being increased, amount0Desired The desired amount of token0 to be spent, amount1Desired The desired amount of token1 to be spent, amount0Min The minimum amount of token0 to spend, which serves as a slippage check, amount1Min The minimum amount of token1 to spend, which serves as a slippage check, deadline The time by which the transaction must be included to effect the change\"},\"returns\":{\"amount0\":\"The amount of token0 to acheive resulting liquidity\",\"amount1\":\"The amount of token1 to acheive resulting liquidity\",\"liquidity\":\"The new liquidity amount as a result of the increase\"}},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"details\":\"Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized a method does not exist, i.e. the pool is assumed to be initialized.\",\"params\":{\"params\":\"The params necessary to mint a position, encoded as `MintParams` in calldata\"},\"returns\":{\"amount0\":\"The amount of token0\",\"amount1\":\"The amount of token1\",\"liquidity\":\"The amount of liquidity for this position\",\"tokenId\":\"The ID of the token that represents the minted position\"}},\"name()\":{\"details\":\"Returns the token collection name.\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"params\":{\"deadline\":\"The deadline timestamp by which the call must be mined for the approve to work\",\"r\":\"Must produce valid secp256k1 signature from the holder along with `v` and `s`\",\"s\":\"Must produce valid secp256k1 signature from the holder along with `r` and `v`\",\"spender\":\"The account that is being approved\",\"tokenId\":\"The ID of the token that is being approved for spending\",\"v\":\"Must produce valid secp256k1 signature from the holder along with `r` and `s`\"}},\"positions(uint256)\":{\"details\":\"Throws if the token ID is not valid.\",\"params\":{\"tokenId\":\"The ID of the token that represents the position\"},\"returns\":{\"fee\":\"The fee associated with the pool\",\"feeGrowthInside0LastX128\":\"The fee growth of token0 as of the last action on the individual position\",\"feeGrowthInside1LastX128\":\"The fee growth of token1 as of the last action on the individual position\",\"liquidity\":\"The liquidity of the position\",\"nonce\":\"The nonce for permits\",\"operator\":\"The address that is approved for spending\",\"tickLower\":\"The lower end of the tick range for the position\",\"tickUpper\":\"The higher end of the tick range for the position\",\"token0\":\"The address of the token0 for a specific pool\",\"token1\":\"The address of the token1 for a specific pool\",\"tokensOwed0\":\"The uncollected amount of token0 owed to the position as of the last computation\",\"tokensOwed1\":\"The uncollected amount of token1 owed to the position as of the last computation\"}},\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"symbol()\":{\"details\":\"Returns the token collection symbol.\"},\"tokenByIndex(uint256)\":{\"details\":\"Returns a token ID at a given `index` of all the tokens stored by the contract. Use along with {totalSupply} to enumerate all tokens.\"},\"tokenOfOwnerByIndex(address,uint256)\":{\"details\":\"Returns a token ID owned by `owner` at a given `index` of its token list. Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\"},\"tokenURI(uint256)\":{\"details\":\"Returns the Uniform Resource Identifier (URI) for `tokenId` token.\"},\"totalSupply()\":{\"details\":\"Returns the total amount of tokens stored by the contract.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Non-fungible token for positions\",\"version\":1},\"userdoc\":{\"events\":{\"Collect(uint256,address,uint256,uint256)\":{\"notice\":\"Emitted when tokens are collected for a position NFT\"},\"DecreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is decreased for a position NFT\"},\"IncreaseLiquidity(uint256,uint128,uint256,uint256)\":{\"notice\":\"Emitted when liquidity is increased for a position NFT\"}},\"kind\":\"user\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"notice\":\"The domain separator used in the permit signature\"},\"PERMIT_TYPEHASH()\":{\"notice\":\"The permit typehash used in the permit signature\"},\"burn(uint256)\":{\"notice\":\"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first.\"},\"collect((uint256,address,uint128,uint128))\":{\"notice\":\"Collects up to a maximum amount of fees owed to a specific position to the recipient\"},\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"},\"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))\":{\"notice\":\"Decreases the amount of liquidity in a position and accounts it to the position\"},\"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))\":{\"notice\":\"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\"},\"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))\":{\"notice\":\"Creates a new position wrapped in a NFT\"},\"permit(address,uint256,uint256,uint8,bytes32,bytes32)\":{\"notice\":\"Approve of a specific token ID for spending by spender via signature\"},\"positions(uint256)\":{\"notice\":\"Returns the position information associated with a given token ID.\"},\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":\"INonfungiblePositionManager\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\\n\\nimport './IPoolInitializer.sol';\\nimport './IERC721Permit.sol';\\nimport './IPeripheryPayments.sol';\\nimport './IPeripheryImmutableState.sol';\\nimport '../libraries/PoolAddress.sol';\\n\\n/// @title Non-fungible token for positions\\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\\n/// and authorized.\\ninterface INonfungiblePositionManager is\\n    IPoolInitializer,\\n    IPeripheryPayments,\\n    IPeripheryImmutableState,\\n    IERC721Metadata,\\n    IERC721Enumerable,\\n    IERC721Permit\\n{\\n    /// @notice Emitted when liquidity is increased for a position NFT\\n    /// @dev Also emitted when a token is minted\\n    /// @param tokenId The ID of the token for which liquidity was increased\\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\\n    /// @notice Emitted when liquidity is decreased for a position NFT\\n    /// @param tokenId The ID of the token for which liquidity was decreased\\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\\n    /// @notice Emitted when tokens are collected for a position NFT\\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\\n    /// @param tokenId The ID of the token for which underlying tokens were collected\\n    /// @param recipient The address of the account that received the collected tokens\\n    /// @param amount0 The amount of token0 owed to the position that was collected\\n    /// @param amount1 The amount of token1 owed to the position that was collected\\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\\n\\n    /// @notice Returns the position information associated with a given token ID.\\n    /// @dev Throws if the token ID is not valid.\\n    /// @param tokenId The ID of the token that represents the position\\n    /// @return nonce The nonce for permits\\n    /// @return operator The address that is approved for spending\\n    /// @return token0 The address of the token0 for a specific pool\\n    /// @return token1 The address of the token1 for a specific pool\\n    /// @return fee The fee associated with the pool\\n    /// @return tickLower The lower end of the tick range for the position\\n    /// @return tickUpper The higher end of the tick range for the position\\n    /// @return liquidity The liquidity of the position\\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\\n    function positions(uint256 tokenId)\\n        external\\n        view\\n        returns (\\n            uint96 nonce,\\n            address operator,\\n            address token0,\\n            address token1,\\n            uint24 fee,\\n            int24 tickLower,\\n            int24 tickUpper,\\n            uint128 liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    struct MintParams {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n        int24 tickLower;\\n        int24 tickUpper;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        address recipient;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Creates a new position wrapped in a NFT\\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\\n    /// @return tokenId The ID of the token that represents the minted position\\n    /// @return liquidity The amount of liquidity for this position\\n    /// @return amount0 The amount of token0\\n    /// @return amount1 The amount of token1\\n    function mint(MintParams calldata params)\\n        external\\n        payable\\n        returns (\\n            uint256 tokenId,\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct IncreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\\n    /// amount0Desired The desired amount of token0 to be spent,\\n    /// amount1Desired The desired amount of token1 to be spent,\\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return liquidity The new liquidity amount as a result of the increase\\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\\n        external\\n        payable\\n        returns (\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct DecreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint128 liquidity;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\\n    /// amount The amount by which liquidity will be decreased,\\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\\n        external\\n        payable\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    struct CollectParams {\\n        uint256 tokenId;\\n        address recipient;\\n        uint128 amount0Max;\\n        uint128 amount1Max;\\n    }\\n\\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\\n    /// recipient The account that should receive the tokens,\\n    /// amount0Max The maximum amount of token0 to collect,\\n    /// amount1Max The maximum amount of token1 to collect\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\\n    /// must be collected first.\\n    /// @param tokenId The ID of the token that is being burned\\n    function burn(uint256 tokenId) external payable;\\n}\\n\",\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\\n        require(key.token0 < key.token1);\\n        pool = address(\\n            uint256(\\n                keccak256(\\n                    abi.encodePacked(\\n                        hex'ff',\\n                        factory,\\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\\n                        POOL_INIT_CODE_HASH\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"events":{"Collect(uint256,address,uint256,uint256)":{"notice":"Emitted when tokens are collected for a position NFT"},"DecreaseLiquidity(uint256,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is decreased for a position NFT"},"IncreaseLiquidity(uint256,uint128,uint256,uint256)":{"notice":"Emitted when liquidity is increased for a position NFT"}},"kind":"user","methods":{"DOMAIN_SEPARATOR()":{"notice":"The domain separator used in the permit signature"},"PERMIT_TYPEHASH()":{"notice":"The permit typehash used in the permit signature"},"burn(uint256)":{"notice":"Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens must be collected first."},"collect((uint256,address,uint128,uint128))":{"notice":"Collects up to a maximum amount of fees owed to a specific position to the recipient"},"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"notice":"Creates a new pool if it does not exist, then initializes if not initialized"},"decreaseLiquidity((uint256,uint128,uint256,uint256,uint256))":{"notice":"Decreases the amount of liquidity in a position and accounts it to the position"},"increaseLiquidity((uint256,uint256,uint256,uint256,uint256,uint256))":{"notice":"Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`"},"mint((address,address,uint24,int24,int24,uint256,uint256,uint256,uint256,address,uint256))":{"notice":"Creates a new position wrapped in a NFT"},"permit(address,uint256,uint256,uint8,bytes32,bytes32)":{"notice":"Approve of a specific token ID for spending by spender via signature"},"positions(uint256)":{"notice":"Returns the position information associated with a given token ID."},"refundETH()":{"notice":"Refunds any ETH balance held by this contract to the `msg.sender`"},"sweepToken(address,uint256,address)":{"notice":"Transfers the full amount of a token held by this contract to recipient"},"unwrapWETH9(uint256,address)":{"notice":"Unwraps the contract's WETH9 balance and sends it to recipient as ETH."}},"notice":"Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred and authorized.","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol":{"IPeripheryImmutableState":{"abi":[{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{"WETH9()":{"returns":{"_0":"Returns the address of WETH9"}},"factory()":{"returns":{"_0":"Returns the address of the Uniswap V3 factory"}}},"title":"Immutable state","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"WETH9()":"4aa4a4fc","factory()":"c45a0155"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"WETH9()\":{\"returns\":{\"_0\":\"Returns the address of WETH9\"}},\"factory()\":{\"returns\":{\"_0\":\"Returns the address of the Uniswap V3 factory\"}}},\"title\":\"Immutable state\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Functions that return immutable state of the router\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":\"IPeripheryImmutableState\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Functions that return immutable state of the router","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol":{"IPeripheryPayments":{"abi":[{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"refundETH()":{"details":"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount"},"sweepToken(address,uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing the token from users","params":{"amountMinimum":"The minimum amount of token required for a transfer","recipient":"The destination address of the token","token":"The contract address of the token which will be transferred to `recipient`"}},"unwrapWETH9(uint256,address)":{"details":"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.","params":{"amountMinimum":"The minimum amount of WETH9 to unwrap","recipient":"The address receiving ETH"}}},"title":"Periphery Payments","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"refundETH()":"12210e8a","sweepToken(address,uint256,address)":"df2ab5bb","unwrapWETH9(uint256,address)":"49404b7c"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"refundETH()\":{\"details\":\"Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps that use ether for the input amount\"},\"sweepToken(address,uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing the token from users\",\"params\":{\"amountMinimum\":\"The minimum amount of token required for a transfer\",\"recipient\":\"The destination address of the token\",\"token\":\"The contract address of the token which will be transferred to `recipient`\"}},\"unwrapWETH9(uint256,address)\":{\"details\":\"The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\",\"params\":{\"amountMinimum\":\"The minimum amount of WETH9 to unwrap\",\"recipient\":\"The address receiving ETH\"}}},\"title\":\"Periphery Payments\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"refundETH()\":{\"notice\":\"Refunds any ETH balance held by this contract to the `msg.sender`\"},\"sweepToken(address,uint256,address)\":{\"notice\":\"Transfers the full amount of a token held by this contract to recipient\"},\"unwrapWETH9(uint256,address)\":{\"notice\":\"Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\"}},\"notice\":\"Functions to ease deposits and withdrawals of ETH\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":\"IPeripheryPayments\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"refundETH()":{"notice":"Refunds any ETH balance held by this contract to the `msg.sender`"},"sweepToken(address,uint256,address)":{"notice":"Transfers the full amount of a token held by this contract to recipient"},"unwrapWETH9(uint256,address)":{"notice":"Unwraps the contract's WETH9 balance and sends it to recipient as ETH."}},"notice":"Functions to ease deposits and withdrawals of ETH","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol":{"IPoolInitializer":{"abi":[{"inputs":[{"internalType":"address","name":"token0","type":"address"},{"internalType":"address","name":"token1","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"uint160","name":"sqrtPriceX96","type":"uint160"}],"name":"createAndInitializePoolIfNecessary","outputs":[{"internalType":"address","name":"pool","type":"address"}],"stateMutability":"payable","type":"function"}],"devdoc":{"kind":"dev","methods":{"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"details":"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool","params":{"fee":"The fee amount of the v3 pool for the specified token pair","sqrtPriceX96":"The initial square root price of the pool as a Q64.96 value","token0":"The contract address of token0 of the pool","token1":"The contract address of token1 of the pool"},"returns":{"pool":"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary"}}},"title":"Creates and initializes V3 Pools","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":"13ead562"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceX96\",\"type\":\"uint160\"}],\"name\":\"createAndInitializePoolIfNecessary\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"pool\",\"type\":\"address\"}],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"details\":\"This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\",\"params\":{\"fee\":\"The fee amount of the v3 pool for the specified token pair\",\"sqrtPriceX96\":\"The initial square root price of the pool as a Q64.96 value\",\"token0\":\"The contract address of token0 of the pool\",\"token1\":\"The contract address of token1 of the pool\"},\"returns\":{\"pool\":\"Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\"}}},\"title\":\"Creates and initializes V3 Pools\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"createAndInitializePoolIfNecessary(address,address,uint24,uint160)\":{\"notice\":\"Creates a new pool if it does not exist, then initializes if not initialized\"}},\"notice\":\"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":\"IPoolInitializer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"createAndInitializePoolIfNecessary(address,address,uint24,uint160)":{"notice":"Creates a new pool if it does not exist, then initializes if not initialized"}},"notice":"Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that require the pool to exist.","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol":{"ISwapRouter":{"abi":[{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactInputParams","name":"params","type":"tuple"}],"name":"exactInput","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactInputSingleParams","name":"params","type":"tuple"}],"name":"exactInputSingle","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"bytes","name":"path","type":"bytes"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"}],"internalType":"struct ISwapRouter.ExactOutputParams","name":"params","type":"tuple"}],"name":"exactOutput","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"fee","type":"uint24"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"amountInMaximum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct ISwapRouter.ExactOutputSingleParams","name":"params","type":"tuple"}],"name":"exactOutputSingle","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"int256","name":"amount0Delta","type":"int256"},{"internalType":"int256","name":"amount1Delta","type":"int256"},{"internalType":"bytes","name":"data","type":"bytes"}],"name":"uniswapV3SwapCallback","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata"},"returns":{"amountOut":"The amount of the received token"}},"exactOutput((bytes,address,uint256,uint256,uint256))":{"params":{"params":"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"params":{"params":"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata"},"returns":{"amountIn":"The amount of the input token"}},"uniswapV3SwapCallback(int256,int256,bytes)":{"details":"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.","params":{"amount0Delta":"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.","amount1Delta":"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.","data":"Any data passed through by the caller via the IUniswapV3PoolActions#swap call"}}},"title":"Router token swapping functionality","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"exactInput((bytes,address,uint256,uint256,uint256))":"c04b8d59","exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"414bf389","exactOutput((bytes,address,uint256,uint256,uint256))":"f28c0498","exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":"db3e2198","uniswapV3SwapCallback(int256,int256,bytes)":"fa461e33"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactInputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactInputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactInputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"path\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"}],\"internalType\":\"struct ISwapRouter.ExactOutputParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutput\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountInMaximum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct ISwapRouter.ExactOutputSingleParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"exactOutputSingle\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"amount0Delta\",\"type\":\"int256\"},{\"internalType\":\"int256\",\"name\":\"amount1Delta\",\"type\":\"int256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"uniswapV3SwapCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\"},\"returns\":{\"amountOut\":\"The amount of the received token\"}},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"params\":{\"params\":\"The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"params\":{\"params\":\"The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\"},\"returns\":{\"amountIn\":\"The amount of the input token\"}},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"details\":\"In the implementation you must pay the pool tokens owed for the swap. The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory. amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\",\"params\":{\"amount0Delta\":\"The amount of token0 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token0 to the pool.\",\"amount1Delta\":\"The amount of token1 that was sent (negative) or must be received (positive) by the pool by the end of the swap. If positive, the callback must send that amount of token1 to the pool.\",\"data\":\"Any data passed through by the caller via the IUniswapV3PoolActions#swap call\"}}},\"title\":\"Router token swapping functionality\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exactInput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another along the specified path\"},\"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps `amountIn` of one token for as much as possible of another token\"},\"exactOutput((bytes,address,uint256,uint256,uint256))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\"},\"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))\":{\"notice\":\"Swaps as little as possible of one token for `amountOut` of another token\"},\"uniswapV3SwapCallback(int256,int256,bytes)\":{\"notice\":\"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\"}},\"notice\":\"Functions for swapping tokens via Uniswap V3\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":\"ISwapRouter\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"exactInput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps `amountIn` of one token for as much as possible of another along the specified path"},"exactInputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps `amountIn` of one token for as much as possible of another token"},"exactOutput((bytes,address,uint256,uint256,uint256))":{"notice":"Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)"},"exactOutputSingle((address,address,uint24,address,uint256,uint256,uint256,uint160))":{"notice":"Swaps as little as possible of one token for `amountOut` of another token"},"uniswapV3SwapCallback(int256,int256,bytes)":{"notice":"Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap."}},"notice":"Functions for swapping tokens via Uniswap V3","version":1}}},"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol":{"IWETH9":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"deposit","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"sender","type":"address"},{"internalType":"address","name":"recipient","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the amount of tokens owned by `account`."},"totalSupply()":{"details":"Returns the amount of tokens in existence."},"transfer(address,uint256)":{"details":"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"title":"Interface for WETH9","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","deposit()":"d0e30db0","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","withdraw(uint256)":"2e1a7d4d"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"Interface for WETH9\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit()\":{\"notice\":\"Deposit ether to get wrapped ether\"},\"withdraw(uint256)\":{\"notice\":\"Withdraw wrapped ether to get ether\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol\":\"IWETH9\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity =0.7.6;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\n/// @title Interface for WETH9\\ninterface IWETH9 is IERC20 {\\n    /// @notice Deposit ether to get wrapped ether\\n    function deposit() external payable;\\n\\n    /// @notice Withdraw wrapped ether to get ether\\n    function withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0x6d7a8eb484e84bceb1d84c7be431c5b8120d519b0c2a7b4c7064c814635dea4c\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{"deposit()":{"notice":"Deposit ether to get wrapped ether"},"withdraw(uint256)":{"notice":"Withdraw wrapped ether to get ether"}},"version":1}}},"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol":{"PoolAddress":{"abi":[],"devdoc":{"kind":"dev","methods":{},"title":"Provides functions for deriving a pool address from the factory, tokens, and the fee","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209f3c9b0e4dfb6acd94147bbd6646870d1cf107d8c88dec926626299bd20d033164736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 EXTCODECOPY SWAP12 0xE 0x4D 0xFB PUSH11 0xCD94147BBD6646870D1CF1 SMOD 0xD8 0xC8 DUP14 0xEC SWAP3 PUSH7 0x26299BD20D0331 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"167:1652:29:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209f3c9b0e4dfb6acd94147bbd6646870d1cf107d8c88dec926626299bd20d033164736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP16 EXTCODECOPY SWAP12 0xE 0x4D 0xFB PUSH11 0xCD94147BBD6646870D1CF1 SMOD 0xD8 0xC8 DUP14 0xEC SWAP3 PUSH7 0x26299BD20D0331 PUSH5 0x736F6C6343 STOP SMOD MOD STOP CALLER ","sourceMap":"167:1652:29:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"computeAddress(address,struct PoolAddress.PoolKey memory)":"infinite","getPoolKey(address,address,uint24)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"Provides functions for deriving a pool address from the factory, tokens, and the fee\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":\"PoolAddress\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\\n        require(key.token0 < key.token1);\\n        pool = address(\\n            uint256(\\n                keccak256(\\n                    abi.encodePacked(\\n                        hex'ff',\\n                        factory,\\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\\n                        POOL_INIT_CODE_HASH\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/PredictiveLiquidityManagerFinal.sol":{"IERC20Decimals":{"abi":[{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"}],"devdoc":{"kind":"dev","methods":{},"version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"gasEstimates":null,"methodIdentifiers":{"decimals()":"313ce567"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PredictiveLiquidityManagerFinal.sol\":\"IERC20Decimals\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#mint\\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\\ninterface IUniswapV3MintCallback {\\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#mint call\\n    function uniswapV3MintCallback(\\n        uint256 amount0Owed,\\n        uint256 amount1Owed,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Math library for computing sqrt prices from ticks and vice versa\\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\\n/// prices between 2**-128 and 2**128\\nlibrary TickMath {\\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\\n    int24 internal constant MIN_TICK = -887272;\\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\\n    int24 internal constant MAX_TICK = -MIN_TICK;\\n\\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\\n\\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\\n    /// @dev Throws if |tick| > max tick\\n    /// @param tick The input tick for the above formula\\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\\n    /// at the given tick\\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\\n        require(absTick <= uint256(MAX_TICK), 'T');\\n\\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\\n\\n        if (tick > 0) ratio = type(uint256).max / ratio;\\n\\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\\n    }\\n\\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\\n    /// ever return.\\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\\n        // second inequality must be < because the price can never reach the price at the max tick\\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\\n\\n        uint256 r = ratio;\\n        uint256 msb = 0;\\n\\n        assembly {\\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(5, gt(r, 0xFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(4, gt(r, 0xFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(3, gt(r, 0xFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(2, gt(r, 0xF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(1, gt(r, 0x3))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := gt(r, 0x1)\\n            msb := or(msb, f)\\n        }\\n\\n        if (msb >= 128) r = ratio >> (msb - 127);\\n        else r = ratio << (127 - msb);\\n\\n        int256 log_2 = (int256(msb) - 128) << 64;\\n\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(63, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(62, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(61, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(60, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(59, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(58, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(57, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(56, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(55, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(54, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(53, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(52, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(51, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(50, f))\\n        }\\n\\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\\n\\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\\n\\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\\n    }\\n}\\n\",\"keccak256\":\"0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\\n\\nimport './IPoolInitializer.sol';\\nimport './IERC721Permit.sol';\\nimport './IPeripheryPayments.sol';\\nimport './IPeripheryImmutableState.sol';\\nimport '../libraries/PoolAddress.sol';\\n\\n/// @title Non-fungible token for positions\\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\\n/// and authorized.\\ninterface INonfungiblePositionManager is\\n    IPoolInitializer,\\n    IPeripheryPayments,\\n    IPeripheryImmutableState,\\n    IERC721Metadata,\\n    IERC721Enumerable,\\n    IERC721Permit\\n{\\n    /// @notice Emitted when liquidity is increased for a position NFT\\n    /// @dev Also emitted when a token is minted\\n    /// @param tokenId The ID of the token for which liquidity was increased\\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\\n    /// @notice Emitted when liquidity is decreased for a position NFT\\n    /// @param tokenId The ID of the token for which liquidity was decreased\\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\\n    /// @notice Emitted when tokens are collected for a position NFT\\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\\n    /// @param tokenId The ID of the token for which underlying tokens were collected\\n    /// @param recipient The address of the account that received the collected tokens\\n    /// @param amount0 The amount of token0 owed to the position that was collected\\n    /// @param amount1 The amount of token1 owed to the position that was collected\\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\\n\\n    /// @notice Returns the position information associated with a given token ID.\\n    /// @dev Throws if the token ID is not valid.\\n    /// @param tokenId The ID of the token that represents the position\\n    /// @return nonce The nonce for permits\\n    /// @return operator The address that is approved for spending\\n    /// @return token0 The address of the token0 for a specific pool\\n    /// @return token1 The address of the token1 for a specific pool\\n    /// @return fee The fee associated with the pool\\n    /// @return tickLower The lower end of the tick range for the position\\n    /// @return tickUpper The higher end of the tick range for the position\\n    /// @return liquidity The liquidity of the position\\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\\n    function positions(uint256 tokenId)\\n        external\\n        view\\n        returns (\\n            uint96 nonce,\\n            address operator,\\n            address token0,\\n            address token1,\\n            uint24 fee,\\n            int24 tickLower,\\n            int24 tickUpper,\\n            uint128 liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    struct MintParams {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n        int24 tickLower;\\n        int24 tickUpper;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        address recipient;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Creates a new position wrapped in a NFT\\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\\n    /// @return tokenId The ID of the token that represents the minted position\\n    /// @return liquidity The amount of liquidity for this position\\n    /// @return amount0 The amount of token0\\n    /// @return amount1 The amount of token1\\n    function mint(MintParams calldata params)\\n        external\\n        payable\\n        returns (\\n            uint256 tokenId,\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct IncreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\\n    /// amount0Desired The desired amount of token0 to be spent,\\n    /// amount1Desired The desired amount of token1 to be spent,\\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return liquidity The new liquidity amount as a result of the increase\\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\\n        external\\n        payable\\n        returns (\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct DecreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint128 liquidity;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\\n    /// amount The amount by which liquidity will be decreased,\\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\\n        external\\n        payable\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    struct CollectParams {\\n        uint256 tokenId;\\n        address recipient;\\n        uint128 amount0Max;\\n        uint128 amount1Max;\\n    }\\n\\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\\n    /// recipient The account that should receive the tokens,\\n    /// amount0Max The maximum amount of token0 to collect,\\n    /// amount1Max The maximum amount of token1 to collect\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\\n    /// must be collected first.\\n    /// @param tokenId The ID of the token that is being burned\\n    function burn(uint256 tokenId) external payable;\\n}\\n\",\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity =0.7.6;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\n/// @title Interface for WETH9\\ninterface IWETH9 is IERC20 {\\n    /// @notice Deposit ether to get wrapped ether\\n    function deposit() external payable;\\n\\n    /// @notice Withdraw wrapped ether to get ether\\n    function withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0x6d7a8eb484e84bceb1d84c7be431c5b8120d519b0c2a7b4c7064c814635dea4c\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\\n        require(key.token0 < key.token1);\\n        pool = address(\\n            uint256(\\n                keccak256(\\n                    abi.encodePacked(\\n                        hex'ff',\\n                        factory,\\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\\n                        POOL_INIT_CODE_HASH\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\"},\"contracts/PredictiveLiquidityManagerFinal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.7.6;\\r\\npragma abicoder v2; // \\u0627\\u0636\\u0627\\u0641\\u0647 \\u06a9\\u0631\\u062f\\u0646 \\u0627\\u06cc\\u0646 \\u062e\\u0637 \\u0628\\u0631\\u0627\\u06cc \\u067e\\u0634\\u062a\\u06cc\\u0628\\u0627\\u0646\\u06cc \\u0627\\u0632 struct \\u0647\\u0627 \\u062f\\u0631 \\u067e\\u0627\\u0631\\u0627\\u0645\\u062a\\u0631\\u0647\\u0627\\r\\n\\r\\n// OpenZeppelin ~3.4.0 Imports --- Updated Paths ---\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n// import \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\"; // Not available in OZ 3.4, decimals usually called directly on IERC20\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\"; // Path updated\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\"; // --- Added SafeMath ---\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\"; // Path updated\\r\\n\\r\\n// Local Math Library (copied from OZ 4.x, made 0.7.6 compatible)\\r\\nimport \\\"./libraries/SqrtMath.sol\\\"; // --- Added Local Math Import ---\\r\\n\\r\\n// Uniswap V3 Core (\\u0646\\u0633\\u062e\\u0647 1.0.0)\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/libraries/TickMath.sol\\\";\\r\\n\\r\\n// Uniswap V3 Periphery (\\u0646\\u0633\\u062e\\u0647 1.4.3)\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\\\";\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol\\\";\\r\\n// import \\\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\\\"; // --- Removed Import ---\\r\\n\\r\\n// \\u0627\\u0636\\u0627\\u0641\\u0647 \\u06a9\\u0631\\u062f\\u0646 \\u0627\\u06cc\\u0646 \\u0627\\u06cc\\u0646\\u062a\\u0631\\u0641\\u06cc\\u0633 \\u0642\\u0628\\u0644 \\u0627\\u0632 \\u062a\\u0639\\u0631\\u06cc\\u0641 \\u0642\\u0631\\u0627\\u0631\\u062f\\u0627\\u062f \\u0627\\u0635\\u0644\\u06cc\\r\\ninterface IERC20Decimals {\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\\r\\n// --- Contract Definition ---\\r\\ncontract PredictiveLiquidityManagerFinal is\\r\\n    Ownable,\\r\\n    ReentrancyGuard,\\r\\n    IUniswapV3MintCallback\\r\\n    // IPeripheryPayments  -- Removed inheritance\\r\\n{\\r\\n    using SafeERC20 for IERC20;\\r\\n    using SafeMath for uint256; // --- Using SafeMath for uint256 ---\\r\\n    // using Math for uint256; // Use local Math library directly where needed\\r\\n\\r\\n    // --- State Variables ---\\r\\n    IUniswapV3Factory public immutable factory;\\r\\n    INonfungiblePositionManager public immutable positionManager;\\r\\n    ISwapRouter public immutable swapRouter;\\r\\n    address public immutable token0;\\r\\n    address public immutable token1;\\r\\n    uint8 public immutable token0Decimals;\\r\\n    uint8 public immutable token1Decimals;\\r\\n    uint24 public immutable fee;\\r\\n    int24 public immutable tickSpacing;\\r\\n    address public immutable WETH9;\\r\\n\\r\\n    struct Position {\\r\\n        uint256 tokenId;\\r\\n        uint128 liquidity;\\r\\n        int24 tickLower;\\r\\n        int24 tickUpper;\\r\\n        bool active;\\r\\n    }\\r\\n    Position public currentPosition;\\r\\n\\r\\n    // Strategy Parameters\\r\\n    uint24 public rangeWidthMultiplier = 4;\\r\\n\\r\\n    // Swap Parameters Struct\\r\\n    struct SwapParams {\\r\\n        address tokenIn;\\r\\n        address tokenOut;\\r\\n        uint24 poolFee;\\r\\n        uint256 amountIn;\\r\\n        uint256 amountOutMinimum;\\r\\n        uint160 sqrtPriceLimitX96;\\r\\n    }\\r\\n\\r\\n    // \\u0627\\u06cc\\u0648\\u0646\\u062a\\u200c\\u0647\\u0627\\u06cc \\u0627\\u0635\\u0644\\u06cc\\r\\n    event OperationReported(\\r\\n        uint256 actualPrice,\\r\\n        uint256 predictedPrice,\\r\\n        int24 currentTick,\\r\\n        int24 predictedTick,\\r\\n        bool adjusted,\\r\\n        uint256 gasUsed\\r\\n    );\\r\\n\\r\\n    event LiquidityAdjusted(\\r\\n        uint256 tokenId,\\r\\n        int24 tickLower,\\r\\n        int24 tickUpper,\\r\\n        uint128 liquidity\\r\\n    );\\r\\n\\r\\n    event LiquidityRemoved(\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 amount0,\\r\\n        uint256 amount1\\r\\n    );\\r\\n\\r\\n    event Swapped(\\r\\n        address indexed tokenIn,\\r\\n        address indexed tokenOut,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    event Deposited(\\r\\n        address indexed token,\\r\\n        address indexed sender,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    event Withdrawn(\\r\\n        address indexed token,\\r\\n        address indexed recipient,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    event LiquidityMintFailed(\\r\\n        uint256 amount0Desired,\\r\\n        uint256 amount1Desired,\\r\\n        string reason\\r\\n    );\\r\\n\\r\\n    event LiquidityRemoveFailed(uint256 indexed tokenId, string reason);\\r\\n\\r\\n    event StrategyParamUpdated(string paramName, uint256 newValue);\\r\\n\\r\\n    // \\u0627\\u06cc\\u0648\\u0646\\u062a \\u062c\\u062f\\u06cc\\u062f \\u0628\\u0631\\u0627\\u06cc \\u062c\\u0645\\u0639\\u200c\\u0622\\u0648\\u0631\\u06cc \\u062f\\u0627\\u062f\\u0647\\u200c\\u0647\\u0627\\r\\n    event LiquidityManagementMetrics(\\r\\n        uint256 timestamp, // \\u0632\\u0645\\u0627\\u0646 \\u0639\\u0645\\u0644\\u06cc\\u0627\\u062a\\r\\n        uint256 actualPrice, // \\u0642\\u06cc\\u0645\\u062a \\u0648\\u0627\\u0642\\u0639\\u06cc\\r\\n        uint256 predictedPrice, // \\u0642\\u06cc\\u0645\\u062a \\u067e\\u06cc\\u0634\\u200c\\u0628\\u06cc\\u0646\\u06cc \\u0634\\u062f\\u0647 LSTM\\r\\n        int24 currentTick, // \\u062a\\u06cc\\u06a9 \\u0641\\u0639\\u0644\\u06cc\\r\\n        int24 predictedTick, // \\u062a\\u06cc\\u06a9 \\u067e\\u06cc\\u0634\\u200c\\u0628\\u06cc\\u0646\\u06cc \\u0634\\u062f\\u0647\\r\\n        int24 tickLower, // \\u062a\\u06cc\\u06a9 \\u067e\\u0627\\u06cc\\u06cc\\u0646 \\u0645\\u062d\\u062f\\u0648\\u062f\\u0647 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        int24 tickUpper, // \\u062a\\u06cc\\u06a9 \\u0628\\u0627\\u0644\\u0627\\u06cc \\u0645\\u062d\\u062f\\u0648\\u062f\\u0647 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        uint128 liquidity, // \\u0645\\u0642\\u062f\\u0627\\u0631 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        uint256 amount0, // \\u0645\\u0642\\u062f\\u0627\\u0631 \\u062a\\u0648\\u06a9\\u0646 0\\r\\n        uint256 amount1 // \\u0645\\u0642\\u062f\\u0627\\u0631 \\u062a\\u0648\\u06a9\\u0646 1\\r\\n    );\\r\\n\\r\\n    // --- Constructor ---\\r\\n    constructor(\\r\\n        address _factory,\\r\\n        address _positionManager,\\r\\n        address _swapRouter,\\r\\n        address _token0,\\r\\n        address _token1,\\r\\n        uint24 _fee,\\r\\n        address _weth9,\\r\\n        address _initialOwner\\r\\n    ) {\\r\\n        // \\u0630\\u062e\\u06cc\\u0631\\u0647 \\u0645\\u0642\\u0627\\u062f\\u06cc\\u0631 \\u062f\\u0631 \\u0645\\u062a\\u063a\\u06cc\\u0631\\u0647\\u0627\\u06cc immutable\\r\\n        factory = IUniswapV3Factory(_factory);\\r\\n        positionManager = INonfungiblePositionManager(_positionManager);\\r\\n        swapRouter = ISwapRouter(_swapRouter);\\r\\n        token0 = _token0;\\r\\n        token1 = _token1;\\r\\n        fee = _fee;\\r\\n        WETH9 = _weth9;\\r\\n\\r\\n        // \\u0628\\u0631\\u0631\\u0633\\u06cc decimals \\u0628\\u0627 \\u0627\\u0633\\u062a\\u0641\\u0627\\u062f\\u0647 \\u0627\\u0632 try-catch\\r\\n        try IERC20Decimals(_token0).decimals() returns (uint8 _decimals) {\\r\\n            token0Decimals = _decimals;\\r\\n        } catch {\\r\\n            revert(\\\"Token0 does not support decimals()\\\");\\r\\n        }\\r\\n\\r\\n        try IERC20Decimals(_token1).decimals() returns (uint8 _decimals) {\\r\\n            token1Decimals = _decimals;\\r\\n        } catch {\\r\\n            revert(\\\"Token1 does not support decimals()\\\");\\r\\n        }\\r\\n\\r\\n        // \\u0630\\u062e\\u06cc\\u0631\\u0647 tickSpacing \\u062f\\u0631 \\u06cc\\u06a9 \\u0645\\u062a\\u063a\\u06cc\\u0631 \\u0645\\u0648\\u0642\\u062a\\r\\n        address poolAddress = IUniswapV3Factory(_factory).getPool(\\r\\n            _token0,\\r\\n            _token1,\\r\\n            _fee\\r\\n        );\\r\\n        require(poolAddress != address(0), \\\"Pool does not exist\\\");\\r\\n        tickSpacing = IUniswapV3Pool(poolAddress).tickSpacing();\\r\\n\\r\\n        // \\u062a\\u0646\\u0638\\u06cc\\u0645 \\u0645\\u062c\\u0648\\u0632\\u0647\\u0627 \\u0628\\u0627 \\u0627\\u0633\\u062a\\u0641\\u0627\\u062f\\u0647 \\u0627\\u0632 \\u0622\\u062f\\u0631\\u0633\\u200c\\u0647\\u0627\\u06cc \\u0648\\u0631\\u0648\\u062f\\u06cc \\u0628\\u0647 \\u062c\\u0627\\u06cc \\u0645\\u062a\\u063a\\u06cc\\u0631\\u0647\\u0627\\u06cc immutable\\r\\n        IERC20(_token0).safeApprove(\\r\\n            address(_positionManager),\\r\\n            type(uint256).max\\r\\n        );\\r\\n        IERC20(_token1).safeApprove(\\r\\n            address(_positionManager),\\r\\n            type(uint256).max\\r\\n        );\\r\\n        IERC20(_token0).safeApprove(address(_swapRouter), type(uint256).max);\\r\\n        IERC20(_token1).safeApprove(address(_swapRouter), type(uint256).max);\\r\\n\\r\\n        if (_weth9 != address(0)) {\\r\\n            IERC20(_weth9).safeApprove(\\r\\n                address(_positionManager),\\r\\n                type(uint256).max\\r\\n            );\\r\\n            IERC20(_weth9).safeApprove(address(_swapRouter), type(uint256).max);\\r\\n        }\\r\\n\\r\\n        if (_initialOwner != address(0)) {\\r\\n            transferOwnership(_initialOwner);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Automated Liquidity Management (Owner Only) ---\\r\\n    function updatePredictionAndAdjust(\\r\\n        uint256 predictedPriceDecimal\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        uint256 gasStart = gasleft();\\r\\n        bool adjusted = false;\\r\\n\\r\\n        // \\u062f\\u0631\\u06cc\\u0627\\u0641\\u062a \\u0627\\u0637\\u0644\\u0627\\u0639\\u0627\\u062a \\u0642\\u06cc\\u0645\\u062a \\u0648 \\u062a\\u06cc\\u06a9 \\u0641\\u0639\\u0644\\u06cc\\r\\n        (\\r\\n            uint160 sqrtPriceX96,\\r\\n            int24 currentTick\\r\\n        ) = _getCurrentSqrtPriceAndTick();\\r\\n        uint256 currentPriceDecimal = _sqrtPriceX96ToPrice(sqrtPriceX96);\\r\\n        int24 predictedTick = _priceToTick(predictedPriceDecimal);\\r\\n\\r\\n        // \\u0645\\u062d\\u0627\\u0633\\u0628\\u0647 \\u0645\\u0648\\u0642\\u0639\\u06cc\\u062a \\u062c\\u062f\\u06cc\\u062f\\r\\n        (int24 targetTickLower, int24 targetTickUpper) = _calculateTicks(\\r\\n            predictedTick\\r\\n        );\\r\\n\\r\\n        // \\u0628\\u0631\\u0648\\u0632\\u0631\\u0633\\u0627\\u0646\\u06cc \\u0645\\u0648\\u0642\\u0639\\u06cc\\u062a \\u062f\\u0631 \\u0635\\u0648\\u0631\\u062a \\u0646\\u06cc\\u0627\\u0632\\r\\n        if (\\r\\n            !currentPosition.active ||\\r\\n            targetTickLower != currentPosition.tickLower ||\\r\\n            targetTickUpper != currentPosition.tickUpper\\r\\n        ) {\\r\\n            _adjustLiquidity(targetTickLower, targetTickUpper);\\r\\n            adjusted = true;\\r\\n        }\\r\\n\\r\\n        // \\u0627\\u0631\\u0633\\u0627\\u0644 \\u062f\\u0627\\u062f\\u0647\\u200c\\u0647\\u0627 \\u0628\\u0631\\u0627\\u06cc \\u06af\\u0632\\u0627\\u0631\\u0634 \\u0639\\u0645\\u0644\\u06cc\\u0627\\u062a\\u06cc\\r\\n        emit OperationReported(\\r\\n            currentPriceDecimal,\\r\\n            predictedPriceDecimal,\\r\\n            currentTick,\\r\\n            predictedTick,\\r\\n            adjusted,\\r\\n            gasStart - gasleft()\\r\\n        );\\r\\n\\r\\n        // \\u0627\\u0631\\u0633\\u0627\\u0644 \\u062f\\u0627\\u062f\\u0647\\u200c\\u0647\\u0627 \\u0628\\u0631\\u0627\\u06cc \\u062a\\u062d\\u0644\\u06cc\\u0644\\r\\n        emit LiquidityManagementMetrics(\\r\\n            block.timestamp,\\r\\n            currentPriceDecimal,\\r\\n            predictedPriceDecimal,\\r\\n            currentTick,\\r\\n            predictedTick,\\r\\n            currentPosition.tickLower,\\r\\n            currentPosition.tickUpper,\\r\\n            currentPosition.liquidity,\\r\\n            IERC20(token0).balanceOf(address(this)),\\r\\n            IERC20(token1).balanceOf(address(this))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function swap(\\r\\n        SwapParams calldata params\\r\\n    ) external nonReentrant onlyOwner returns (uint256 amountOut) {\\r\\n        require(\\r\\n            params.tokenIn == token0 || params.tokenIn == token1,\\r\\n            \\\"Invalid tokenIn\\\"\\r\\n        );\\r\\n        require(\\r\\n            params.tokenOut == token0 || params.tokenOut == token1,\\r\\n            \\\"Invalid tokenOut\\\"\\r\\n        );\\r\\n\\r\\n        // \\u0627\\u0646\\u062a\\u0642\\u0627\\u0644 \\u062a\\u0648\\u06a9\\u0646\\u200c\\u0647\\u0627\\r\\n        IERC20(params.tokenIn).safeTransferFrom(\\r\\n            msg.sender,\\r\\n            address(this),\\r\\n            params.amountIn\\r\\n        );\\r\\n        IERC20(params.tokenIn).safeApprove(\\r\\n            address(swapRouter),\\r\\n            params.amountIn\\r\\n        );\\r\\n\\r\\n        // \\u0627\\u0646\\u062c\\u0627\\u0645 \\u0633\\u0648\\u0627\\u067e\\r\\n        ISwapRouter.ExactInputSingleParams memory swapParams = ISwapRouter\\r\\n            .ExactInputSingleParams({\\r\\n                tokenIn: params.tokenIn,\\r\\n                tokenOut: params.tokenOut,\\r\\n                fee: params.poolFee,\\r\\n                recipient: address(this),\\r\\n                deadline: block.timestamp,\\r\\n                amountIn: params.amountIn,\\r\\n                amountOutMinimum: params.amountOutMinimum,\\r\\n                sqrtPriceLimitX96: params.sqrtPriceLimitX96\\r\\n            });\\r\\n\\r\\n        amountOut = swapRouter.exactInputSingle(swapParams);\\r\\n        emit Swapped(\\r\\n            params.tokenIn,\\r\\n            params.tokenOut,\\r\\n            params.amountIn,\\r\\n            amountOut\\r\\n        );\\r\\n\\r\\n        // \\u0631\\u06cc\\u0633\\u062a \\u062a\\u0623\\u06cc\\u06cc\\u062f\\u06cc\\u0647\\r\\n        IERC20(params.tokenIn).safeApprove(address(swapRouter), 0);\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    // --- Internal Liquidity Management Helpers ---\\r\\n    function _adjustLiquidity(int24 tickLower, int24 tickUpper) internal {\\r\\n        if (currentPosition.active) {\\r\\n            _removeLiquidity();\\r\\n        }\\r\\n        uint256 balance0 = IERC20(token0).balanceOf(address(this));\\r\\n        uint256 balance1 = IERC20(token1).balanceOf(address(this));\\r\\n        if (balance0 > 0 || balance1 > 0) {\\r\\n            _mintLiquidity(tickLower, tickUpper, balance0, balance1);\\r\\n        } else {\\r\\n            currentPosition.active = false;\\r\\n            currentPosition.tokenId = 0;\\r\\n            currentPosition.liquidity = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _removeLiquidity() internal {\\r\\n        require(\\r\\n            currentPosition.active && currentPosition.tokenId != 0,\\r\\n            \\\"No active position\\\"\\r\\n        );\\r\\n        uint256 currentTokenId = currentPosition.tokenId;\\r\\n        uint128 currentLiquidity = currentPosition.liquidity;\\r\\n\\r\\n        // \\u067e\\u0627\\u06a9 \\u06a9\\u0631\\u062f\\u0646 \\u0648\\u0636\\u0639\\u06cc\\u062a \\u0642\\u0628\\u0644 \\u0627\\u0632 \\u0641\\u0631\\u0627\\u062e\\u0648\\u0627\\u0646\\u06cc \\u062e\\u0627\\u0631\\u062c\\u06cc\\r\\n        currentPosition.active = false;\\r\\n        uint256 _tokenId = currentPosition.tokenId;\\r\\n        currentPosition.tokenId = 0;\\r\\n        currentPosition.liquidity = 0;\\r\\n        currentPosition.tickLower = 0;\\r\\n        currentPosition.tickUpper = 0;\\r\\n\\r\\n        bool decreased = false;\\r\\n        bool collected = false;\\r\\n        string memory errorMsg = \\\"\\\";\\r\\n\\r\\n        // \\u06a9\\u0627\\u0647\\u0634 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        if (currentLiquidity > 0) {\\r\\n            try\\r\\n                positionManager.decreaseLiquidity(\\r\\n                    INonfungiblePositionManager.DecreaseLiquidityParams({\\r\\n                        tokenId: _tokenId,\\r\\n                        liquidity: currentLiquidity,\\r\\n                        amount0Min: 0,\\r\\n                        amount1Min: 0,\\r\\n                        deadline: block.timestamp\\r\\n                    })\\r\\n                )\\r\\n            {\\r\\n                decreased = true;\\r\\n            } catch Error(string memory reason) {\\r\\n                errorMsg = reason;\\r\\n            } catch {\\r\\n                errorMsg = \\\"Decrease failed\\\";\\r\\n            }\\r\\n        } else {\\r\\n            decreased = true;\\r\\n        }\\r\\n\\r\\n        // \\u062c\\u0645\\u0639\\u200c\\u0622\\u0648\\u0631\\u06cc \\u062a\\u0648\\u06a9\\u0646\\u200c\\u0647\\u0627\\r\\n        (uint256 amount0, uint256 amount1) = (0, 0);\\r\\n        try\\r\\n            positionManager.collect(\\r\\n                INonfungiblePositionManager.CollectParams({\\r\\n                    tokenId: _tokenId,\\r\\n                    recipient: address(this),\\r\\n                    amount0Max: type(uint128).max,\\r\\n                    amount1Max: type(uint128).max\\r\\n                })\\r\\n            )\\r\\n        returns (uint256 a0, uint256 a1) {\\r\\n            (amount0, amount1) = (a0, a1);\\r\\n            collected = true;\\r\\n        } catch Error(string memory reason) {\\r\\n            if (bytes(errorMsg).length == 0) errorMsg = reason;\\r\\n        } catch {\\r\\n            if (bytes(errorMsg).length == 0) errorMsg = \\\"Collect failed\\\";\\r\\n        }\\r\\n\\r\\n        // \\u0633\\u0648\\u0632\\u0627\\u0646\\u062f\\u0646 NFT\\r\\n        if (decreased) {\\r\\n            try positionManager.burn(_tokenId) {} catch {}\\r\\n        }\\r\\n\\r\\n        if (!decreased || !collected) {\\r\\n            emit LiquidityRemoveFailed(_tokenId, errorMsg);\\r\\n        }\\r\\n\\r\\n        emit LiquidityRemoved(_tokenId, amount0, amount1);\\r\\n    }\\r\\n\\r\\n    function _mintLiquidity(\\r\\n        int24 tickLower,\\r\\n        int24 tickUpper,\\r\\n        uint256 amount0Desired,\\r\\n        uint256 amount1Desired\\r\\n    ) internal {\\r\\n        require(!currentPosition.active, \\\"Position already active\\\");\\r\\n\\r\\n        INonfungiblePositionManager.MintParams\\r\\n            memory params = INonfungiblePositionManager.MintParams({\\r\\n                token0: token0,\\r\\n                token1: token1,\\r\\n                fee: fee,\\r\\n                tickLower: tickLower,\\r\\n                tickUpper: tickUpper,\\r\\n                amount0Desired: amount0Desired,\\r\\n                amount1Desired: amount1Desired,\\r\\n                amount0Min: 0,\\r\\n                amount1Min: 0,\\r\\n                recipient: address(this),\\r\\n                deadline: block.timestamp\\r\\n            });\\r\\n\\r\\n        uint256 tokenId;\\r\\n        uint128 liquidity;\\r\\n        uint256 amount0Actual;\\r\\n        uint256 amount1Actual;\\r\\n\\r\\n        try positionManager.mint(params) returns (\\r\\n            uint256 _tokenId,\\r\\n            uint128 _liquidity,\\r\\n            uint256 _amount0,\\r\\n            uint256 _amount1\\r\\n        ) {\\r\\n            tokenId = _tokenId;\\r\\n            liquidity = _liquidity;\\r\\n            amount0Actual = _amount0;\\r\\n            amount1Actual = _amount1;\\r\\n\\r\\n            if (liquidity > 0) {\\r\\n                currentPosition = Position(\\r\\n                    tokenId,\\r\\n                    liquidity,\\r\\n                    tickLower,\\r\\n                    tickUpper,\\r\\n                    true\\r\\n                );\\r\\n                emit LiquidityAdjusted(\\r\\n                    tokenId,\\r\\n                    tickLower,\\r\\n                    tickUpper,\\r\\n                    liquidity\\r\\n                );\\r\\n            } else {\\r\\n                try positionManager.burn(tokenId) {} catch {}\\r\\n                emit LiquidityMintFailed(\\r\\n                    amount0Desired,\\r\\n                    amount1Desired,\\r\\n                    \\\"Zero liquidity minted\\\"\\r\\n                );\\r\\n            }\\r\\n        } catch Error(string memory reason) {\\r\\n            emit LiquidityMintFailed(amount0Desired, amount1Desired, reason);\\r\\n        } catch {\\r\\n            emit LiquidityMintFailed(\\r\\n                amount0Desired,\\r\\n                amount1Desired,\\r\\n                \\\"Unknown mint error\\\"\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Internal Calculation Helpers ---\\r\\n    function _calculateTicks(\\r\\n        int24 targetCenterTick\\r\\n    ) internal view returns (int24 tickLower, int24 tickUpper) {\\r\\n        int24 halfWidth = tickSpacing * int24(rangeWidthMultiplier);\\r\\n\\r\\n        tickLower = (targetCenterTick / tickSpacing) * tickSpacing - halfWidth;\\r\\n        tickUpper = (targetCenterTick / tickSpacing) * tickSpacing + halfWidth;\\r\\n\\r\\n        if (tickLower < TickMath.MIN_TICK) tickLower = TickMath.MIN_TICK;\\r\\n        if (tickUpper > TickMath.MAX_TICK) tickUpper = TickMath.MAX_TICK;\\r\\n    }\\r\\n\\r\\n    function _getCurrentSqrtPriceAndTick()\\r\\n        internal\\r\\n        view\\r\\n        returns (uint160 sqrtPriceX96, int24 tick)\\r\\n    {\\r\\n        address poolAddress = factory.getPool(token0, token1, fee);\\r\\n        require(poolAddress != address(0), \\\"Pool doesn't exist\\\");\\r\\n        (sqrtPriceX96, tick, , , , , ) = IUniswapV3Pool(poolAddress).slot0();\\r\\n    }\\r\\n\\r\\n    function _priceToTick(uint256 priceDecimal) internal view returns (int24) {\\r\\n        uint256 priceForSqrt;\\r\\n        if (token1Decimals >= token0Decimals) {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token1Decimals).sub(uint256(token0Decimals)));\\r\\n            priceForSqrt = priceDecimal.div(factor);\\r\\n        } else {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token0Decimals).sub(uint256(token1Decimals)));\\r\\n            priceForSqrt = priceDecimal.mul(factor);\\r\\n        }\\r\\n\\r\\n        uint160 sqrtPriceX96 = uint160(\\r\\n            SqrtMath.sqrt(priceForSqrt).mul(2 ** 96)\\r\\n        );\\r\\n        return TickMath.getTickAtSqrtRatio(sqrtPriceX96);\\r\\n    }\\r\\n\\r\\n    function _sqrtPriceX96ToPrice(\\r\\n        uint160 sqrtPriceX96\\r\\n    ) internal view returns (uint256 priceDecimal) {\\r\\n        uint256 ratioX192 = uint256(sqrtPriceX96).mul(uint256(sqrtPriceX96));\\r\\n        uint256 priceUnadjusted = ratioX192 >> 192;\\r\\n\\r\\n        if (token1Decimals >= token0Decimals) {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token1Decimals).sub(uint256(token0Decimals)));\\r\\n            priceDecimal = priceUnadjusted.mul(factor);\\r\\n        } else {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token0Decimals).sub(uint256(token1Decimals)));\\r\\n            priceDecimal = priceUnadjusted.div(factor);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Emit Event ---\\r\\n    function _emitOperationReported(\\r\\n        uint256 _actualPrice,\\r\\n        uint256 _predictedPrice,\\r\\n        int24 _currentTick,\\r\\n        int24 _predictedTick,\\r\\n        bool _adjusted,\\r\\n        uint256 _gasUsed\\r\\n    ) internal {\\r\\n        emit OperationReported(\\r\\n            _actualPrice,\\r\\n            _predictedPrice,\\r\\n            _currentTick,\\r\\n            _predictedTick,\\r\\n            _adjusted,\\r\\n            _gasUsed\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // --- Uniswap V3 Mint Callback ---\\r\\n    function uniswapV3MintCallback(\\r\\n        uint256 amount0Owed,\\r\\n        uint256 amount1Owed,\\r\\n        bytes calldata /* data */\\r\\n    ) external override {\\r\\n        require(\\r\\n            msg.sender == address(positionManager),\\r\\n            \\\"Callback sender mismatch\\\"\\r\\n        );\\r\\n\\r\\n        if (amount0Owed > 0) {\\r\\n            IERC20(token0).safeTransfer(msg.sender, amount0Owed);\\r\\n        }\\r\\n        if (amount1Owed > 0) {\\r\\n            IERC20(token1).safeTransfer(msg.sender, amount1Owed);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Payments Functions ---\\r\\n    receive() external payable {} // Keep payable receive\\r\\n\\r\\n    function refundETH() external payable {\\r\\n        require(address(this).balance > 0, \\\"No ETH to refund\\\");\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function sweepToken(\\r\\n        address token,\\r\\n        uint256 amountMinimum,\\r\\n        address recipient\\r\\n    ) external payable onlyOwner {\\r\\n        require(recipient != address(0), \\\"Invalid recipient\\\");\\r\\n        uint256 balance = IERC20(token).balanceOf(address(this));\\r\\n        require(balance >= amountMinimum, \\\"Insufficient balance\\\");\\r\\n        IERC20(token).safeTransfer(recipient, balance);\\r\\n    }\\r\\n\\r\\n    function unwrapWETH9(\\r\\n        uint256 amountMinimum,\\r\\n        address recipient\\r\\n    ) external payable {\\r\\n        require(WETH9 != address(0), \\\"WETH9 not set\\\");\\r\\n        require(recipient != address(0), \\\"Invalid recipient\\\");\\r\\n        uint256 balance = IWETH9(WETH9).balanceOf(address(this));\\r\\n        require(balance >= amountMinimum, \\\"Insufficient WETH\\\");\\r\\n        IWETH9(WETH9).withdraw(balance);\\r\\n        payable(recipient).transfer(balance);\\r\\n    }\\r\\n\\r\\n    // --- Token Handling (Owner Only) ---\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        require(\\r\\n            _token == token0 ||\\r\\n                _token == token1 ||\\r\\n                (_token == WETH9 && WETH9 != address(0)), // Allow WETH9 deposit only if set\\r\\n            \\\"Invalid deposit token\\\"\\r\\n        );\\r\\n        require(_amount > 0, \\\"Deposit amount zero\\\");\\r\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\r\\n        emit Deposited(_token, msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable nonReentrant onlyOwner {\\r\\n        require(WETH9 != address(0), \\\"WETH9 address not set\\\");\\r\\n        require(msg.value > 0, \\\"Deposit ETH value zero\\\");\\r\\n        // Wrap received ETH into WETH9\\r\\n        IWETH9(WETH9).deposit{value: msg.value}();\\r\\n        emit Deposited(WETH9, msg.sender, msg.value); // Emit WETH9 address\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        address _recipient\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        require(_recipient != address(0), \\\"Invalid recipient address\\\");\\r\\n        require(_amount > 0, \\\"Withdraw amount zero\\\");\\r\\n        // Check sufficient balance before transfer\\r\\n        require(\\r\\n            IERC20(_token).balanceOf(address(this)) >= _amount,\\r\\n            \\\"Insufficient balance\\\"\\r\\n        );\\r\\n        IERC20(_token).safeTransfer(_recipient, _amount);\\r\\n        emit Withdrawn(_token, _recipient, _amount);\\r\\n    }\\r\\n\\r\\n    function withdrawETH(\\r\\n        uint256 _amount,\\r\\n        address payable _recipient // Use address payable directly\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        require(WETH9 != address(0), \\\"WETH9 address not set\\\");\\r\\n        require(_recipient != address(0), \\\"Invalid recipient address\\\");\\r\\n        require(_amount > 0, \\\"Withdraw amount zero\\\");\\r\\n        // Check sufficient WETH balance before unwrapping\\r\\n        require(\\r\\n            IWETH9(WETH9).balanceOf(address(this)) >= _amount,\\r\\n            \\\"Insufficient WETH balance\\\"\\r\\n        );\\r\\n\\r\\n        // Unwrap WETH9 to ETH\\r\\n        IWETH9(WETH9).withdraw(_amount);\\r\\n        // Transfer ETH to recipient\\r\\n        _recipient.transfer(_amount); // Use transfer or low-level call\\r\\n        emit Withdrawn(WETH9, _recipient, _amount); // Emit WETH9 address\\r\\n    }\\r\\n\\r\\n    // --- Strategy Parameter Adjustment ---\\r\\n    function setRangeWidthMultiplier(uint24 _multiplier) external onlyOwner {\\r\\n        require(_multiplier > 0 && _multiplier <= 100, \\\"Invalid multiplier\\\");\\r\\n        rangeWidthMultiplier = _multiplier;\\r\\n        emit StrategyParamUpdated(\\\"rangeWidthMultiplier\\\", _multiplier);\\r\\n    }\\r\\n\\r\\n    // --- View Functions (Remain mostly the same) ---\\r\\n    function getActivePositionDetails()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256 tokenId,\\r\\n            uint128 liquidity,\\r\\n            int24 tickLower,\\r\\n            int24 tickUpper,\\r\\n            bool active\\r\\n        )\\r\\n    {\\r\\n        return (\\r\\n            currentPosition.tokenId,\\r\\n            currentPosition.liquidity,\\r\\n            currentPosition.tickLower,\\r\\n            currentPosition.tickUpper,\\r\\n            currentPosition.active\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getContractBalances()\\r\\n        external\\r\\n        view\\r\\n        returns (uint256 balance0, uint256 balance1, uint256 balanceWETH)\\r\\n    {\\r\\n        balance0 = IERC20(token0).balanceOf(address(this));\\r\\n        balance1 = IERC20(token1).balanceOf(address(this));\\r\\n        balanceWETH = WETH9 != address(0)\\r\\n            ? IERC20(WETH9).balanceOf(address(this))\\r\\n            : 0;\\r\\n    }\\r\\n\\r\\n    function getPoolAddress() external view returns (address) {\\r\\n        return factory.getPool(token0, token1, fee);\\r\\n    }\\r\\n\\r\\n    // Helper to check absolute value for decimals difference\\r\\n    function abs(int256 x) private pure returns (uint256) {\\r\\n        return uint256(x >= 0 ? x : -x);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6094682bb8f926cba7a522eac0cab11fe28b627fe8265c31c2f9605611a21371\",\"license\":\"MIT\"},\"contracts/libraries/SqrtMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.7.6;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\"; // Import OZ 3.4 SafeMath\\r\\n\\r\\n/**\\r\\n * @title Safe Square Root Math Library for Solidity 0.7.x\\r\\n * @author Adapted from OpenZeppelin Contracts & other sources\\r\\n * @notice Provides square root functionality using SafeMath for uint256.\\r\\n */\\r\\nlibrary SqrtMath {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    // Optional: Include Rounding enum if your main contract needs the rounding variant\\r\\n    enum Rounding {\\r\\n        Floor,\\r\\n        Ceil\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer square root of a number rounded down (floor).\\r\\n     * Uses Babylonian method with SafeMath. 6 iterations are sufficient for uint256.\\r\\n     */\\r\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\r\\n        if (a == 0) return 0;\\r\\n\\r\\n        // Initial estimate - can start with a simple estimate like a/2 or use log2 based estimate\\r\\n        // Using roughly x = 2**(log2(a)/2) based estimate (safer)\\r\\n        uint256 estimate = 1 << (log2(a) >> 1);\\r\\n        if (estimate == 0) estimate = 1; // Ensure estimate is not zero if a > 0\\r\\n\\r\\n        // Babylonian method iterations using SafeMath\\r\\n        // result = (estimate + a / estimate) / 2;\\r\\n        uint256 result = estimate.add(a.div(estimate)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n\\r\\n        // Final check for floor rounding (integer truncation might overshoot)\\r\\n        // Check if result * result > a\\r\\n        // Avoid direct multiplication if result can be large, use division check: result > a / result\\r\\n        if (result > a.div(result)) {\\r\\n            // If result > a/result, it means result*result > a (potential overflow avoided)\\r\\n            // So, the floor value is result - 1\\r\\n            return result.sub(1);\\r\\n        } else {\\r\\n            // Otherwise, result*result <= a, so result is the floor value\\r\\n            return result;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates sqrt(a), following the selected rounding direction.\\r\\n     */\\r\\n    function sqrt(\\r\\n        uint256 a,\\r\\n        Rounding rounding\\r\\n    ) internal pure returns (uint256) {\\r\\n        uint256 resultFloor = sqrt(a); // Calculate floor value first\\r\\n        if (rounding == Rounding.Floor) {\\r\\n            return resultFloor;\\r\\n        } else {\\r\\n            // rounding == Rounding.Ceil\\r\\n            // Check if ceil is needed (i.e., if a is not a perfect square)\\r\\n            // If resultFloor * resultFloor < a, then we need to round up\\r\\n            if (resultFloor.mul(resultFloor) < a) {\\r\\n                // Use SafeMath for the check\\r\\n                return resultFloor.add(1);\\r\\n            } else {\\r\\n                return resultFloor; // a was a perfect square, floor == ceil\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Internal helper: log2 needed for initial estimate ---\\r\\n    /**\\r\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\r\\n     * Returns 0 if given 0. Adapted from OZ 4.x for 0.7.6 compatibility using assembly.\\r\\n     */\\r\\n    function log2(uint256 x) internal pure returns (uint256 r) {\\r\\n        assembly {\\r\\n            let v := x\\r\\n            if iszero(v) {\\r\\n                r := 0\\r\\n            }\\r\\n            if gt(v, 0xffffffffffffffffffffffffffffffff) {\\r\\n                r := add(r, 128)\\r\\n                v := shr(128, v)\\r\\n            }\\r\\n            if gt(v, 0xffffffffffffffff) {\\r\\n                r := add(r, 64)\\r\\n                v := shr(64, v)\\r\\n            }\\r\\n            if gt(v, 0xffffffff) {\\r\\n                r := add(r, 32)\\r\\n                v := shr(32, v)\\r\\n            }\\r\\n            if gt(v, 0xffff) {\\r\\n                r := add(r, 16)\\r\\n                v := shr(16, v)\\r\\n            }\\r\\n            if gt(v, 0xff) {\\r\\n                r := add(r, 8)\\r\\n                v := shr(8, v)\\r\\n            }\\r\\n            if gt(v, 0xf) {\\r\\n                r := add(r, 4)\\r\\n                v := shr(4, v)\\r\\n            }\\r\\n            if gt(v, 0x3) {\\r\\n                r := add(r, 2)\\r\\n                v := shr(2, v)\\r\\n            }\\r\\n            if gt(v, 0x1) {\\r\\n                r := add(r, 1)\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7b28ea41070f2aa2bc2a07bb69c8c78511d7e7067cfb8c8c857be435811bed38\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"version":1}},"PredictiveLiquidityManagerFinal":{"abi":[{"inputs":[{"internalType":"address","name":"_factory","type":"address"},{"internalType":"address","name":"_positionManager","type":"address"},{"internalType":"address","name":"_swapRouter","type":"address"},{"internalType":"address","name":"_token0","type":"address"},{"internalType":"address","name":"_token1","type":"address"},{"internalType":"uint24","name":"_fee","type":"uint24"},{"internalType":"address","name":"_weth9","type":"address"},{"internalType":"address","name":"_initialOwner","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Deposited","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":false,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"}],"name":"LiquidityAdjusted","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"actualPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"indexed":false,"internalType":"int24","name":"currentTick","type":"int24"},{"indexed":false,"internalType":"int24","name":"predictedTick","type":"int24"},{"indexed":false,"internalType":"int24","name":"tickLower","type":"int24"},{"indexed":false,"internalType":"int24","name":"tickUpper","type":"int24"},{"indexed":false,"internalType":"uint128","name":"liquidity","type":"uint128"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"LiquidityManagementMetrics","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount0Desired","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1Desired","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"LiquidityMintFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"}],"name":"LiquidityRemoveFailed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"uint256","name":"tokenId","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount0","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount1","type":"uint256"}],"name":"LiquidityRemoved","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"actualPrice","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"predictedPrice","type":"uint256"},{"indexed":false,"internalType":"int24","name":"currentTick","type":"int24"},{"indexed":false,"internalType":"int24","name":"predictedTick","type":"int24"},{"indexed":false,"internalType":"bool","name":"adjusted","type":"bool"},{"indexed":false,"internalType":"uint256","name":"gasUsed","type":"uint256"}],"name":"OperationReported","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"string","name":"paramName","type":"string"},{"indexed":false,"internalType":"uint256","name":"newValue","type":"uint256"}],"name":"StrategyParamUpdated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"tokenIn","type":"address"},{"indexed":true,"internalType":"address","name":"tokenOut","type":"address"},{"indexed":false,"internalType":"uint256","name":"amountIn","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amountOut","type":"uint256"}],"name":"Swapped","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"token","type":"address"},{"indexed":true,"internalType":"address","name":"recipient","type":"address"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"}],"name":"Withdrawn","type":"event"},{"inputs":[],"name":"WETH9","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"currentPosition","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"depositETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"}],"name":"depositToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"factory","outputs":[{"internalType":"contract IUniswapV3Factory","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"fee","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getActivePositionDetails","outputs":[{"internalType":"uint256","name":"tokenId","type":"uint256"},{"internalType":"uint128","name":"liquidity","type":"uint128"},{"internalType":"int24","name":"tickLower","type":"int24"},{"internalType":"int24","name":"tickUpper","type":"int24"},{"internalType":"bool","name":"active","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getContractBalances","outputs":[{"internalType":"uint256","name":"balance0","type":"uint256"},{"internalType":"uint256","name":"balance1","type":"uint256"},{"internalType":"uint256","name":"balanceWETH","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getPoolAddress","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"positionManager","outputs":[{"internalType":"contract INonfungiblePositionManager","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"rangeWidthMultiplier","outputs":[{"internalType":"uint24","name":"","type":"uint24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"refundETH","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint24","name":"_multiplier","type":"uint24"}],"name":"setRangeWidthMultiplier","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"components":[{"internalType":"address","name":"tokenIn","type":"address"},{"internalType":"address","name":"tokenOut","type":"address"},{"internalType":"uint24","name":"poolFee","type":"uint24"},{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOutMinimum","type":"uint256"},{"internalType":"uint160","name":"sqrtPriceLimitX96","type":"uint160"}],"internalType":"struct PredictiveLiquidityManagerFinal.SwapParams","name":"params","type":"tuple"}],"name":"swap","outputs":[{"internalType":"uint256","name":"amountOut","type":"uint256"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"swapRouter","outputs":[{"internalType":"contract ISwapRouter","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"sweepToken","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"tickSpacing","outputs":[{"internalType":"int24","name":"","type":"int24"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token0Decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"token1Decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount0Owed","type":"uint256"},{"internalType":"uint256","name":"amount1Owed","type":"uint256"},{"internalType":"bytes","name":"","type":"bytes"}],"name":"uniswapV3MintCallback","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amountMinimum","type":"uint256"},{"internalType":"address","name":"recipient","type":"address"}],"name":"unwrapWETH9","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"uint256","name":"predictedPriceDecimal","type":"uint256"}],"name":"updatePredictionAndAdjust","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address payable","name":"_recipient","type":"address"}],"name":"withdrawETH","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"_token","type":"address"},{"internalType":"uint256","name":"_amount","type":"uint256"},{"internalType":"address","name":"_recipient","type":"address"}],"name":"withdrawToken","outputs":[],"stateMutability":"nonpayable","type":"function"},{"stateMutability":"payable","type":"receive"}],"devdoc":{"kind":"dev","methods":{"owner()":{"details":"Returns the address of the current owner."},"renounceOwnership()":{"details":"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."},"transferOwnership(address)":{"details":"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."}},"version":1},"evm":{"bytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3484:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"76:117:32","statements":[{"nodeType":"YulAssignment","src":"86:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"101:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"95:5:32"},"nodeType":"YulFunctionCall","src":"95:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"86:5:32"}]},{"body":{"nodeType":"YulBlock","src":"171:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"180:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"183:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"173:6:32"},"nodeType":"YulFunctionCall","src":"173:12:32"},"nodeType":"YulExpressionStatement","src":"173:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"130:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"141:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"156:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"161:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"152:3:32"},"nodeType":"YulFunctionCall","src":"152:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"165:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"148:3:32"},"nodeType":"YulFunctionCall","src":"148:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"137:3:32"},"nodeType":"YulFunctionCall","src":"137:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"127:2:32"},"nodeType":"YulFunctionCall","src":"127:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"120:6:32"},"nodeType":"YulFunctionCall","src":"120:50:32"},"nodeType":"YulIf","src":"117:2:32"}]},"name":"abi_decode_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"55:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"66:5:32","type":""}],"src":"14:179:32"},{"body":{"nodeType":"YulBlock","src":"279:139:32","statements":[{"body":{"nodeType":"YulBlock","src":"325:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"334:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"342:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"327:6:32"},"nodeType":"YulFunctionCall","src":"327:22:32"},"nodeType":"YulExpressionStatement","src":"327:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"300:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"309:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"296:3:32"},"nodeType":"YulFunctionCall","src":"296:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"321:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"292:3:32"},"nodeType":"YulFunctionCall","src":"292:32:32"},"nodeType":"YulIf","src":"289:2:32"},{"nodeType":"YulAssignment","src":"360:52:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"402:9:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"370:31:32"},"nodeType":"YulFunctionCall","src":"370:42:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"360:6:32"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"245:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"256:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"268:6:32","type":""}],"src":"198:220:32"},{"body":{"nodeType":"YulBlock","src":"622:713:32","statements":[{"body":{"nodeType":"YulBlock","src":"669:26:32","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"678:6:32"},{"name":"value4","nodeType":"YulIdentifier","src":"686:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"671:6:32"},"nodeType":"YulFunctionCall","src":"671:22:32"},"nodeType":"YulExpressionStatement","src":"671:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"643:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"652:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"639:3:32"},"nodeType":"YulFunctionCall","src":"639:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"664:3:32","type":"","value":"256"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"635:3:32"},"nodeType":"YulFunctionCall","src":"635:33:32"},"nodeType":"YulIf","src":"632:2:32"},{"nodeType":"YulAssignment","src":"704:52:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"746:9:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"714:31:32"},"nodeType":"YulFunctionCall","src":"714:42:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"704:6:32"}]},{"nodeType":"YulAssignment","src":"765:61:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"811:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"822:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"807:3:32"},"nodeType":"YulFunctionCall","src":"807:18:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"775:31:32"},"nodeType":"YulFunctionCall","src":"775:51:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"765:6:32"}]},{"nodeType":"YulAssignment","src":"835:61:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"881:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"892:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"877:3:32"},"nodeType":"YulFunctionCall","src":"877:18:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"845:31:32"},"nodeType":"YulFunctionCall","src":"845:51:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"835:6:32"}]},{"nodeType":"YulAssignment","src":"905:61:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"951:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"962:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"947:3:32"},"nodeType":"YulFunctionCall","src":"947:18:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"915:31:32"},"nodeType":"YulFunctionCall","src":"915:51:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"905:6:32"}]},{"nodeType":"YulAssignment","src":"975:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1021:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1032:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1017:3:32"},"nodeType":"YulFunctionCall","src":"1017:19:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"985:31:32"},"nodeType":"YulFunctionCall","src":"985:52:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"975:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1046:39:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1069:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1080:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1065:3:32"},"nodeType":"YulFunctionCall","src":"1065:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1059:5:32"},"nodeType":"YulFunctionCall","src":"1059:26:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1050:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1137:26:32","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"1146:6:32"},{"name":"value5","nodeType":"YulIdentifier","src":"1154:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1139:6:32"},"nodeType":"YulFunctionCall","src":"1139:22:32"},"nodeType":"YulExpressionStatement","src":"1139:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1107:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1118:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"1125:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1114:3:32"},"nodeType":"YulFunctionCall","src":"1114:20:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1104:2:32"},"nodeType":"YulFunctionCall","src":"1104:31:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1097:6:32"},"nodeType":"YulFunctionCall","src":"1097:39:32"},"nodeType":"YulIf","src":"1094:2:32"},{"nodeType":"YulAssignment","src":"1172:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1182:5:32"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"1172:6:32"}]},{"nodeType":"YulAssignment","src":"1196:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1242:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1253:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1238:3:32"},"nodeType":"YulFunctionCall","src":"1238:19:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1206:31:32"},"nodeType":"YulFunctionCall","src":"1206:52:32"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"1196:6:32"}]},{"nodeType":"YulAssignment","src":"1267:62:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1313:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1324:3:32","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1309:3:32"},"nodeType":"YulFunctionCall","src":"1309:19:32"}],"functionName":{"name":"abi_decode_t_address_fromMemory","nodeType":"YulIdentifier","src":"1277:31:32"},"nodeType":"YulFunctionCall","src":"1277:52:32"},"variableNames":[{"name":"value7","nodeType":"YulIdentifier","src":"1267:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint24t_addresst_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"532:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"543:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"555:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"563:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"571:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"579:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"587:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"595:6:32","type":""},{"name":"value6","nodeType":"YulTypedName","src":"603:6:32","type":""},{"name":"value7","nodeType":"YulTypedName","src":"611:6:32","type":""}],"src":"423:912:32"},{"body":{"nodeType":"YulBlock","src":"1419:218:32","statements":[{"body":{"nodeType":"YulBlock","src":"1465:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1474:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1482:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1467:6:32"},"nodeType":"YulFunctionCall","src":"1467:22:32"},"nodeType":"YulExpressionStatement","src":"1467:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1440:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1449:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1436:3:32"},"nodeType":"YulFunctionCall","src":"1436:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1461:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1432:3:32"},"nodeType":"YulFunctionCall","src":"1432:32:32"},"nodeType":"YulIf","src":"1429:2:32"},{"nodeType":"YulVariableDeclaration","src":"1500:29:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1519:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1513:5:32"},"nodeType":"YulFunctionCall","src":"1513:16:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1504:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1581:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1590:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1598:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1583:6:32"},"nodeType":"YulFunctionCall","src":"1583:22:32"},"nodeType":"YulExpressionStatement","src":"1583:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1551:5:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1569:1:32","type":"","value":"2"},{"name":"value","nodeType":"YulIdentifier","src":"1572:5:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"1558:10:32"},"nodeType":"YulFunctionCall","src":"1558:20:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1548:2:32"},"nodeType":"YulFunctionCall","src":"1548:31:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1541:6:32"},"nodeType":"YulFunctionCall","src":"1541:39:32"},"nodeType":"YulIf","src":"1538:2:32"},{"nodeType":"YulAssignment","src":"1616:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1626:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1616:6:32"}]}]},"name":"abi_decode_tuple_t_int24_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1385:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1396:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1408:6:32","type":""}],"src":"1340:297:32"},{"body":{"nodeType":"YulBlock","src":"1721:214:32","statements":[{"body":{"nodeType":"YulBlock","src":"1767:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1776:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1784:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1769:6:32"},"nodeType":"YulFunctionCall","src":"1769:22:32"},"nodeType":"YulExpressionStatement","src":"1769:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1742:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1751:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1738:3:32"},"nodeType":"YulFunctionCall","src":"1738:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1763:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1734:3:32"},"nodeType":"YulFunctionCall","src":"1734:32:32"},"nodeType":"YulIf","src":"1731:2:32"},{"nodeType":"YulVariableDeclaration","src":"1802:29:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1821:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1815:5:32"},"nodeType":"YulFunctionCall","src":"1815:16:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1806:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"1879:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1888:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1896:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1881:6:32"},"nodeType":"YulFunctionCall","src":"1881:22:32"},"nodeType":"YulExpressionStatement","src":"1881:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1853:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1864:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"1871:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1860:3:32"},"nodeType":"YulFunctionCall","src":"1860:16:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1850:2:32"},"nodeType":"YulFunctionCall","src":"1850:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1843:6:32"},"nodeType":"YulFunctionCall","src":"1843:35:32"},"nodeType":"YulIf","src":"1840:2:32"},{"nodeType":"YulAssignment","src":"1914:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1924:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1914:6:32"}]}]},"name":"abi_decode_tuple_t_uint8_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1687:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1698:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1710:6:32","type":""}],"src":"1642:293:32"},{"body":{"nodeType":"YulBlock","src":"2095:233:32","statements":[{"nodeType":"YulAssignment","src":"2105:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2117:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2128:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2113:3:32"},"nodeType":"YulFunctionCall","src":"2113:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2105:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"2140:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2158:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"2163:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"2154:3:32"},"nodeType":"YulFunctionCall","src":"2154:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"2167:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2150:3:32"},"nodeType":"YulFunctionCall","src":"2150:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"2144:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2185:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2200:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"2208:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2196:3:32"},"nodeType":"YulFunctionCall","src":"2196:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2178:6:32"},"nodeType":"YulFunctionCall","src":"2178:34:32"},"nodeType":"YulExpressionStatement","src":"2178:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2232:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2243:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2228:3:32"},"nodeType":"YulFunctionCall","src":"2228:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"2252:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"2260:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2248:3:32"},"nodeType":"YulFunctionCall","src":"2248:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2221:6:32"},"nodeType":"YulFunctionCall","src":"2221:43:32"},"nodeType":"YulExpressionStatement","src":"2221:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2284:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2295:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2280:3:32"},"nodeType":"YulFunctionCall","src":"2280:18:32"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"2304:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"2312:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2300:3:32"},"nodeType":"YulFunctionCall","src":"2300:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2273:6:32"},"nodeType":"YulFunctionCall","src":"2273:49:32"},"nodeType":"YulExpressionStatement","src":"2273:49:32"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2048:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2059:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2067:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2075:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2086:4:32","type":""}],"src":"1940:388:32"},{"body":{"nodeType":"YulBlock","src":"2507:224:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2524:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2535:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2517:6:32"},"nodeType":"YulFunctionCall","src":"2517:21:32"},"nodeType":"YulExpressionStatement","src":"2517:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2558:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2569:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2554:3:32"},"nodeType":"YulFunctionCall","src":"2554:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"2574:2:32","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2547:6:32"},"nodeType":"YulFunctionCall","src":"2547:30:32"},"nodeType":"YulExpressionStatement","src":"2547:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2597:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2608:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2593:3:32"},"nodeType":"YulFunctionCall","src":"2593:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"2613:34:32","type":"","value":"Token1 does not support decimals"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2586:6:32"},"nodeType":"YulFunctionCall","src":"2586:62:32"},"nodeType":"YulExpressionStatement","src":"2586:62:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2668:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2679:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2664:3:32"},"nodeType":"YulFunctionCall","src":"2664:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"2684:4:32","type":"","value":"()"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2657:6:32"},"nodeType":"YulFunctionCall","src":"2657:32:32"},"nodeType":"YulExpressionStatement","src":"2657:32:32"},{"nodeType":"YulAssignment","src":"2698:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2710:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2721:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2706:3:32"},"nodeType":"YulFunctionCall","src":"2706:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2698:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_1a7fec9648706a07f007a7b8cfb0532c4d975c09980513eb1cfb7916bca8e585__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2484:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2498:4:32","type":""}],"src":"2333:398:32"},{"body":{"nodeType":"YulBlock","src":"2910:169:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2927:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2938:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2920:6:32"},"nodeType":"YulFunctionCall","src":"2920:21:32"},"nodeType":"YulExpressionStatement","src":"2920:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2961:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2972:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2957:3:32"},"nodeType":"YulFunctionCall","src":"2957:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"2977:2:32","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2950:6:32"},"nodeType":"YulFunctionCall","src":"2950:30:32"},"nodeType":"YulExpressionStatement","src":"2950:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3000:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3011:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2996:3:32"},"nodeType":"YulFunctionCall","src":"2996:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"3016:21:32","type":"","value":"Pool does not exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2989:6:32"},"nodeType":"YulFunctionCall","src":"2989:49:32"},"nodeType":"YulExpressionStatement","src":"2989:49:32"},{"nodeType":"YulAssignment","src":"3047:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3059:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3070:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3055:3:32"},"nodeType":"YulFunctionCall","src":"3055:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3047:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2887:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2901:4:32","type":""}],"src":"2736:343:32"},{"body":{"nodeType":"YulBlock","src":"3258:224:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3275:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3286:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3268:6:32"},"nodeType":"YulFunctionCall","src":"3268:21:32"},"nodeType":"YulExpressionStatement","src":"3268:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3309:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3320:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3305:3:32"},"nodeType":"YulFunctionCall","src":"3305:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"3325:2:32","type":"","value":"34"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3298:6:32"},"nodeType":"YulFunctionCall","src":"3298:30:32"},"nodeType":"YulExpressionStatement","src":"3298:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3348:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3359:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3344:3:32"},"nodeType":"YulFunctionCall","src":"3344:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"3364:34:32","type":"","value":"Token0 does not support decimals"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3337:6:32"},"nodeType":"YulFunctionCall","src":"3337:62:32"},"nodeType":"YulExpressionStatement","src":"3337:62:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3419:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3430:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3415:3:32"},"nodeType":"YulFunctionCall","src":"3415:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"3435:4:32","type":"","value":"()"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3408:6:32"},"nodeType":"YulFunctionCall","src":"3408:32:32"},"nodeType":"YulExpressionStatement","src":"3408:32:32"},{"nodeType":"YulAssignment","src":"3449:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3461:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3472:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3457:3:32"},"nodeType":"YulFunctionCall","src":"3457:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3449:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_661d8ba06e4fe11f48d275e6363a31b01958af1680fc61f9e1e59f57f2f459e5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3235:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3249:4:32","type":""}],"src":"3084:398:32"}]},"contents":"{\n    { }\n    function abi_decode_t_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_uint24t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6, value7\n    {\n        if slt(sub(dataEnd, headStart), 256) { revert(value4, value4) }\n        value0 := abi_decode_t_address_fromMemory(headStart)\n        value1 := abi_decode_t_address_fromMemory(add(headStart, 32))\n        value2 := abi_decode_t_address_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_address_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_address_fromMemory(add(headStart, 128))\n        let value := mload(add(headStart, 160))\n        if iszero(eq(value, and(value, 0xffffff))) { revert(value5, value5) }\n        value5 := value\n        value6 := abi_decode_t_address_fromMemory(add(headStart, 192))\n        value7 := abi_decode_t_address_fromMemory(add(headStart, 224))\n    }\n    function abi_decode_tuple_t_int24_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, signextend(2, value))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, 0xff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_1a7fec9648706a07f007a7b8cfb0532c4d975c09980513eb1cfb7916bca8e585__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Token1 does not support decimals\")\n        mstore(add(headStart, 96), \"()\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_5431fb1d188dcb2accc598cd1f0bfc0c6d8ac1fdd8f589953b20179c9a903b37__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Pool does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_661d8ba06e4fe11f48d275e6363a31b01958af1680fc61f9e1e59f57f2f459e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Token0 does not support decimals\")\n        mstore(add(headStart, 96), \"()\")\n        tail := add(headStart, 128)\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"","opcodes":"PUSH2 0x1C0 PUSH1 0x40 MSTORE PUSH1 0x4 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND DUP2 OR SWAP1 SSTORE CALLVALUE DUP1 ISZERO PUSH3 0x20 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x5951 CODESIZE SUB DUP1 PUSH3 0x5951 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x43 SWAP2 PUSH3 0x9E8 JUMP JUMPDEST PUSH1 0x0 PUSH3 0x4F PUSH3 0x480 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x58D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 DUP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB NOT PUSH1 0x60 DUP10 DUP2 SHL DUP3 AND PUSH1 0x80 MSTORE DUP9 DUP2 SHL DUP3 AND PUSH1 0xA0 MSTORE DUP8 DUP2 SHL DUP3 AND PUSH1 0xC0 MSTORE DUP7 DUP2 SHL DUP3 AND PUSH1 0xE0 MSTORE DUP6 DUP2 SHL DUP3 AND PUSH2 0x100 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xE8 SHL SUB NOT PUSH1 0xE8 DUP7 SWAP1 SHL AND PUSH2 0x160 MSTORE DUP4 SWAP1 SHL AND PUSH2 0x1A0 MSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x313CE567 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 PUSH4 0x313CE567 SWAP2 PUSH1 0x4 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x11C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x14F JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x14C SWAP2 DUP2 ADD SWAP1 PUSH3 0xABA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16E SWAP1 PUSH3 0xB7E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT PUSH1 0xF8 SWAP2 SWAP1 SWAP2 SHL AND PUSH2 0x120 MSTORE DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x1C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH3 0x1F8 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH3 0x1F5 SWAP2 DUP2 ADD SWAP1 PUSH3 0xABA JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH3 0x217 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16E SWAP1 PUSH3 0xB05 JUMP JUMPDEST PUSH1 0xF8 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xF8 SHL SUB NOT AND PUSH2 0x140 MSTORE PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP11 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH3 0x25D SWAP1 DUP10 SWAP1 DUP10 SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH3 0xADD JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x276 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x28B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x2B1 SWAP2 SWAP1 PUSH3 0x9CB JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x2DC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x16E SWAP1 PUSH3 0xB47 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0C93A7C PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x32B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH3 0x351 SWAP2 SWAP1 PUSH3 0xA97 JUMP JUMPDEST PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP1 SIGNEXTEND PUSH1 0xE8 SHL PUSH2 0x180 MSTORE PUSH3 0x383 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP10 PUSH1 0x0 NOT PUSH3 0x484 PUSH1 0x20 SWAP1 DUP2 SHL PUSH3 0x218E OR SWAP1 SHR JUMP JUMPDEST PUSH3 0x3AA DUP9 PUSH1 0x0 NOT DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x484 PUSH1 0x20 SHL PUSH3 0x218E OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3D1 DUP8 PUSH1 0x0 NOT DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x484 PUSH1 0x20 SHL PUSH3 0x218E OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x3F8 DUP8 PUSH1 0x0 NOT DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x484 PUSH1 0x20 SHL PUSH3 0x218E OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND ISZERO PUSH3 0x456 JUMPI PUSH3 0x42F DUP9 PUSH1 0x0 NOT DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x484 PUSH1 0x20 SHL PUSH3 0x218E OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x456 DUP8 PUSH1 0x0 NOT DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x484 PUSH1 0x20 SHL PUSH3 0x218E OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND ISZERO PUSH3 0x471 JUMPI PUSH3 0x471 DUP3 PUSH3 0x5A8 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP PUSH3 0xBC0 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH3 0x50E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH3 0x4DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH3 0x4F3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x50A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH3 0x54B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x591B PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB SWAP1 DUP2 AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 SWAP2 MSTORE PUSH3 0x5A3 SWAP2 DUP6 SWAP2 PUSH3 0x6B2 AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH3 0x5B2 PUSH3 0x480 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x5C5 PUSH3 0x76E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH3 0x621 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH3 0x668 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x5885 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH3 0x58D1 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH3 0x70E DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH3 0x77D PUSH1 0x20 SHL PUSH3 0x22A6 OR SWAP1 SWAP3 SWAP2 SWAP1 PUSH1 0x20 SHR JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH3 0x5A3 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH3 0x72F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH3 0x5A3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x58F1 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH3 0x78E DUP5 DUP5 PUSH1 0x0 DUP6 PUSH3 0x798 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH3 0x7DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH3 0x58AB PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x7E6 DUP6 PUSH3 0x8FF JUMP JUMPDEST PUSH3 0x838 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH3 0x878 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH3 0x857 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH3 0x8DC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH3 0x8E1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP3 POP SWAP1 POP PUSH3 0x8F4 DUP3 DUP3 DUP7 PUSH3 0x909 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO ISZERO JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH3 0x91A JUMPI POP DUP2 PUSH3 0x791 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH3 0x92B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x977 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH3 0x95D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH3 0x9A5 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x904 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x9DD JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH3 0x791 DUP3 PUSH3 0x9B3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 DUP10 DUP12 SUB SLT ISZERO PUSH3 0xA05 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0xA10 DUP10 PUSH3 0x9B3 JUMP JUMPDEST SWAP8 POP PUSH3 0xA20 PUSH1 0x20 DUP11 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP7 POP PUSH3 0xA30 PUSH1 0x40 DUP11 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP6 POP PUSH3 0xA40 PUSH1 0x60 DUP11 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP5 POP PUSH3 0xA50 PUSH1 0x80 DUP11 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP4 POP PUSH1 0xA0 DUP10 ADD MLOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH3 0xA68 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP3 POP PUSH3 0xA78 PUSH1 0xC0 DUP11 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP2 POP PUSH3 0xA88 PUSH1 0xE0 DUP11 ADD PUSH3 0x9B3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP9 POP SWAP3 SWAP6 SWAP9 SWAP1 SWAP4 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xAA9 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH3 0x791 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0xACC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH3 0x791 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E3120646F6573206E6F7420737570706F727420646563696D616C73 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2829 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH32 0x506F6F6C20646F6573206E6F7420657869737400000000000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x22 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E3020646F6573206E6F7420737570706F727420646563696D616C73 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x2829 PUSH1 0xF0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0x60 SHR PUSH1 0xA0 MLOAD PUSH1 0x60 SHR PUSH1 0xC0 MLOAD PUSH1 0x60 SHR PUSH1 0xE0 MLOAD PUSH1 0x60 SHR PUSH2 0x100 MLOAD PUSH1 0x60 SHR PUSH2 0x120 MLOAD PUSH1 0xF8 SHR PUSH2 0x140 MLOAD PUSH1 0xF8 SHR PUSH2 0x160 MLOAD PUSH1 0xE8 SHR PUSH2 0x180 MLOAD PUSH1 0xE8 SHR PUSH2 0x1A0 MLOAD PUSH1 0x60 SHR PUSH2 0x4AFA PUSH3 0xD8B PUSH1 0x0 CODECOPY DUP1 PUSH2 0x791 MSTORE DUP1 PUSH2 0x7CD MSTORE DUP1 PUSH2 0x94B MSTORE DUP1 PUSH2 0x9EE MSTORE DUP1 PUSH2 0xAA8 MSTORE DUP1 PUSH2 0xB52 MSTORE DUP1 PUSH2 0x111D MSTORE DUP1 PUSH2 0x11A1 MSTORE DUP1 PUSH2 0x125F MSTORE DUP1 PUSH2 0x1304 MSTORE DUP1 PUSH2 0x1E2B MSTORE DUP1 PUSH2 0x1E91 MSTORE DUP1 PUSH2 0x1F0F MSTORE DUP1 PUSH2 0x20B8 MSTORE DUP1 PUSH2 0x2102 MSTORE POP DUP1 PUSH2 0x18DA MSTORE DUP1 PUSH2 0x27B8 MSTORE DUP1 PUSH2 0x27F5 MSTORE DUP1 PUSH2 0x2816 MSTORE POP DUP1 PUSH2 0x1A13 MSTORE DUP1 PUSH2 0x1CFF MSTORE DUP1 PUSH2 0x23E7 MSTORE DUP1 PUSH2 0x35BF MSTORE POP DUP1 PUSH2 0x4E6 MSTORE DUP1 PUSH2 0x2561 MSTORE DUP1 PUSH2 0x2591 MSTORE DUP1 PUSH2 0x261E MSTORE DUP1 PUSH2 0x2686 MSTORE DUP1 PUSH2 0x26B6 MSTORE DUP1 PUSH2 0x2743 MSTORE POP DUP1 PUSH2 0x186E MSTORE DUP1 PUSH2 0x253E MSTORE DUP1 PUSH2 0x25B5 MSTORE DUP1 PUSH2 0x25FA MSTORE DUP1 PUSH2 0x2662 MSTORE DUP1 PUSH2 0x26DA MSTORE DUP1 PUSH2 0x271F MSTORE POP DUP1 PUSH2 0x755 MSTORE DUP1 PUSH2 0x1032 MSTORE DUP1 PUSH2 0x1426 MSTORE DUP1 PUSH2 0x14CE MSTORE DUP1 PUSH2 0x18FE MSTORE DUP1 PUSH2 0x19B5 MSTORE DUP1 PUSH2 0x1CDD MSTORE DUP1 PUSH2 0x202F MSTORE DUP1 PUSH2 0x23C6 MSTORE DUP1 PUSH2 0x293B MSTORE DUP1 PUSH2 0x3590 MSTORE POP DUP1 PUSH2 0x50A MSTORE DUP1 PUSH2 0x71A MSTORE DUP1 PUSH2 0xF96 MSTORE DUP1 PUSH2 0x13DF MSTORE DUP1 PUSH2 0x1484 MSTORE DUP1 PUSH2 0x197B MSTORE DUP1 PUSH2 0x1CBB MSTORE DUP1 PUSH2 0x1F7B MSTORE DUP1 PUSH2 0x23A5 MSTORE DUP1 PUSH2 0x28B0 MSTORE DUP1 PUSH2 0x3561 MSTORE POP DUP1 PUSH2 0x1552 MSTORE DUP1 PUSH2 0x1645 MSTORE DUP1 PUSH2 0x1754 MSTORE DUP1 PUSH2 0x1892 MSTORE POP DUP1 PUSH2 0x183A MSTORE DUP1 PUSH2 0x192B MSTORE DUP1 PUSH2 0x321E MSTORE DUP1 PUSH2 0x3338 MSTORE DUP1 PUSH2 0x3438 MSTORE DUP1 PUSH2 0x3631 MSTORE DUP1 PUSH2 0x38B8 MSTORE POP DUP1 PUSH2 0x18B6 MSTORE DUP1 PUSH2 0x1C8E MSTORE DUP1 PUSH2 0x2376 MSTORE POP PUSH2 0x4AFA PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x791B98BC GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xD3487997 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xF586C6D9 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xFFD2A7D3 EQ PUSH2 0x4B5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xD3487997 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xD534D636 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xDF2AB5BB EQ PUSH2 0x465 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xC31C9C07 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x406 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x791B98BC EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xB31AC6E2 EQ PUSH2 0x3A5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3CCDBB28 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x49404B7C GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x49404B7C EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x516606EB EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x366 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3CCDBB28 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x41675B05 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x479C2E76 EQ PUSH2 0x2EB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x12210E8A GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x12210E8A EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1EE0B02E EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x36118B52 EQ PUSH2 0x28B JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1D31E7C EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xB77884D EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x21F JUMPI PUSH2 0x1CD JUMP JUMPDEST CALLDATASIZE PUSH2 0x1CD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x4733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x48E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST PUSH2 0x249 PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FAB JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E8E JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x402D JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EB9 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCE JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FFE JUMP JUMPDEST PUSH2 0x111B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EFA JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x178C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1838 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x185C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x186C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1890 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x18B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x41C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x18FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x40AA JUMP JUMPDEST PUSH2 0x1920 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x19DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EB9 JUMP JUMPDEST PUSH2 0x1A35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E56 JUMP JUMPDEST PUSH2 0x1B72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1C74 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x1D7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x487D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x58C PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x59D PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xFFFFFF AND GT DUP1 ISZERO PUSH2 0x601 JUMPI POP PUSH1 0x64 DUP2 PUSH3 0xFFFFFF AND GT ISZERO JUMPDEST PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x41EA JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH3 0xFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x22A7B700C7155AB4252833EEE76474BC7531E6598483AE76EB278DF86F084C0C SWAP1 PUSH2 0x660 SWAP1 DUP4 SWAP1 PUSH2 0x455B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x6BE PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CF PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x718 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x789 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x7F8 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x7F8 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x424D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x43C3 JUMP JUMPDEST PUSH2 0x849 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x22C3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x8EF PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x900 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x949 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x427C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x42AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA23 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST LT ISZERO PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0xADD SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP5 PUSH1 0x40 MLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xBFC PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC0D PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC56 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x42AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xCCA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST LT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4310 JUMP JUMPDEST PUSH2 0xD4C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x231D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP5 PUSH1 0x40 MLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xDF3 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE04 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE4D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH2 0xE5E PUSH2 0x236F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0xE6D DUP4 PUSH2 0x251D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE7A DUP8 PUSH2 0x265D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xE88 DUP4 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xEB8 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x2 DUP4 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND EQ ISZERO JUMPDEST DUP1 PUSH2 0xED5 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x2 DUP3 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x98 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE4 DUP3 DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x1 SWAP7 POP JUMPDEST PUSH32 0x74E6B99361B503F9A408F847F4767AF1B660A31AADE7F5E8B2A3FF487D35E854 DUP5 DUP11 DUP8 DUP7 DUP12 GAS DUP15 SUB PUSH1 0x40 MLOAD PUSH2 0xF24 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x9D590540B9DF5920F0D9D5D6702F02AF98857DBEE3BC9D3E2D5273D67D533C18 SWAP2 TIMESTAMP SWAP2 DUP8 SWAP2 DUP14 SWAP2 DUP11 SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 PUSH1 0x1 PUSH1 0x98 SHL DUP2 DIV SWAP1 SWAP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFCB SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1067 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1093 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10CD SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP2 SIGNEXTEND SWAP3 PUSH1 0x1 PUSH1 0x98 SHL DUP2 DIV SWAP1 SWAP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11D6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0x1294 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x136E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x137B PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x138C PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x140C PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x145E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1453 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x14B4 PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1509 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x14FE PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1525 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x436E JUMP JUMPDEST PUSH2 0x154D CALLER ADDRESS PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x153C PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST PUSH2 0x1593 PUSH32 0x0 PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH2 0x1583 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP1 PUSH2 0x15B0 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15D1 SWAP2 SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15EF PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x3FAB JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1635 SWAP2 SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP2 SWAP1 PUSH2 0x461C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E1 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16F3 PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1709 PUSH1 0x20 DUP6 ADD DUP6 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA078C4190ABE07940190EFFC1846BE0CCF03AD6007BC9E93F9697D0B460BEFBB DUP6 PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x1747 SWAP3 SWAP2 SWAP1 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1782 PUSH32 0x0 PUSH1 0x0 PUSH2 0x1583 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x3E56 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1794 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17A5 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x17EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4216 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x19A2 JUMPI PUSH2 0x19A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP7 PUSH2 0x231D JUMP JUMPDEST DUP3 ISZERO PUSH2 0x12FC JUMPI PUSH2 0x12FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0x231D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV DUP3 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x98 SHL DUP3 DIV SWAP1 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A3D PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A4E PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A97 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1ABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AEC SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B3C SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1B5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4310 JUMP JUMPDEST PUSH2 0x12FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 DUP4 PUSH2 0x231D JUMP JUMPDEST PUSH2 0x1B7A PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B8B PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1BD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49D8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH2 0x1D27 SWAP1 PUSH32 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x41A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x3E72 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1DC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1DCF PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DE0 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x427C JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x1E8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x433E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1F66 SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC5 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2015 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2064 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2090 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20B4 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20EB JUMPI PUSH1 0x0 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2137 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x214F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2187 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x2214 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x224F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A8F PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x22A1 SWAP1 DUP5 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22B5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2AD8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x12FC SWAP1 DUP6 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x22A1 SWAP1 DUP5 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2424 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x243C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2474 SWAP2 SWAP1 PUSH2 0x3E72 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x249C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x441C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x250D SWAP2 SWAP1 PUSH2 0x3F0B JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP3 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2533 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP1 PUSH2 0x2C33 JUMP JUMPDEST SWAP1 POP PUSH1 0xC0 DUP2 SWAP1 SHR PUSH1 0xFF PUSH32 0x0 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND LT PUSH2 0x25F1 JUMPI PUSH1 0x0 PUSH2 0x25DA PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x25E9 DUP3 DUP3 PUSH2 0x2C33 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2643 PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x2652 DUP3 DUP3 PUSH2 0x2CF2 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0xFF AND PUSH32 0x0 PUSH1 0xFF AND LT PUSH2 0x2716 JUMPI PUSH1 0x0 PUSH2 0x26FF PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x270E DUP5 DUP3 PUSH2 0x2CF2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x277B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2768 PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x2777 DUP5 DUP3 PUSH2 0x2C33 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x2794 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x278E DUP5 PUSH2 0x2D59 JUMP JUMPDEST SWAP1 PUSH2 0x2C33 JUMP JUMPDEST SWAP1 POP PUSH2 0x279F DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH3 0xFFFFFF AND PUSH32 0x0 SWAP1 DUP2 MUL SWAP1 DUP2 SWAP1 PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP8 SWAP1 SIGNEXTEND DUP2 PUSH2 0x27ED JUMPI INVALID JUMPDEST SDIV MUL SUB SWAP3 POP DUP1 PUSH32 0x0 PUSH32 0x0 PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2843 JUMPI INVALID JUMPDEST SDIV MUL ADD SWAP2 POP PUSH3 0xD89E7 NOT PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x2860 JUMPI PUSH3 0xD89E7 NOT SWAP3 POP JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x2876 JUMPI PUSH3 0xD89E8 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2896 JUMPI PUSH2 0x2896 PUSH2 0x3160 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x28E5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2911 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2935 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2985 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29D5 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x29E6 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x29FC JUMPI PUSH2 0x29F7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3527 JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 PUSH1 0x2 SSTORE PUSH23 0xFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x22A1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x22A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A65 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2B19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B22 DUP6 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x2B73 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2BB1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2B92 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C13 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C18 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2C28 DUP3 DUP3 DUP7 PUSH2 0x3969 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C42 JUMPI POP PUSH1 0x0 PUSH2 0x2C8F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2C4F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2C8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2CEC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2D48 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2D51 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2D68 JUMPI POP PUSH1 0x0 PUSH2 0x27A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2D75 DUP5 PUSH2 0x3A0D JUMP JUMPDEST PUSH1 0x1 SWAP2 SHR SHL SWAP1 POP DUP1 PUSH2 0x2D85 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 PUSH2 0x2DA6 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2D99 DUP8 DUP7 PUSH2 0x2CF2 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x3AB8 JUMP JUMPDEST SWAP1 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DC1 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x3AB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DD5 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE9 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DFD PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E11 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E1D DUP5 DUP3 PUSH2 0x2CF2 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2E38 JUMPI PUSH2 0x2E2F DUP2 PUSH1 0x1 PUSH2 0x2C95 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x27A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT DUP1 ISZERO SWAP1 PUSH2 0x2E7D JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT JUMPDEST PUSH2 0x2EB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB PUSH1 0x20 DUP4 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT PUSH1 0x7 SHL DUP2 DUP2 SHR PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH1 0x6 SHL SWAP1 DUP2 SHR PUSH4 0xFFFFFFFF DUP2 GT PUSH1 0x5 SHL SWAP1 DUP2 SHR PUSH2 0xFFFF DUP2 GT PUSH1 0x4 SHL SWAP1 DUP2 SHR PUSH1 0xFF DUP2 GT PUSH1 0x3 SWAP1 DUP2 SHL SWAP2 DUP3 SHR PUSH1 0xF DUP2 GT PUSH1 0x2 SHL SWAP1 DUP2 SHR SWAP2 DUP3 GT PUSH1 0x1 SWAP1 DUP2 SHL SWAP3 DUP4 SHR SWAP8 SWAP1 DUP9 GT SWAP7 OR SWAP1 SWAP5 OR SWAP1 SWAP3 OR OR SWAP1 SWAP2 OR OR OR PUSH1 0x80 DUP2 LT PUSH2 0x2F46 JUMPI PUSH1 0x7F DUP2 SUB DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x2F50 JUMP JUMPDEST DUP1 PUSH1 0x7F SUB DUP4 SWAP1 SHL SWAP2 POP JUMPDEST SWAP1 DUP1 MUL PUSH1 0x7F DUP2 DUP2 SHR PUSH1 0xFF DUP4 DUP2 SHR SWAP2 SWAP1 SWAP2 SHR DUP1 MUL DUP1 DUP4 SHR DUP2 DUP4 SHR SHR DUP1 MUL DUP1 DUP5 SHR DUP2 DUP5 SHR SHR DUP1 MUL DUP1 DUP6 SHR DUP2 DUP6 SHR SHR DUP1 MUL DUP1 DUP7 SHR DUP2 DUP7 SHR SHR DUP1 MUL DUP1 DUP8 SHR DUP2 DUP8 SHR SHR DUP1 MUL DUP1 DUP9 SHR DUP2 DUP9 SHR SHR DUP1 MUL DUP1 DUP10 SHR DUP2 DUP10 SHR SHR DUP1 MUL DUP1 DUP11 SHR DUP2 DUP11 SHR SHR DUP1 MUL DUP1 DUP12 SHR DUP2 DUP12 SHR SHR DUP1 MUL DUP1 DUP13 SHR DUP2 DUP13 SHR SHR DUP1 MUL DUP1 DUP14 SHR DUP2 DUP14 SHR SHR DUP1 MUL DUP1 DUP15 SHR SWAP13 DUP2 SWAP1 SHR SWAP13 SWAP1 SWAP13 SHR DUP1 MUL SWAP13 DUP14 SWAP1 SHR SWAP15 SWAP14 PUSH1 0x7F NOT DUP16 ADD PUSH1 0x40 SHL PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x8000000000000000 AND OR PUSH1 0xC1 SWAP12 SWAP1 SWAP12 SHR PUSH8 0x4000000000000000 AND SWAP11 SWAP1 SWAP11 OR PUSH1 0xC2 SWAP10 SWAP1 SWAP10 SHR PUSH8 0x2000000000000000 AND SWAP9 SWAP1 SWAP9 OR PUSH1 0xC3 SWAP8 SWAP1 SWAP8 SHR PUSH8 0x1000000000000000 AND SWAP7 SWAP1 SWAP7 OR PUSH1 0xC4 SWAP6 SWAP1 SWAP6 SHR PUSH8 0x800000000000000 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0xC5 SWAP4 SWAP1 SWAP4 SHR PUSH8 0x400000000000000 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0xC6 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x200000000000000 AND OR PUSH1 0xC7 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x100000000000000 AND OR PUSH1 0xC8 SWAP2 SWAP1 SWAP2 SHR PUSH7 0x80000000000000 AND OR PUSH1 0xC9 SWAP2 SWAP1 SWAP2 SHR PUSH7 0x40000000000000 AND OR PUSH1 0xCA SWAP2 SWAP1 SWAP2 SHR PUSH7 0x20000000000000 AND OR PUSH1 0xCB SWAP2 SWAP1 SWAP2 SHR PUSH7 0x10000000000000 AND OR PUSH1 0xCC SWAP2 SWAP1 SWAP2 SHR PUSH7 0x8000000000000 AND OR PUSH1 0xCD SWAP2 SWAP1 SWAP2 SHR PUSH7 0x4000000000000 AND OR PUSH10 0x3627A301D71055774C85 DUP2 MUL PUSH16 0x28F6481AB7F045A5AF012A19D003AA9 NOT DUP2 ADD PUSH1 0x80 SWAP1 DUP2 SAR SWAP1 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP4 ADD SWAP1 SAR PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND EQ PUSH2 0x3151 JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3135 DUP3 PUSH2 0x3B12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x314A JUMPI DUP2 PUSH2 0x314C JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3153 JUMP JUMPDEST DUP2 JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x317A JUMPI POP PUSH1 0x2 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x3196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x43F0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE DUP4 DUP2 MSTORE SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 SWAP1 DUP2 SWAP1 DUP5 ISZERO PUSH2 0x32F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x624E65F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xC49CCBE SWAP2 PUSH2 0x3252 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x45D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x326B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x329B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3298 SWAP2 DUP2 ADD SWAP1 PUSH2 0x4087 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x32E6 JUMPI PUSH2 0x32A7 PUSH2 0x48FD JUMP JUMPDEST DUP1 PUSH2 0x32B2 JUMPI POP PUSH2 0x32B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x32E1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x111958DC99585CD94819985A5B1959 PUSH1 0x8A SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH2 0x32ED JUMP JUMPDEST POP POP PUSH1 0x1 SWAP3 POP JUMPDEST PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xFC6F7865 SWAP2 PUSH2 0x336C SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x4596 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x33B5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x33B2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x4087 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3411 JUMPI PUSH2 0x33C1 PUSH2 0x48FD JUMP JUMPDEST DUP1 PUSH2 0x33CC JUMPI POP PUSH2 0x33DC JUMP JUMPDEST DUP4 MLOAD PUSH2 0x33D6 JUMPI DUP1 SWAP4 POP JUMPDEST POP PUSH2 0x340C JUMP JUMPDEST DUP3 MLOAD PUSH2 0x340C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x10DBDB1B1958DD0819985A5B1959 PUSH1 0x92 SHL DUP2 MSTORE POP SWAP3 POP JUMPDEST PUSH2 0x341B JUMP JUMPDEST PUSH1 0x1 SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x349A JUMPI PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH2 0x346D SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3498 JUMPI POP PUSH1 0x1 JUMPDEST POP JUMPDEST DUP5 ISZERO DUP1 PUSH2 0x34A5 JUMPI POP DUP4 ISZERO JUMPDEST ISZERO PUSH2 0x34E3 JUMPI DUP6 PUSH32 0xE8914E5F08092E2E56EF8BCED992F3D69B4EE899C061273D524B9B8369A2E5F6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x34DA SWAP2 SWAP1 PUSH2 0x41D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 PUSH32 0xBB89AA54ED6940A7E7167BD262B2400D63945045CEFF1A52A05F2601ED215F1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3515 SWAP3 SWAP2 SWAP1 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x42D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367B SWAP2 SWAP1 PUSH2 0x4685 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x36C5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x36C2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x403F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x375C JUMPI PUSH2 0x36D1 PUSH2 0x48FD JUMP JUMPDEST DUP1 PUSH2 0x36DC JUMPI POP PUSH2 0x371D JUMP JUMPDEST PUSH32 0xE3E761156CB5AAD50F5757AC6FF101FD3EB2EBA81B0D509536C0DE0F1046332A DUP9 DUP9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x370F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x3757 JUMP JUMPDEST PUSH32 0xE3E761156CB5AAD50F5757AC6FF101FD3EB2EBA81B0D509536C0DE0F1046332A DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x374E SWAP3 SWAP2 SWAP1 PUSH2 0x480A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x3958 JUMP JUMPDEST DUP4 SWAP8 POP DUP3 SWAP7 POP DUP2 SWAP6 POP DUP1 SWAP5 POP PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x38A1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xA8EBF59E901FC409129A5DDFCE5DCF103A4E3E31687D70E3FAA5EAB31C0715E1 DUP9 DUP15 DUP15 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3894 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x3953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH2 0x38ED SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3918 JUMPI POP PUSH1 0x1 JUMPDEST POP PUSH32 0xE3E761156CB5AAD50F5757AC6FF101FD3EB2EBA81B0D509536C0DE0F1046332A DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x394A SWAP3 SWAP2 SWAP1 PUSH2 0x4842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3978 JUMPI POP DUP2 PUSH2 0x22B8 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3988 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39D2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39BA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x39FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH2 0x3A1A JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT ISZERO PUSH2 0x3A31 JUMPI PUSH1 0x80 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A49 JUMPI PUSH1 0x40 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A5D JUMPI PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x3A6F JUMPI PUSH1 0x10 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3A80 JUMPI PUSH1 0x8 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x3A91 JUMPI PUSH1 0x4 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3AA2 JUMPI PUSH1 0x2 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3AB2 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2C8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x3B29 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x3B31 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x3B6F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x3B83 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3B95 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x3BC9 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x3BE8 JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x3C07 JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x3C26 JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x3C45 JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x3C64 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x3C83 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x3CA3 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x3CC3 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x3CE3 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x3D03 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x3D23 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x3D43 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x3D63 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x3D83 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x3DA4 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x3DC4 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x3DE3 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x3E00 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x3E1B JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x3E17 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x3E2F JUMPI PUSH1 0x1 PUSH2 0x3E32 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x27A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E67 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C8C DUP2 PUSH2 0x49A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E83 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C8C DUP2 PUSH2 0x49A2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EA0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3EAB DUP2 PUSH2 0x49A2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3ECD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3ED8 DUP2 PUSH2 0x49A2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3EEF DUP2 PUSH2 0x49A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AB2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3F25 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x3F30 DUP2 PUSH2 0x49A2 JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x3F47 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP6 POP PUSH2 0x3F55 PUSH1 0x40 DUP10 ADD PUSH2 0x3E44 JUMP JUMPDEST SWAP5 POP PUSH2 0x3F63 PUSH1 0x60 DUP10 ADD PUSH2 0x3E44 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F71 PUSH1 0x80 DUP10 ADD PUSH2 0x3E44 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3F86 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3F9B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FBC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2C8C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FDF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FF7 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4010 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4022 DUP2 PUSH2 0x49A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4010 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4054 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4071 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4099 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x40BF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x40E4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x40F7 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4105 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4116 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x415E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x4142 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x416F JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x22B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B21036BAB63A34B83634B2B9 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6261636B2073656E646572206D69736D617463680000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103232B837B9B4BA103A37B5B2B7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x15D155120E481859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x576974686472617720616D6F756E74207A65726F PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E20616C726561647920616374697665000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4465706F736974204554482076616C7565207A65726F PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59081D1BDAD95B93DD5D PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x92DCE6EACCCCD2C6D2CADCE840AE8AA89 PUSH1 0x7B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x4465706F73697420616D6F756E74207A65726F PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x27379030B1BA34BB32903837B9B4BA34B7B7 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x141BDBDB08191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x139BC8115512081D1BC81C99599D5B99 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x24B73B30B634B2103A37B5B2B724B7 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x15D155120E481B9BDD081CD95D PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420574554482062616C616E636500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x3930B733B2ABB4B23A3426BAB63A34B83634B2B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xE0 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4699 DUP3 DUP5 MLOAD PUSH2 0x4125 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x46AB PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x4125 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x46BE PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x4184 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x46D1 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x4132 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x46E4 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x4132 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x4722 DUP3 DUP6 ADD DUP3 PUSH2 0x4125 JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x2 SWAP3 DUP4 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SIGNEXTEND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 SWAP2 DUP3 SIGNEXTEND PUSH1 0x40 DUP6 ADD MSTORE SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP3 DUP4 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE SWAP2 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4801 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4139 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2AB735B737BBB71036B4B73A1032B93937B9 PUSH1 0x71 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x16995C9BC81B1A5C5D5A591A5D1E481B5A5B9D1959 PUSH1 0x5A SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x40 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 SWAP5 DUP6 SIGNEXTEND PUSH1 0x60 DUP10 ADD MSTORE SWAP3 DUP5 SIGNEXTEND PUSH1 0x80 DUP9 ADD MSTORE SWAP1 DUP4 SIGNEXTEND PUSH1 0xA0 DUP8 ADD MSTORE SWAP1 SWAP2 SIGNEXTEND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x490D JUMPI PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x4921 DUP3 MLOAD PUSH2 0x48F7 JUMP JUMPDEST EQ PUSH2 0x492B JUMPI PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x495B JUMPI POP POP POP POP PUSH2 0x1869 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4975 JUMPI POP POP POP POP PUSH2 0x1869 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x498D JUMPI POP POP POP PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C004F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A26469706673582212200775A0 0xED 0x4B GAS CREATE2 DUP15 PUSH26 0x53357AF6D061376A6FCC0FF09E6BA3B28CCB7B71C539E264736F PUSH13 0x634300070600334F776E61626C PUSH6 0x3A206E657720 PUSH16 0x776E657220697320746865207A65726F KECCAK256 PUSH2 0x6464 PUSH19 0x657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C8BE0079C MSTORE8 AND MSIZE EQ SGT DIFFICULTY 0xCD 0x1F 0xD0 LOG4 CALLCODE DUP5 NOT 0x49 PUSH32 0x9722A3DAAFE3B4186F6B6457E05361666545524332303A204552433230206F70 PUSH6 0x726174696F6E KECCAK256 PUSH5 0x6964206E6F PUSH21 0x20737563636565645361666545524332303A206170 PUSH17 0x726F76652066726F6D206E6F6E2D7A6572 PUSH16 0x20746F206E6F6E2D7A65726F20616C6C PUSH16 0x77616E63650000000000000000000000 ","sourceMap":"1795:23048:30:-:0;;;2883:1;2846:38;;-1:-1:-1;;2846:38:30;;;;;5075:2317;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;884:17:0;904:12;:10;:12::i;:::-;926:6;:18;;-1:-1:-1;;;;;;926:18:0;-1:-1:-1;;;;;926:18:0;;;;;;;959:43;;926:18;;-1:-1:-1;926:18:0;-1:-1:-1;;;;;;;;;;;959:43:0;926:6;;959:43;-1:-1:-1;1645:1:10;1760:22;;-1:-1:-1;;;;;;5396:37:30;;;;;;;;5444:63;;;;;;;5518:37;;;;;;;5566:16;;;;;;;5593;;;;;;;-1:-1:-1;;;;;;5620:10:30;;;;;;;5641:14;;;;;;5739:34;;;-1:-1:-1;;;5739:34:30;;;;-1:-1:-1;;;;;5566:16:30;;;5739:32;;:34;;;;;;;;;;;;;;5566:16;5739:34;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5739:34:30;;;;;;;;-1:-1:-1;;5739:34:30;;;;;;;;;;;;:::i;:::-;;;5735:196;;5875:44;;-1:-1:-1;;;5875:44:30;;;;;;;:::i;:::-;;;;;;;;5735:196;-1:-1:-1;;;;;;5815:26:30;;;;;;;;5962:7;-1:-1:-1;;;;;5947:32:30;;:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5947:34:30;;;;;;;;-1:-1:-1;;5947:34:30;;;;;;;;;;;;:::i;:::-;;;5943:196;;6083:44;;-1:-1:-1;;;6083:44:30;;;;;;;:::i;5943:196::-;6023:26;;-1:-1:-1;;;;;;6023:26:30;;;6238:109;;-1:-1:-1;;;6238:109:30;;6216:19;;-1:-1:-1;;;;;6238:35:30;;;;;:109;;6288:7;;6310;;6332:4;;6238:109;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6216:131;-1:-1:-1;;;;;;6366:25:30;;6358:57;;;;-1:-1:-1;;;6358:57:30;;;;;;;:::i;:::-;6455:11;-1:-1:-1;;;;;6440:39:30;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6426:55;;;;;;;;;;6623:110;-1:-1:-1;;;;;6623:27:30;;6673:16;-1:-1:-1;;6623:27:30;;;;;;;:110;;:::i;:::-;6744;6794:16;-1:-1:-1;;6751:7:30;-1:-1:-1;;;;;6744:27:30;;;;;;;:110;;;;;:::i;:::-;6865:68;6901:11;-1:-1:-1;;6872:7:30;-1:-1:-1;;;;;6865:27:30;;;;;;;:68;;;;;:::i;:::-;6944;6980:11;-1:-1:-1;;6951:7:30;-1:-1:-1;;;;;6944:27:30;;;;;;;:68;;;;;:::i;:::-;-1:-1:-1;;;;;7029:20:30;;;7025:256;;7066:121;7119:16;-1:-1:-1;;7073:6:30;-1:-1:-1;;;;;7066:26:30;;;;;;;:121;;;;;:::i;:::-;7202:67;7237:11;-1:-1:-1;;7209:6:30;-1:-1:-1;;;;;7202:26:30;;;;;;;:67;;;;;:::i;:::-;-1:-1:-1;;;;;7297:27:30;;;7293:92;;7341:32;7359:13;7341:17;:32::i;:::-;5075:2317;;;;;;;;;1795:23048;;598:104:9;685:10;598:104;:::o;1348:613:4:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:4;;;-1:-1:-1;;;1729:39:4;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:4;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:4;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:4;;;-1:-1:-1;;;1891:62:4;;;;1864:90;;1884:5;;1864:19;:90;:::i;:::-;1348:613;;;:::o;2011:240:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;-1:-1:-1;;;;;;;;;;;2179:38:0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;;;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1085::0;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;:::o;3581:193:8:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;4608:523::-;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:8;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4980:75:8;;-1:-1:-1;4980:75:8;-1:-1:-1;5072:52:8;4980:75;;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:8:o;726:413::-;1086:20;;1124:8;;726:413;;;;:::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:8;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:179:32;95:13;;-1:-1:-1;;;;;137:31:32;;127:42;;117:2;;183:1;180;173:12;198:220;;321:2;309:9;300:7;296:23;292:32;289:2;;;342:6;334;327:22;289:2;370:42;402:9;370:42;:::i;423:912::-;;;;;;;;;664:3;652:9;643:7;639:23;635:33;632:2;;;686:6;678;671:22;632:2;714:42;746:9;714:42;:::i;:::-;704:52;;775:51;822:2;811:9;807:18;775:51;:::i;:::-;765:61;;845:51;892:2;881:9;877:18;845:51;:::i;:::-;835:61;;915:51;962:2;951:9;947:18;915:51;:::i;:::-;905:61;;985:52;1032:3;1021:9;1017:19;985:52;:::i;:::-;975:62;;1080:3;1069:9;1065:19;1059:26;1125:8;1118:5;1114:20;1107:5;1104:31;1094:2;;1154:6;1146;1139:22;1094:2;1182:5;-1:-1:-1;1206:52:32;1253:3;1238:19;;1206:52;:::i;:::-;1196:62;;1277:52;1324:3;1313:9;1309:19;1277:52;:::i;:::-;1267:62;;622:713;;;;;;;;;;;:::o;1340:297::-;;1461:2;1449:9;1440:7;1436:23;1432:32;1429:2;;;1482:6;1474;1467:22;1429:2;1519:9;1513:16;1572:5;1569:1;1558:20;1551:5;1548:31;1538:2;;1598:6;1590;1583:22;1642:293;;1763:2;1751:9;1742:7;1738:23;1734:32;1731:2;;;1784:6;1776;1769:22;1731:2;1821:9;1815:16;1871:4;1864:5;1860:16;1853:5;1850:27;1840:2;;1896:6;1888;1881:22;1940:388;-1:-1:-1;;;;;2196:15:32;;;2178:34;;2248:15;;;;2243:2;2228:18;;2221:43;2312:8;2300:21;;;2295:2;2280:18;;2273:49;2128:2;2113:18;;2095:233::o;2333:398::-;2535:2;2517:21;;;2574:2;2554:18;;;2547:30;2613:34;2608:2;2593:18;;2586:62;-1:-1:-1;;;2679:2:32;2664:18;;2657:32;2721:3;2706:19;;2507:224::o;2736:343::-;2938:2;2920:21;;;2977:2;2957:18;;;2950:30;3016:21;3011:2;2996:18;;2989:49;3070:2;3055:18;;2910:169::o;3084:398::-;3286:2;3268:21;;;3325:2;3305:18;;;3298:30;3364:34;3359:2;3344:18;;3337:62;-1:-1:-1;;;3430:2:32;3415:18;;3408:32;3472:3;3457:19;;3258:224::o;:::-;1795:23048:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:24911:32","statements":[{"nodeType":"YulBlock","src":"6:3:32","statements":[]},{"body":{"nodeType":"YulBlock","src":"75:104:32","statements":[{"nodeType":"YulAssignment","src":"85:22:32","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"100:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"94:5:32"},"nodeType":"YulFunctionCall","src":"94:13:32"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"85:5:32"}]},{"body":{"nodeType":"YulBlock","src":"157:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"166:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"169:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"159:6:32"},"nodeType":"YulFunctionCall","src":"159:12:32"},"nodeType":"YulExpressionStatement","src":"159:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"129:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"140:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"147:6:32","type":"","value":"0xffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"136:3:32"},"nodeType":"YulFunctionCall","src":"136:18:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"126:2:32"},"nodeType":"YulFunctionCall","src":"126:29:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"119:6:32"},"nodeType":"YulFunctionCall","src":"119:37:32"},"nodeType":"YulIf","src":"116:2:32"}]},"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"54:6:32","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"65:5:32","type":""}],"src":"14:165:32"},{"body":{"nodeType":"YulBlock","src":"254:189:32","statements":[{"body":{"nodeType":"YulBlock","src":"300:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"309:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"317:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"302:6:32"},"nodeType":"YulFunctionCall","src":"302:22:32"},"nodeType":"YulExpressionStatement","src":"302:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"275:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"284:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"271:3:32"},"nodeType":"YulFunctionCall","src":"271:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"296:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"267:3:32"},"nodeType":"YulFunctionCall","src":"267:32:32"},"nodeType":"YulIf","src":"264:2:32"},{"nodeType":"YulVariableDeclaration","src":"335:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"361:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"348:12:32"},"nodeType":"YulFunctionCall","src":"348:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"339:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"407:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"380:26:32"},"nodeType":"YulFunctionCall","src":"380:33:32"},"nodeType":"YulExpressionStatement","src":"380:33:32"},{"nodeType":"YulAssignment","src":"422:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"432:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"422:6:32"}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"220:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"231:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"243:6:32","type":""}],"src":"184:259:32"},{"body":{"nodeType":"YulBlock","src":"529:182:32","statements":[{"body":{"nodeType":"YulBlock","src":"575:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"584:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"592:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"577:6:32"},"nodeType":"YulFunctionCall","src":"577:22:32"},"nodeType":"YulExpressionStatement","src":"577:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"550:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"559:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"546:3:32"},"nodeType":"YulFunctionCall","src":"546:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"571:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"542:3:32"},"nodeType":"YulFunctionCall","src":"542:32:32"},"nodeType":"YulIf","src":"539:2:32"},{"nodeType":"YulVariableDeclaration","src":"610:29:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"629:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"623:5:32"},"nodeType":"YulFunctionCall","src":"623:16:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"614:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"675:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"648:26:32"},"nodeType":"YulFunctionCall","src":"648:33:32"},"nodeType":"YulExpressionStatement","src":"648:33:32"},{"nodeType":"YulAssignment","src":"690:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"700:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"690:6:32"}]}]},"name":"abi_decode_tuple_t_address_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"495:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"506:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"518:6:32","type":""}],"src":"448:263:32"},{"body":{"nodeType":"YulBlock","src":"803:240:32","statements":[{"body":{"nodeType":"YulBlock","src":"849:26:32","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"858:6:32"},{"name":"value1","nodeType":"YulIdentifier","src":"866:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"851:6:32"},"nodeType":"YulFunctionCall","src":"851:22:32"},"nodeType":"YulExpressionStatement","src":"851:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"824:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"833:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"820:3:32"},"nodeType":"YulFunctionCall","src":"820:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"845:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"816:3:32"},"nodeType":"YulFunctionCall","src":"816:32:32"},"nodeType":"YulIf","src":"813:2:32"},{"nodeType":"YulVariableDeclaration","src":"884:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"910:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"897:12:32"},"nodeType":"YulFunctionCall","src":"897:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"888:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"956:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"929:26:32"},"nodeType":"YulFunctionCall","src":"929:33:32"},"nodeType":"YulExpressionStatement","src":"929:33:32"},{"nodeType":"YulAssignment","src":"971:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"981:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"971:6:32"}]},{"nodeType":"YulAssignment","src":"995:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1022:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1033:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1018:3:32"},"nodeType":"YulFunctionCall","src":"1018:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1005:12:32"},"nodeType":"YulFunctionCall","src":"1005:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"995:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"761:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"772:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"784:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"792:6:32","type":""}],"src":"716:327:32"},{"body":{"nodeType":"YulBlock","src":"1152:366:32","statements":[{"body":{"nodeType":"YulBlock","src":"1198:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"1207:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"1215:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1200:6:32"},"nodeType":"YulFunctionCall","src":"1200:22:32"},"nodeType":"YulExpressionStatement","src":"1200:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1173:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1182:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1169:3:32"},"nodeType":"YulFunctionCall","src":"1169:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1194:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1165:3:32"},"nodeType":"YulFunctionCall","src":"1165:32:32"},"nodeType":"YulIf","src":"1162:2:32"},{"nodeType":"YulVariableDeclaration","src":"1233:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1259:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1246:12:32"},"nodeType":"YulFunctionCall","src":"1246:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1237:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1305:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1278:26:32"},"nodeType":"YulFunctionCall","src":"1278:33:32"},"nodeType":"YulExpressionStatement","src":"1278:33:32"},{"nodeType":"YulAssignment","src":"1320:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1330:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1320:6:32"}]},{"nodeType":"YulAssignment","src":"1344:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1371:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1382:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1367:3:32"},"nodeType":"YulFunctionCall","src":"1367:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1354:12:32"},"nodeType":"YulFunctionCall","src":"1354:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1344:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"1395:47:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1427:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"1438:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1423:3:32"},"nodeType":"YulFunctionCall","src":"1423:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1410:12:32"},"nodeType":"YulFunctionCall","src":"1410:32:32"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"1399:7:32","type":""}]},{"expression":{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"1478:7:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1451:26:32"},"nodeType":"YulFunctionCall","src":"1451:35:32"},"nodeType":"YulExpressionStatement","src":"1451:35:32"},{"nodeType":"YulAssignment","src":"1495:17:32","value":{"name":"value_1","nodeType":"YulIdentifier","src":"1505:7:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"1495:6:32"}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1102:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1113:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1125:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1133:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"1141:6:32","type":""}],"src":"1048:470:32"},{"body":{"nodeType":"YulBlock","src":"1623:107:32","statements":[{"body":{"nodeType":"YulBlock","src":"1670:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1679:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1687:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1672:6:32"},"nodeType":"YulFunctionCall","src":"1672:22:32"},"nodeType":"YulExpressionStatement","src":"1672:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1644:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1653:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1640:3:32"},"nodeType":"YulFunctionCall","src":"1640:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1665:3:32","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1636:3:32"},"nodeType":"YulFunctionCall","src":"1636:33:32"},"nodeType":"YulIf","src":"1633:2:32"},{"nodeType":"YulAssignment","src":"1705:19:32","value":{"name":"headStart","nodeType":"YulIdentifier","src":"1715:9:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1705:6:32"}]}]},"name":"abi_decode_tuple_t_struct$_SwapParams_$2967_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1589:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1600:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1612:6:32","type":""}],"src":"1523:207:32"},{"body":{"nodeType":"YulBlock","src":"1805:189:32","statements":[{"body":{"nodeType":"YulBlock","src":"1851:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1860:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"1868:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1853:6:32"},"nodeType":"YulFunctionCall","src":"1853:22:32"},"nodeType":"YulExpressionStatement","src":"1853:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1826:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"1835:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1822:3:32"},"nodeType":"YulFunctionCall","src":"1822:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"1847:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1818:3:32"},"nodeType":"YulFunctionCall","src":"1818:32:32"},"nodeType":"YulIf","src":"1815:2:32"},{"nodeType":"YulVariableDeclaration","src":"1886:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1912:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1899:12:32"},"nodeType":"YulFunctionCall","src":"1899:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"1890:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1958:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"1931:26:32"},"nodeType":"YulFunctionCall","src":"1931:33:32"},"nodeType":"YulExpressionStatement","src":"1931:33:32"},{"nodeType":"YulAssignment","src":"1973:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"1983:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1973:6:32"}]}]},"name":"abi_decode_tuple_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1771:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1782:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1794:6:32","type":""}],"src":"1735:259:32"},{"body":{"nodeType":"YulBlock","src":"2172:861:32","statements":[{"body":{"nodeType":"YulBlock","src":"2219:26:32","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2228:6:32"},{"name":"value4","nodeType":"YulIdentifier","src":"2236:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2221:6:32"},"nodeType":"YulFunctionCall","src":"2221:22:32"},"nodeType":"YulExpressionStatement","src":"2221:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2193:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"2202:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2189:3:32"},"nodeType":"YulFunctionCall","src":"2189:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"2214:3:32","type":"","value":"224"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2185:3:32"},"nodeType":"YulFunctionCall","src":"2185:33:32"},"nodeType":"YulIf","src":"2182:2:32"},{"nodeType":"YulVariableDeclaration","src":"2254:29:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2273:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2267:5:32"},"nodeType":"YulFunctionCall","src":"2267:16:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2319:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2292:26:32"},"nodeType":"YulFunctionCall","src":"2292:33:32"},"nodeType":"YulExpressionStatement","src":"2292:33:32"},{"nodeType":"YulAssignment","src":"2334:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"2344:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2334:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"2358:40:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2383:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2394:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2379:3:32"},"nodeType":"YulFunctionCall","src":"2379:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2373:5:32"},"nodeType":"YulFunctionCall","src":"2373:25:32"},"variables":[{"name":"value_1","nodeType":"YulTypedName","src":"2362:7:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2454:26:32","statements":[{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"2463:6:32"},{"name":"value4","nodeType":"YulIdentifier","src":"2471:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2456:6:32"},"nodeType":"YulFunctionCall","src":"2456:22:32"},"nodeType":"YulExpressionStatement","src":"2456:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value_1","nodeType":"YulIdentifier","src":"2420:7:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2440:1:32","type":"","value":"2"},{"name":"value_1","nodeType":"YulIdentifier","src":"2443:7:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"2429:10:32"},"nodeType":"YulFunctionCall","src":"2429:22:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2417:2:32"},"nodeType":"YulFunctionCall","src":"2417:35:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2410:6:32"},"nodeType":"YulFunctionCall","src":"2410:43:32"},"nodeType":"YulIf","src":"2407:2:32"},{"nodeType":"YulAssignment","src":"2489:17:32","value":{"name":"value_1","nodeType":"YulIdentifier","src":"2499:7:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2489:6:32"}]},{"nodeType":"YulAssignment","src":"2515:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2560:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2571:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2556:3:32"},"nodeType":"YulFunctionCall","src":"2556:18:32"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2525:30:32"},"nodeType":"YulFunctionCall","src":"2525:50:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"2515:6:32"}]},{"nodeType":"YulAssignment","src":"2584:60:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2629:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2640:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2625:3:32"},"nodeType":"YulFunctionCall","src":"2625:18:32"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2594:30:32"},"nodeType":"YulFunctionCall","src":"2594:50:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"2584:6:32"}]},{"nodeType":"YulAssignment","src":"2653:61:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2698:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2709:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2694:3:32"},"nodeType":"YulFunctionCall","src":"2694:19:32"}],"functionName":{"name":"abi_decode_t_uint16_fromMemory","nodeType":"YulIdentifier","src":"2663:30:32"},"nodeType":"YulFunctionCall","src":"2663:51:32"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"2653:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"2723:41:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2748:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2759:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2744:3:32"},"nodeType":"YulFunctionCall","src":"2744:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2738:5:32"},"nodeType":"YulFunctionCall","src":"2738:26:32"},"variables":[{"name":"value_2","nodeType":"YulTypedName","src":"2727:7:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2816:26:32","statements":[{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"2825:6:32"},{"name":"value5","nodeType":"YulIdentifier","src":"2833:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2818:6:32"},"nodeType":"YulFunctionCall","src":"2818:22:32"},"nodeType":"YulExpressionStatement","src":"2818:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"2786:7:32"},{"arguments":[{"name":"value_2","nodeType":"YulIdentifier","src":"2799:7:32"},{"kind":"number","nodeType":"YulLiteral","src":"2808:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2795:3:32"},"nodeType":"YulFunctionCall","src":"2795:18:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2783:2:32"},"nodeType":"YulFunctionCall","src":"2783:31:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2776:6:32"},"nodeType":"YulFunctionCall","src":"2776:39:32"},"nodeType":"YulIf","src":"2773:2:32"},{"nodeType":"YulAssignment","src":"2851:17:32","value":{"name":"value_2","nodeType":"YulIdentifier","src":"2861:7:32"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"2851:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"2877:41:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2902:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"2913:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2898:3:32"},"nodeType":"YulFunctionCall","src":"2898:19:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2892:5:32"},"nodeType":"YulFunctionCall","src":"2892:26:32"},"variables":[{"name":"value_3","nodeType":"YulTypedName","src":"2881:7:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"2975:26:32","statements":[{"expression":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"2984:6:32"},{"name":"value6","nodeType":"YulIdentifier","src":"2992:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2977:6:32"},"nodeType":"YulFunctionCall","src":"2977:22:32"},"nodeType":"YulExpressionStatement","src":"2977:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"2940:7:32"},{"arguments":[{"arguments":[{"name":"value_3","nodeType":"YulIdentifier","src":"2963:7:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2956:6:32"},"nodeType":"YulFunctionCall","src":"2956:15:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2949:6:32"},"nodeType":"YulFunctionCall","src":"2949:23:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2937:2:32"},"nodeType":"YulFunctionCall","src":"2937:36:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2930:6:32"},"nodeType":"YulFunctionCall","src":"2930:44:32"},"nodeType":"YulIf","src":"2927:2:32"},{"nodeType":"YulAssignment","src":"3010:17:32","value":{"name":"value_3","nodeType":"YulIdentifier","src":"3020:7:32"},"variableNames":[{"name":"value6","nodeType":"YulIdentifier","src":"3010:6:32"}]}]},"name":"abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2090:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2101:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2113:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2121:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"2129:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"2137:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"2145:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"2153:6:32","type":""},{"name":"value6","nodeType":"YulTypedName","src":"2161:6:32","type":""}],"src":"1999:1034:32"},{"body":{"nodeType":"YulBlock","src":"3107:225:32","statements":[{"body":{"nodeType":"YulBlock","src":"3153:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3162:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"3170:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3155:6:32"},"nodeType":"YulFunctionCall","src":"3155:22:32"},"nodeType":"YulExpressionStatement","src":"3155:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3128:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3137:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3124:3:32"},"nodeType":"YulFunctionCall","src":"3124:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3149:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3120:3:32"},"nodeType":"YulFunctionCall","src":"3120:32:32"},"nodeType":"YulIf","src":"3117:2:32"},{"nodeType":"YulVariableDeclaration","src":"3188:36:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3214:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3201:12:32"},"nodeType":"YulFunctionCall","src":"3201:23:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3192:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"3276:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3285:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"3293:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3278:6:32"},"nodeType":"YulFunctionCall","src":"3278:22:32"},"nodeType":"YulExpressionStatement","src":"3278:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3246:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3257:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"3264:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3253:3:32"},"nodeType":"YulFunctionCall","src":"3253:20:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3243:2:32"},"nodeType":"YulFunctionCall","src":"3243:31:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3236:6:32"},"nodeType":"YulFunctionCall","src":"3236:39:32"},"nodeType":"YulIf","src":"3233:2:32"},{"nodeType":"YulAssignment","src":"3311:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"3321:5:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3311:6:32"}]}]},"name":"abi_decode_tuple_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3073:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3084:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3096:6:32","type":""}],"src":"3038:294:32"},{"body":{"nodeType":"YulBlock","src":"3407:120:32","statements":[{"body":{"nodeType":"YulBlock","src":"3453:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3462:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"3470:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3455:6:32"},"nodeType":"YulFunctionCall","src":"3455:22:32"},"nodeType":"YulExpressionStatement","src":"3455:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3428:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3437:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3424:3:32"},"nodeType":"YulFunctionCall","src":"3424:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3449:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3420:3:32"},"nodeType":"YulFunctionCall","src":"3420:32:32"},"nodeType":"YulIf","src":"3417:2:32"},{"nodeType":"YulAssignment","src":"3488:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3511:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3498:12:32"},"nodeType":"YulFunctionCall","src":"3498:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3488:6:32"}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3373:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3384:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3396:6:32","type":""}],"src":"3337:190:32"},{"body":{"nodeType":"YulBlock","src":"3613:113:32","statements":[{"body":{"nodeType":"YulBlock","src":"3659:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3668:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"3676:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3661:6:32"},"nodeType":"YulFunctionCall","src":"3661:22:32"},"nodeType":"YulExpressionStatement","src":"3661:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3634:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3643:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3630:3:32"},"nodeType":"YulFunctionCall","src":"3630:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3655:2:32","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3626:3:32"},"nodeType":"YulFunctionCall","src":"3626:32:32"},"nodeType":"YulIf","src":"3623:2:32"},{"nodeType":"YulAssignment","src":"3694:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3710:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3704:5:32"},"nodeType":"YulFunctionCall","src":"3704:16:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3694:6:32"}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3579:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3590:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3602:6:32","type":""}],"src":"3532:194:32"},{"body":{"nodeType":"YulBlock","src":"3818:240:32","statements":[{"body":{"nodeType":"YulBlock","src":"3864:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3873:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"3881:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3866:6:32"},"nodeType":"YulFunctionCall","src":"3866:22:32"},"nodeType":"YulExpressionStatement","src":"3866:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3839:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"3848:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3835:3:32"},"nodeType":"YulFunctionCall","src":"3835:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"3860:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3831:3:32"},"nodeType":"YulFunctionCall","src":"3831:32:32"},"nodeType":"YulIf","src":"3828:2:32"},{"nodeType":"YulAssignment","src":"3899:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3922:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3909:12:32"},"nodeType":"YulFunctionCall","src":"3909:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3899:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"3941:45:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3971:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"3982:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3967:3:32"},"nodeType":"YulFunctionCall","src":"3967:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"3954:12:32"},"nodeType":"YulFunctionCall","src":"3954:32:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"3945:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4022:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"3995:26:32"},"nodeType":"YulFunctionCall","src":"3995:33:32"},"nodeType":"YulExpressionStatement","src":"3995:33:32"},{"nodeType":"YulAssignment","src":"4037:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"4047:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4037:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3776:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3787:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3799:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3807:6:32","type":""}],"src":"3731:327:32"},{"body":{"nodeType":"YulBlock","src":"4158:240:32","statements":[{"body":{"nodeType":"YulBlock","src":"4204:26:32","statements":[{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"4213:6:32"},{"name":"value1","nodeType":"YulIdentifier","src":"4221:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4206:6:32"},"nodeType":"YulFunctionCall","src":"4206:22:32"},"nodeType":"YulExpressionStatement","src":"4206:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4179:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"4188:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4175:3:32"},"nodeType":"YulFunctionCall","src":"4175:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"4200:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4171:3:32"},"nodeType":"YulFunctionCall","src":"4171:32:32"},"nodeType":"YulIf","src":"4168:2:32"},{"nodeType":"YulAssignment","src":"4239:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4262:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4249:12:32"},"nodeType":"YulFunctionCall","src":"4249:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4239:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"4281:45:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4311:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4322:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4307:3:32"},"nodeType":"YulFunctionCall","src":"4307:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"4294:12:32"},"nodeType":"YulFunctionCall","src":"4294:32:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4285:5:32","type":""}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4362:5:32"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"4335:26:32"},"nodeType":"YulFunctionCall","src":"4335:33:32"},"nodeType":"YulExpressionStatement","src":"4335:33:32"},{"nodeType":"YulAssignment","src":"4377:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"4387:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4377:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4116:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4127:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4139:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4147:6:32","type":""}],"src":"4063:335:32"},{"body":{"nodeType":"YulBlock","src":"4535:377:32","statements":[{"body":{"nodeType":"YulBlock","src":"4582:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4591:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"4599:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4584:6:32"},"nodeType":"YulFunctionCall","src":"4584:22:32"},"nodeType":"YulExpressionStatement","src":"4584:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4556:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"4565:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4552:3:32"},"nodeType":"YulFunctionCall","src":"4552:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"4577:3:32","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4548:3:32"},"nodeType":"YulFunctionCall","src":"4548:33:32"},"nodeType":"YulIf","src":"4545:2:32"},{"nodeType":"YulAssignment","src":"4617:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4633:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4627:5:32"},"nodeType":"YulFunctionCall","src":"4627:16:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4617:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"4652:38:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4675:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4686:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4671:3:32"},"nodeType":"YulFunctionCall","src":"4671:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4665:5:32"},"nodeType":"YulFunctionCall","src":"4665:25:32"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"4656:5:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"4768:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"4777:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"4785:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4770:6:32"},"nodeType":"YulFunctionCall","src":"4770:22:32"},"nodeType":"YulExpressionStatement","src":"4770:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4712:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4723:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"4730:34:32","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4719:3:32"},"nodeType":"YulFunctionCall","src":"4719:46:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4709:2:32"},"nodeType":"YulFunctionCall","src":"4709:57:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4702:6:32"},"nodeType":"YulFunctionCall","src":"4702:65:32"},"nodeType":"YulIf","src":"4699:2:32"},{"nodeType":"YulAssignment","src":"4803:15:32","value":{"name":"value","nodeType":"YulIdentifier","src":"4813:5:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4803:6:32"}]},{"nodeType":"YulAssignment","src":"4827:35:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4847:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4858:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4843:3:32"},"nodeType":"YulFunctionCall","src":"4843:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4837:5:32"},"nodeType":"YulFunctionCall","src":"4837:25:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4827:6:32"}]},{"nodeType":"YulAssignment","src":"4871:35:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4891:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"4902:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4887:3:32"},"nodeType":"YulFunctionCall","src":"4887:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4881:5:32"},"nodeType":"YulFunctionCall","src":"4881:25:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"4871:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4477:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4488:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4500:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"4508:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"4516:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"4524:6:32","type":""}],"src":"4403:509:32"},{"body":{"nodeType":"YulBlock","src":"5015:157:32","statements":[{"body":{"nodeType":"YulBlock","src":"5061:26:32","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5070:6:32"},{"name":"value0","nodeType":"YulIdentifier","src":"5078:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5063:6:32"},"nodeType":"YulFunctionCall","src":"5063:22:32"},"nodeType":"YulExpressionStatement","src":"5063:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5036:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"5045:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5032:3:32"},"nodeType":"YulFunctionCall","src":"5032:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"5057:2:32","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5028:3:32"},"nodeType":"YulFunctionCall","src":"5028:32:32"},"nodeType":"YulIf","src":"5025:2:32"},{"nodeType":"YulAssignment","src":"5096:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5112:9:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5106:5:32"},"nodeType":"YulFunctionCall","src":"5106:16:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5096:6:32"}]},{"nodeType":"YulAssignment","src":"5131:35:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5151:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5162:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5147:3:32"},"nodeType":"YulFunctionCall","src":"5147:18:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5141:5:32"},"nodeType":"YulFunctionCall","src":"5141:25:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5131:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4973:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4984:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4996:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5004:6:32","type":""}],"src":"4917:255:32"},{"body":{"nodeType":"YulBlock","src":"5300:654:32","statements":[{"body":{"nodeType":"YulBlock","src":"5346:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5355:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5363:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5348:6:32"},"nodeType":"YulFunctionCall","src":"5348:22:32"},"nodeType":"YulExpressionStatement","src":"5348:22:32"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5321:7:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"5330:9:32"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5317:3:32"},"nodeType":"YulFunctionCall","src":"5317:23:32"},{"kind":"number","nodeType":"YulLiteral","src":"5342:2:32","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5313:3:32"},"nodeType":"YulFunctionCall","src":"5313:32:32"},"nodeType":"YulIf","src":"5310:2:32"},{"nodeType":"YulAssignment","src":"5381:33:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5404:9:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5391:12:32"},"nodeType":"YulFunctionCall","src":"5391:23:32"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5381:6:32"}]},{"nodeType":"YulAssignment","src":"5423:42:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5450:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5461:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5446:3:32"},"nodeType":"YulFunctionCall","src":"5446:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5433:12:32"},"nodeType":"YulFunctionCall","src":"5433:32:32"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5423:6:32"}]},{"nodeType":"YulVariableDeclaration","src":"5474:46:32","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5505:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"5516:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5501:3:32"},"nodeType":"YulFunctionCall","src":"5501:18:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5488:12:32"},"nodeType":"YulFunctionCall","src":"5488:32:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5478:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"5529:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"5539:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"5533:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"5584:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5593:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5601:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5586:6:32"},"nodeType":"YulFunctionCall","src":"5586:22:32"},"nodeType":"YulExpressionStatement","src":"5586:22:32"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5572:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5580:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5569:2:32"},"nodeType":"YulFunctionCall","src":"5569:14:32"},"nodeType":"YulIf","src":"5566:2:32"},{"nodeType":"YulVariableDeclaration","src":"5619:32:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5633:9:32"},{"name":"offset","nodeType":"YulIdentifier","src":"5644:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5629:3:32"},"nodeType":"YulFunctionCall","src":"5629:22:32"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"5623:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"5699:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5708:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5716:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5701:6:32"},"nodeType":"YulFunctionCall","src":"5701:22:32"},"nodeType":"YulExpressionStatement","src":"5701:22:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5678:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"5682:4:32","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5674:3:32"},"nodeType":"YulFunctionCall","src":"5674:13:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5689:7:32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5670:3:32"},"nodeType":"YulFunctionCall","src":"5670:27:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"5663:6:32"},"nodeType":"YulFunctionCall","src":"5663:35:32"},"nodeType":"YulIf","src":"5660:2:32"},{"nodeType":"YulVariableDeclaration","src":"5734:30:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5761:2:32"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5748:12:32"},"nodeType":"YulFunctionCall","src":"5748:16:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"5738:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"5791:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5800:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5808:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5793:6:32"},"nodeType":"YulFunctionCall","src":"5793:22:32"},"nodeType":"YulExpressionStatement","src":"5793:22:32"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"5779:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"5787:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5776:2:32"},"nodeType":"YulFunctionCall","src":"5776:14:32"},"nodeType":"YulIf","src":"5773:2:32"},{"body":{"nodeType":"YulBlock","src":"5867:26:32","statements":[{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"5876:6:32"},{"name":"value2","nodeType":"YulIdentifier","src":"5884:6:32"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5869:6:32"},"nodeType":"YulFunctionCall","src":"5869:22:32"},"nodeType":"YulExpressionStatement","src":"5869:22:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5840:2:32"},{"name":"length","nodeType":"YulIdentifier","src":"5844:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5836:3:32"},"nodeType":"YulFunctionCall","src":"5836:15:32"},{"kind":"number","nodeType":"YulLiteral","src":"5853:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5832:3:32"},"nodeType":"YulFunctionCall","src":"5832:24:32"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5858:7:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5829:2:32"},"nodeType":"YulFunctionCall","src":"5829:37:32"},"nodeType":"YulIf","src":"5826:2:32"},{"nodeType":"YulAssignment","src":"5902:21:32","value":{"arguments":[{"name":"_2","nodeType":"YulIdentifier","src":"5916:2:32"},{"kind":"number","nodeType":"YulLiteral","src":"5920:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5912:3:32"},"nodeType":"YulFunctionCall","src":"5912:11:32"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"5902:6:32"}]},{"nodeType":"YulAssignment","src":"5932:16:32","value":{"name":"length","nodeType":"YulIdentifier","src":"5942:6:32"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"5932:6:32"}]}]},"name":"abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5242:9:32","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5253:7:32","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5265:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5273:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"5281:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"5289:6:32","type":""}],"src":"5177:777:32"},{"body":{"nodeType":"YulBlock","src":"6005:60:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6022:3:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6031:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6046:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6051:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6042:3:32"},"nodeType":"YulFunctionCall","src":"6042:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"6055:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6038:3:32"},"nodeType":"YulFunctionCall","src":"6038:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6027:3:32"},"nodeType":"YulFunctionCall","src":"6027:31:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6015:6:32"},"nodeType":"YulFunctionCall","src":"6015:44:32"},"nodeType":"YulExpressionStatement","src":"6015:44:32"}]},"name":"abi_encode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5989:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5996:3:32","type":""}],"src":"5959:106:32"},{"body":{"nodeType":"YulBlock","src":"6114:49:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6131:3:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6147:1:32","type":"","value":"2"},{"name":"value","nodeType":"YulIdentifier","src":"6150:5:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"6136:10:32"},"nodeType":"YulFunctionCall","src":"6136:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6124:6:32"},"nodeType":"YulFunctionCall","src":"6124:33:32"},"nodeType":"YulExpressionStatement","src":"6124:33:32"}]},"name":"abi_encode_t_int24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6098:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6105:3:32","type":""}],"src":"6070:93:32"},{"body":{"nodeType":"YulBlock","src":"6220:426:32","statements":[{"nodeType":"YulVariableDeclaration","src":"6230:26:32","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6250:5:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6244:5:32"},"nodeType":"YulFunctionCall","src":"6244:12:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"6234:6:32","type":""}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6272:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"6277:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6265:6:32"},"nodeType":"YulFunctionCall","src":"6265:19:32"},"nodeType":"YulExpressionStatement","src":"6265:19:32"},{"nodeType":"YulVariableDeclaration","src":"6293:12:32","value":{"name":"end","nodeType":"YulIdentifier","src":"6302:3:32"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"6297:1:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"6366:110:32","statements":[{"nodeType":"YulVariableDeclaration","src":"6380:14:32","value":{"kind":"number","nodeType":"YulLiteral","src":"6390:4:32","type":"","value":"0x20"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"6384:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6422:3:32"},{"name":"i","nodeType":"YulIdentifier","src":"6427:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6418:3:32"},"nodeType":"YulFunctionCall","src":"6418:11:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6431:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6414:3:32"},"nodeType":"YulFunctionCall","src":"6414:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6450:5:32"},{"name":"i","nodeType":"YulIdentifier","src":"6457:1:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6446:3:32"},"nodeType":"YulFunctionCall","src":"6446:13:32"},{"name":"_1","nodeType":"YulIdentifier","src":"6461:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6442:3:32"},"nodeType":"YulFunctionCall","src":"6442:22:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6436:5:32"},"nodeType":"YulFunctionCall","src":"6436:29:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6407:6:32"},"nodeType":"YulFunctionCall","src":"6407:59:32"},"nodeType":"YulExpressionStatement","src":"6407:59:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6325:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"6328:6:32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6322:2:32"},"nodeType":"YulFunctionCall","src":"6322:13:32"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"6336:21:32","statements":[{"nodeType":"YulAssignment","src":"6338:17:32","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6347:1:32"},{"kind":"number","nodeType":"YulLiteral","src":"6350:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6343:3:32"},"nodeType":"YulFunctionCall","src":"6343:12:32"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"6338:1:32"}]}]},"pre":{"nodeType":"YulBlock","src":"6318:3:32","statements":[]},"src":"6314:162:32"},{"body":{"nodeType":"YulBlock","src":"6510:64:32","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6539:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"6544:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6535:3:32"},"nodeType":"YulFunctionCall","src":"6535:16:32"},{"kind":"number","nodeType":"YulLiteral","src":"6553:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6531:3:32"},"nodeType":"YulFunctionCall","src":"6531:27:32"},{"name":"end","nodeType":"YulIdentifier","src":"6560:3:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6524:6:32"},"nodeType":"YulFunctionCall","src":"6524:40:32"},"nodeType":"YulExpressionStatement","src":"6524:40:32"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"6491:1:32"},{"name":"length","nodeType":"YulIdentifier","src":"6494:6:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6488:2:32"},"nodeType":"YulFunctionCall","src":"6488:13:32"},"nodeType":"YulIf","src":"6485:2:32"},{"nodeType":"YulAssignment","src":"6583:57:32","value":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6598:3:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6611:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"6619:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6607:3:32"},"nodeType":"YulFunctionCall","src":"6607:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6628:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"6624:3:32"},"nodeType":"YulFunctionCall","src":"6624:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6603:3:32"},"nodeType":"YulFunctionCall","src":"6603:29:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6594:3:32"},"nodeType":"YulFunctionCall","src":"6594:39:32"},{"kind":"number","nodeType":"YulLiteral","src":"6635:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6590:3:32"},"nodeType":"YulFunctionCall","src":"6590:50:32"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6583:3:32"}]}]},"name":"abi_encode_t_string","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6197:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6204:3:32","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"6212:3:32","type":""}],"src":"6168:478:32"},{"body":{"nodeType":"YulBlock","src":"6696:49:32","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6713:3:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6722:5:32"},{"kind":"number","nodeType":"YulLiteral","src":"6729:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6718:3:32"},"nodeType":"YulFunctionCall","src":"6718:20:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6706:6:32"},"nodeType":"YulFunctionCall","src":"6706:33:32"},"nodeType":"YulExpressionStatement","src":"6706:33:32"}]},"name":"abi_encode_t_uint24","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6680:5:32","type":""},{"name":"pos","nodeType":"YulTypedName","src":"6687:3:32","type":""}],"src":"6651:94:32"},{"body":{"nodeType":"YulBlock","src":"6851:102:32","statements":[{"nodeType":"YulAssignment","src":"6861:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6873:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"6884:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6869:3:32"},"nodeType":"YulFunctionCall","src":"6869:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6861:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6903:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6918:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6934:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"6939:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"6930:3:32"},"nodeType":"YulFunctionCall","src":"6930:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"6943:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6926:3:32"},"nodeType":"YulFunctionCall","src":"6926:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6914:3:32"},"nodeType":"YulFunctionCall","src":"6914:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6896:6:32"},"nodeType":"YulFunctionCall","src":"6896:51:32"},"nodeType":"YulExpressionStatement","src":"6896:51:32"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6820:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6831:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6842:4:32","type":""}],"src":"6750:203:32"},{"body":{"nodeType":"YulBlock","src":"7067:102:32","statements":[{"nodeType":"YulAssignment","src":"7077:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7089:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7100:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7085:3:32"},"nodeType":"YulFunctionCall","src":"7085:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7077:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7119:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7134:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7150:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7155:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7146:3:32"},"nodeType":"YulFunctionCall","src":"7146:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"7159:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7142:3:32"},"nodeType":"YulFunctionCall","src":"7142:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7130:3:32"},"nodeType":"YulFunctionCall","src":"7130:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7112:6:32"},"nodeType":"YulFunctionCall","src":"7112:51:32"},"nodeType":"YulExpressionStatement","src":"7112:51:32"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7036:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7047:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7058:4:32","type":""}],"src":"6958:211:32"},{"body":{"nodeType":"YulBlock","src":"7329:233:32","statements":[{"nodeType":"YulAssignment","src":"7339:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7351:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7362:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7347:3:32"},"nodeType":"YulFunctionCall","src":"7347:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7339:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"7374:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7392:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7397:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7388:3:32"},"nodeType":"YulFunctionCall","src":"7388:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"7401:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7384:3:32"},"nodeType":"YulFunctionCall","src":"7384:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"7378:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7419:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7434:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7442:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7430:3:32"},"nodeType":"YulFunctionCall","src":"7430:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7412:6:32"},"nodeType":"YulFunctionCall","src":"7412:34:32"},"nodeType":"YulExpressionStatement","src":"7412:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7466:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7477:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7462:3:32"},"nodeType":"YulFunctionCall","src":"7462:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"7486:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"7494:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7482:3:32"},"nodeType":"YulFunctionCall","src":"7482:15:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7455:6:32"},"nodeType":"YulFunctionCall","src":"7455:43:32"},"nodeType":"YulExpressionStatement","src":"7455:43:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7518:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7529:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7514:3:32"},"nodeType":"YulFunctionCall","src":"7514:18:32"},{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"7538:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"7546:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7534:3:32"},"nodeType":"YulFunctionCall","src":"7534:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7507:6:32"},"nodeType":"YulFunctionCall","src":"7507:49:32"},"nodeType":"YulExpressionStatement","src":"7507:49:32"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7282:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"7293:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"7301:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7309:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7320:4:32","type":""}],"src":"7174:388:32"},{"body":{"nodeType":"YulBlock","src":"7704:102:32","statements":[{"nodeType":"YulAssignment","src":"7714:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7726:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7737:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7722:3:32"},"nodeType":"YulFunctionCall","src":"7722:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7714:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7756:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7771:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"7787:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"7792:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"7783:3:32"},"nodeType":"YulFunctionCall","src":"7783:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"7796:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7779:3:32"},"nodeType":"YulFunctionCall","src":"7779:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7767:3:32"},"nodeType":"YulFunctionCall","src":"7767:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7749:6:32"},"nodeType":"YulFunctionCall","src":"7749:51:32"},"nodeType":"YulExpressionStatement","src":"7749:51:32"}]},"name":"abi_encode_tuple_t_contract$_INonfungiblePositionManager_$2618__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7673:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7684:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7695:4:32","type":""}],"src":"7567:239:32"},{"body":{"nodeType":"YulBlock","src":"7932:102:32","statements":[{"nodeType":"YulAssignment","src":"7942:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7954:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"7965:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7950:3:32"},"nodeType":"YulFunctionCall","src":"7950:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7942:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7984:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7999:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8015:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8020:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8011:3:32"},"nodeType":"YulFunctionCall","src":"8011:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"8024:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8007:3:32"},"nodeType":"YulFunctionCall","src":"8007:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"7995:3:32"},"nodeType":"YulFunctionCall","src":"7995:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7977:6:32"},"nodeType":"YulFunctionCall","src":"7977:51:32"},"nodeType":"YulExpressionStatement","src":"7977:51:32"}]},"name":"abi_encode_tuple_t_contract$_ISwapRouter_$2775__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7901:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7912:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7923:4:32","type":""}],"src":"7811:223:32"},{"body":{"nodeType":"YulBlock","src":"8166:102:32","statements":[{"nodeType":"YulAssignment","src":"8176:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8188:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8199:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8184:3:32"},"nodeType":"YulFunctionCall","src":"8184:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8176:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8218:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8233:6:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8249:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"8254:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"8245:3:32"},"nodeType":"YulFunctionCall","src":"8245:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"8258:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8241:3:32"},"nodeType":"YulFunctionCall","src":"8241:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"8229:3:32"},"nodeType":"YulFunctionCall","src":"8229:32:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8211:6:32"},"nodeType":"YulFunctionCall","src":"8211:51:32"},"nodeType":"YulExpressionStatement","src":"8211:51:32"}]},"name":"abi_encode_tuple_t_contract$_IUniswapV3Factory_$1383__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8135:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8146:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8157:4:32","type":""}],"src":"8039:229:32"},{"body":{"nodeType":"YulBlock","src":"8370:91:32","statements":[{"nodeType":"YulAssignment","src":"8380:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8392:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8403:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8388:3:32"},"nodeType":"YulFunctionCall","src":"8388:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8380:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8422:9:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8444:1:32","type":"","value":"2"},{"name":"value0","nodeType":"YulIdentifier","src":"8447:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"8433:10:32"},"nodeType":"YulFunctionCall","src":"8433:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8415:6:32"},"nodeType":"YulFunctionCall","src":"8415:40:32"},"nodeType":"YulExpressionStatement","src":"8415:40:32"}]},"name":"abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8339:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8350:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8361:4:32","type":""}],"src":"8273:188:32"},{"body":{"nodeType":"YulBlock","src":"8587:101:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8604:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8615:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8597:6:32"},"nodeType":"YulFunctionCall","src":"8597:21:32"},"nodeType":"YulExpressionStatement","src":"8597:21:32"},{"nodeType":"YulAssignment","src":"8627:55:32","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"8655:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8667:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8678:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8663:3:32"},"nodeType":"YulFunctionCall","src":"8663:18:32"}],"functionName":{"name":"abi_encode_t_string","nodeType":"YulIdentifier","src":"8635:19:32"},"nodeType":"YulFunctionCall","src":"8635:47:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8627:4:32"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8556:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"8567:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8578:4:32","type":""}],"src":"8466:222:32"},{"body":{"nodeType":"YulBlock","src":"8867:168:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8884:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8895:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8877:6:32"},"nodeType":"YulFunctionCall","src":"8877:21:32"},"nodeType":"YulExpressionStatement","src":"8877:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8918:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8929:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8914:3:32"},"nodeType":"YulFunctionCall","src":"8914:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"8934:2:32","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8907:6:32"},"nodeType":"YulFunctionCall","src":"8907:30:32"},"nodeType":"YulExpressionStatement","src":"8907:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8957:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"8968:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8953:3:32"},"nodeType":"YulFunctionCall","src":"8953:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"8973:20:32","type":"","value":"Invalid multiplier"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8946:6:32"},"nodeType":"YulFunctionCall","src":"8946:48:32"},"nodeType":"YulExpressionStatement","src":"8946:48:32"},{"nodeType":"YulAssignment","src":"9003:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9015:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9026:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9011:3:32"},"nodeType":"YulFunctionCall","src":"9011:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9003:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_0c9a170025b1199db443e102b5af1d9803f66022be9833ab69fcf7c7d7ba0269__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8844:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8858:4:32","type":""}],"src":"8693:342:32"},{"body":{"nodeType":"YulBlock","src":"9214:174:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9231:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9242:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9224:6:32"},"nodeType":"YulFunctionCall","src":"9224:21:32"},"nodeType":"YulExpressionStatement","src":"9224:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9265:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9276:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9261:3:32"},"nodeType":"YulFunctionCall","src":"9261:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"9281:2:32","type":"","value":"24"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9254:6:32"},"nodeType":"YulFunctionCall","src":"9254:30:32"},"nodeType":"YulExpressionStatement","src":"9254:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9304:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9315:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9300:3:32"},"nodeType":"YulFunctionCall","src":"9300:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"9320:26:32","type":"","value":"Callback sender mismatch"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9293:6:32"},"nodeType":"YulFunctionCall","src":"9293:54:32"},"nodeType":"YulExpressionStatement","src":"9293:54:32"},{"nodeType":"YulAssignment","src":"9356:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9368:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9379:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9364:3:32"},"nodeType":"YulFunctionCall","src":"9364:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9356:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_1f51ff47eb13ce7682ffc5c6a8dbf2cc8251a06f9a3b24b891be498a64ef76b7__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9191:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9205:4:32","type":""}],"src":"9040:348:32"},{"body":{"nodeType":"YulBlock","src":"9567:171:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9584:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9595:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9577:6:32"},"nodeType":"YulFunctionCall","src":"9577:21:32"},"nodeType":"YulExpressionStatement","src":"9577:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9618:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9629:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9614:3:32"},"nodeType":"YulFunctionCall","src":"9614:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"9634:2:32","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9607:6:32"},"nodeType":"YulFunctionCall","src":"9607:30:32"},"nodeType":"YulExpressionStatement","src":"9607:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9657:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9668:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9653:3:32"},"nodeType":"YulFunctionCall","src":"9653:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"9673:23:32","type":"","value":"Invalid deposit token"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9646:6:32"},"nodeType":"YulFunctionCall","src":"9646:51:32"},"nodeType":"YulExpressionStatement","src":"9646:51:32"},{"nodeType":"YulAssignment","src":"9706:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9718:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9729:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9714:3:32"},"nodeType":"YulFunctionCall","src":"9714:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9706:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_2b4ead52544f7c4fd94cacb66ce31ac975f3e5d5b96c986beaffd53058354f85__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9544:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9558:4:32","type":""}],"src":"9393:345:32"},{"body":{"nodeType":"YulBlock","src":"9917:171:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9934:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9945:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9927:6:32"},"nodeType":"YulFunctionCall","src":"9927:21:32"},"nodeType":"YulExpressionStatement","src":"9927:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9968:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"9979:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9964:3:32"},"nodeType":"YulFunctionCall","src":"9964:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"9984:2:32","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9957:6:32"},"nodeType":"YulFunctionCall","src":"9957:30:32"},"nodeType":"YulExpressionStatement","src":"9957:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10007:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10018:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10003:3:32"},"nodeType":"YulFunctionCall","src":"10003:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"10023:23:32","type":"","value":"WETH9 address not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9996:6:32"},"nodeType":"YulFunctionCall","src":"9996:51:32"},"nodeType":"YulExpressionStatement","src":"9996:51:32"},{"nodeType":"YulAssignment","src":"10056:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10068:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10079:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10064:3:32"},"nodeType":"YulFunctionCall","src":"10064:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10056:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_3e2d8b60b27a886b8a2c87748b4096ef19f4893d838ef953f696ef0721238046__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9894:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9908:4:32","type":""}],"src":"9743:345:32"},{"body":{"nodeType":"YulBlock","src":"10267:170:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10284:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10295:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10277:6:32"},"nodeType":"YulFunctionCall","src":"10277:21:32"},"nodeType":"YulExpressionStatement","src":"10277:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10318:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10329:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10314:3:32"},"nodeType":"YulFunctionCall","src":"10314:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"10334:2:32","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10307:6:32"},"nodeType":"YulFunctionCall","src":"10307:30:32"},"nodeType":"YulExpressionStatement","src":"10307:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10357:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10368:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10353:3:32"},"nodeType":"YulFunctionCall","src":"10353:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"10373:22:32","type":"","value":"Withdraw amount zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10346:6:32"},"nodeType":"YulFunctionCall","src":"10346:50:32"},"nodeType":"YulExpressionStatement","src":"10346:50:32"},{"nodeType":"YulAssignment","src":"10405:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10417:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10428:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10413:3:32"},"nodeType":"YulFunctionCall","src":"10413:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10405:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_426d7b4d88a506bc09f6ed29efbdcc4a0863c1c503bcb8fec11e1c49071ec5b5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10244:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10258:4:32","type":""}],"src":"10093:344:32"},{"body":{"nodeType":"YulBlock","src":"10616:173:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10633:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10644:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10626:6:32"},"nodeType":"YulFunctionCall","src":"10626:21:32"},"nodeType":"YulExpressionStatement","src":"10626:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10667:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10678:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10663:3:32"},"nodeType":"YulFunctionCall","src":"10663:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"10683:2:32","type":"","value":"23"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10656:6:32"},"nodeType":"YulFunctionCall","src":"10656:30:32"},"nodeType":"YulExpressionStatement","src":"10656:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10706:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10717:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10702:3:32"},"nodeType":"YulFunctionCall","src":"10702:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"10722:25:32","type":"","value":"Position already active"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10695:6:32"},"nodeType":"YulFunctionCall","src":"10695:53:32"},"nodeType":"YulExpressionStatement","src":"10695:53:32"},{"nodeType":"YulAssignment","src":"10757:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10769:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10780:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10765:3:32"},"nodeType":"YulFunctionCall","src":"10765:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10757:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_44869874655bf0887220635de03422dfc5fe91eb11e0815cf64ede1a814a8cfa__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10593:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10607:4:32","type":""}],"src":"10442:347:32"},{"body":{"nodeType":"YulBlock","src":"10968:170:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10985:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"10996:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10978:6:32"},"nodeType":"YulFunctionCall","src":"10978:21:32"},"nodeType":"YulExpressionStatement","src":"10978:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11019:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11030:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11015:3:32"},"nodeType":"YulFunctionCall","src":"11015:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"11035:2:32","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11008:6:32"},"nodeType":"YulFunctionCall","src":"11008:30:32"},"nodeType":"YulExpressionStatement","src":"11008:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11058:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11069:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11054:3:32"},"nodeType":"YulFunctionCall","src":"11054:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"11074:22:32","type":"","value":"Insufficient balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11047:6:32"},"nodeType":"YulFunctionCall","src":"11047:50:32"},"nodeType":"YulExpressionStatement","src":"11047:50:32"},{"nodeType":"YulAssignment","src":"11106:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11118:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11129:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11114:3:32"},"nodeType":"YulFunctionCall","src":"11114:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11106:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10945:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10959:4:32","type":""}],"src":"10794:344:32"},{"body":{"nodeType":"YulBlock","src":"11317:172:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11334:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11345:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11327:6:32"},"nodeType":"YulFunctionCall","src":"11327:21:32"},"nodeType":"YulExpressionStatement","src":"11327:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11368:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11379:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11364:3:32"},"nodeType":"YulFunctionCall","src":"11364:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"11384:2:32","type":"","value":"22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11357:6:32"},"nodeType":"YulFunctionCall","src":"11357:30:32"},"nodeType":"YulExpressionStatement","src":"11357:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11407:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11418:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11403:3:32"},"nodeType":"YulFunctionCall","src":"11403:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"11423:24:32","type":"","value":"Deposit ETH value zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11396:6:32"},"nodeType":"YulFunctionCall","src":"11396:52:32"},"nodeType":"YulExpressionStatement","src":"11396:52:32"},{"nodeType":"YulAssignment","src":"11457:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11469:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11480:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11465:3:32"},"nodeType":"YulFunctionCall","src":"11465:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11457:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_47b25e07ef95bcb6ac2cf1a21d18f5ecb385543cbab4d4f6617b805d835e076e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11294:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11308:4:32","type":""}],"src":"11143:346:32"},{"body":{"nodeType":"YulBlock","src":"11668:166:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11685:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11696:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11678:6:32"},"nodeType":"YulFunctionCall","src":"11678:21:32"},"nodeType":"YulExpressionStatement","src":"11678:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11719:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11730:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11715:3:32"},"nodeType":"YulFunctionCall","src":"11715:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"11735:2:32","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11708:6:32"},"nodeType":"YulFunctionCall","src":"11708:30:32"},"nodeType":"YulExpressionStatement","src":"11708:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11758:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11769:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11754:3:32"},"nodeType":"YulFunctionCall","src":"11754:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"11774:18:32","type":"","value":"Invalid tokenOut"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11747:6:32"},"nodeType":"YulFunctionCall","src":"11747:46:32"},"nodeType":"YulExpressionStatement","src":"11747:46:32"},{"nodeType":"YulAssignment","src":"11802:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11814:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"11825:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11810:3:32"},"nodeType":"YulFunctionCall","src":"11810:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11802:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_5b315838595b6f0906c99fe9714c2e147346e98cd548cbaadd82971a173fc974__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11645:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11659:4:32","type":""}],"src":"11494:340:32"},{"body":{"nodeType":"YulBlock","src":"12013:167:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12030:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12041:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12023:6:32"},"nodeType":"YulFunctionCall","src":"12023:21:32"},"nodeType":"YulExpressionStatement","src":"12023:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12064:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12075:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12060:3:32"},"nodeType":"YulFunctionCall","src":"12060:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"12080:2:32","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12053:6:32"},"nodeType":"YulFunctionCall","src":"12053:30:32"},"nodeType":"YulExpressionStatement","src":"12053:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12103:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12114:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12099:3:32"},"nodeType":"YulFunctionCall","src":"12099:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"12119:19:32","type":"","value":"Insufficient WETH"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12092:6:32"},"nodeType":"YulFunctionCall","src":"12092:47:32"},"nodeType":"YulExpressionStatement","src":"12092:47:32"},{"nodeType":"YulAssignment","src":"12148:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12160:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12171:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12156:3:32"},"nodeType":"YulFunctionCall","src":"12156:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12148:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_60de758d3296c7eae9cdf7e88b7058fbf54b8138dae3844858ca011a2b517bef__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11990:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12004:4:32","type":""}],"src":"11839:341:32"},{"body":{"nodeType":"YulBlock","src":"12359:169:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12376:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12387:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12369:6:32"},"nodeType":"YulFunctionCall","src":"12369:21:32"},"nodeType":"YulExpressionStatement","src":"12369:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12410:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12421:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12406:3:32"},"nodeType":"YulFunctionCall","src":"12406:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"12426:2:32","type":"","value":"19"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12399:6:32"},"nodeType":"YulFunctionCall","src":"12399:30:32"},"nodeType":"YulExpressionStatement","src":"12399:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12449:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12460:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12445:3:32"},"nodeType":"YulFunctionCall","src":"12445:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"12465:21:32","type":"","value":"Deposit amount zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12438:6:32"},"nodeType":"YulFunctionCall","src":"12438:49:32"},"nodeType":"YulExpressionStatement","src":"12438:49:32"},{"nodeType":"YulAssignment","src":"12496:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12508:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12519:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12504:3:32"},"nodeType":"YulFunctionCall","src":"12504:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12496:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_67f3458ed9473ec120369981a7c64321611a483e2742077207296ad8e1b75d0e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12336:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12350:4:32","type":""}],"src":"12185:343:32"},{"body":{"nodeType":"YulBlock","src":"12707:168:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12724:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12735:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12717:6:32"},"nodeType":"YulFunctionCall","src":"12717:21:32"},"nodeType":"YulExpressionStatement","src":"12717:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12758:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12769:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12754:3:32"},"nodeType":"YulFunctionCall","src":"12754:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"12774:2:32","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12747:6:32"},"nodeType":"YulFunctionCall","src":"12747:30:32"},"nodeType":"YulExpressionStatement","src":"12747:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12797:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12808:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12793:3:32"},"nodeType":"YulFunctionCall","src":"12793:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"12813:20:32","type":"","value":"No active position"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12786:6:32"},"nodeType":"YulFunctionCall","src":"12786:48:32"},"nodeType":"YulExpressionStatement","src":"12786:48:32"},{"nodeType":"YulAssignment","src":"12843:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12855:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"12866:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12851:3:32"},"nodeType":"YulFunctionCall","src":"12851:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12843:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_7f8125015117dd75b23ce94a1f1b95a56c6b263752737858dfbd59ad91b03334__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12684:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12698:4:32","type":""}],"src":"12533:342:32"},{"body":{"nodeType":"YulBlock","src":"13054:168:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13071:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13082:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13064:6:32"},"nodeType":"YulFunctionCall","src":"13064:21:32"},"nodeType":"YulExpressionStatement","src":"13064:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13105:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13116:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13101:3:32"},"nodeType":"YulFunctionCall","src":"13101:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"13121:2:32","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13094:6:32"},"nodeType":"YulFunctionCall","src":"13094:30:32"},"nodeType":"YulExpressionStatement","src":"13094:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13144:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13155:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13140:3:32"},"nodeType":"YulFunctionCall","src":"13140:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"13160:20:32","type":"","value":"Pool doesn't exist"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13133:6:32"},"nodeType":"YulFunctionCall","src":"13133:48:32"},"nodeType":"YulExpressionStatement","src":"13133:48:32"},{"nodeType":"YulAssignment","src":"13190:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13202:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13213:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13198:3:32"},"nodeType":"YulFunctionCall","src":"13198:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13190:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_87e7f60b8ff0f06b751ad82b250a560c5b632939464075923cf9b80024908ad5__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13031:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13045:4:32","type":""}],"src":"12880:342:32"},{"body":{"nodeType":"YulBlock","src":"13401:166:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13418:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13429:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13411:6:32"},"nodeType":"YulFunctionCall","src":"13411:21:32"},"nodeType":"YulExpressionStatement","src":"13411:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13452:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13463:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13448:3:32"},"nodeType":"YulFunctionCall","src":"13448:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"13468:2:32","type":"","value":"16"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13441:6:32"},"nodeType":"YulFunctionCall","src":"13441:30:32"},"nodeType":"YulExpressionStatement","src":"13441:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13491:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13502:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13487:3:32"},"nodeType":"YulFunctionCall","src":"13487:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"13507:18:32","type":"","value":"No ETH to refund"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13480:6:32"},"nodeType":"YulFunctionCall","src":"13480:46:32"},"nodeType":"YulExpressionStatement","src":"13480:46:32"},{"nodeType":"YulAssignment","src":"13535:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13547:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13558:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13543:3:32"},"nodeType":"YulFunctionCall","src":"13543:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13535:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_8add2de00d7b9d85843872167b04166d8faa6b5d9abddab527403555bd1de776__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13378:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13392:4:32","type":""}],"src":"13227:340:32"},{"body":{"nodeType":"YulBlock","src":"13746:175:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13763:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13774:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13756:6:32"},"nodeType":"YulFunctionCall","src":"13756:21:32"},"nodeType":"YulExpressionStatement","src":"13756:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13797:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13808:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13793:3:32"},"nodeType":"YulFunctionCall","src":"13793:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"13813:2:32","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13786:6:32"},"nodeType":"YulFunctionCall","src":"13786:30:32"},"nodeType":"YulExpressionStatement","src":"13786:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13836:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13847:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13832:3:32"},"nodeType":"YulFunctionCall","src":"13832:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"13852:27:32","type":"","value":"Invalid recipient address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13825:6:32"},"nodeType":"YulFunctionCall","src":"13825:55:32"},"nodeType":"YulExpressionStatement","src":"13825:55:32"},{"nodeType":"YulAssignment","src":"13889:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13901:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"13912:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13897:3:32"},"nodeType":"YulFunctionCall","src":"13897:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13889:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13723:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13737:4:32","type":""}],"src":"13572:349:32"},{"body":{"nodeType":"YulBlock","src":"14100:165:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14117:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14128:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14110:6:32"},"nodeType":"YulFunctionCall","src":"14110:21:32"},"nodeType":"YulExpressionStatement","src":"14110:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14151:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14162:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14147:3:32"},"nodeType":"YulFunctionCall","src":"14147:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"14167:2:32","type":"","value":"15"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14140:6:32"},"nodeType":"YulFunctionCall","src":"14140:30:32"},"nodeType":"YulExpressionStatement","src":"14140:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14190:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14201:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14186:3:32"},"nodeType":"YulFunctionCall","src":"14186:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"14206:17:32","type":"","value":"Invalid tokenIn"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14179:6:32"},"nodeType":"YulFunctionCall","src":"14179:45:32"},"nodeType":"YulExpressionStatement","src":"14179:45:32"},{"nodeType":"YulAssignment","src":"14233:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14245:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14256:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14241:3:32"},"nodeType":"YulFunctionCall","src":"14241:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14233:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_96b6969c794b38e9db79973f913a03fb7261caa659882d184f77b4014bec49da__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14077:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14091:4:32","type":""}],"src":"13926:339:32"},{"body":{"nodeType":"YulBlock","src":"14444:167:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14461:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14472:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14454:6:32"},"nodeType":"YulFunctionCall","src":"14454:21:32"},"nodeType":"YulExpressionStatement","src":"14454:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14495:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14506:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14491:3:32"},"nodeType":"YulFunctionCall","src":"14491:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"14511:2:32","type":"","value":"17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14484:6:32"},"nodeType":"YulFunctionCall","src":"14484:30:32"},"nodeType":"YulExpressionStatement","src":"14484:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14534:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14545:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14530:3:32"},"nodeType":"YulFunctionCall","src":"14530:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"14550:19:32","type":"","value":"Invalid recipient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14523:6:32"},"nodeType":"YulFunctionCall","src":"14523:47:32"},"nodeType":"YulExpressionStatement","src":"14523:47:32"},{"nodeType":"YulAssignment","src":"14579:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14591:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14602:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14587:3:32"},"nodeType":"YulFunctionCall","src":"14587:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14579:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14421:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14435:4:32","type":""}],"src":"14270:341:32"},{"body":{"nodeType":"YulBlock","src":"14790:163:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14807:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14818:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14800:6:32"},"nodeType":"YulFunctionCall","src":"14800:21:32"},"nodeType":"YulExpressionStatement","src":"14800:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14841:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14852:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14837:3:32"},"nodeType":"YulFunctionCall","src":"14837:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"14857:2:32","type":"","value":"13"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14830:6:32"},"nodeType":"YulFunctionCall","src":"14830:30:32"},"nodeType":"YulExpressionStatement","src":"14830:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14880:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14891:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14876:3:32"},"nodeType":"YulFunctionCall","src":"14876:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"14896:15:32","type":"","value":"WETH9 not set"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14869:6:32"},"nodeType":"YulFunctionCall","src":"14869:43:32"},"nodeType":"YulExpressionStatement","src":"14869:43:32"},{"nodeType":"YulAssignment","src":"14921:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14933:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"14944:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14929:3:32"},"nodeType":"YulFunctionCall","src":"14929:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14921:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_b39775a60751529ff5cba1ab02f690a6255c8af3b19f825012d2298820e7f489__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14767:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14781:4:32","type":""}],"src":"14616:337:32"},{"body":{"nodeType":"YulBlock","src":"15132:175:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15149:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15160:2:32","type":"","value":"32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15142:6:32"},"nodeType":"YulFunctionCall","src":"15142:21:32"},"nodeType":"YulExpressionStatement","src":"15142:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15183:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15194:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15179:3:32"},"nodeType":"YulFunctionCall","src":"15179:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"15199:2:32","type":"","value":"25"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15172:6:32"},"nodeType":"YulFunctionCall","src":"15172:30:32"},"nodeType":"YulExpressionStatement","src":"15172:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15222:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15233:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15218:3:32"},"nodeType":"YulFunctionCall","src":"15218:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"15238:27:32","type":"","value":"Insufficient WETH balance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15211:6:32"},"nodeType":"YulFunctionCall","src":"15211:55:32"},"nodeType":"YulExpressionStatement","src":"15211:55:32"},{"nodeType":"YulAssignment","src":"15275:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15287:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15298:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15283:3:32"},"nodeType":"YulFunctionCall","src":"15283:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15275:4:32"}]}]},"name":"abi_encode_tuple_t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15109:9:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15123:4:32","type":""}],"src":"14958:349:32"},{"body":{"nodeType":"YulBlock","src":"15513:231:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15530:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15541:2:32","type":"","value":"64"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15523:6:32"},"nodeType":"YulFunctionCall","src":"15523:21:32"},"nodeType":"YulExpressionStatement","src":"15523:21:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15564:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15575:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15560:3:32"},"nodeType":"YulFunctionCall","src":"15560:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"15580:2:32","type":"","value":"20"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15553:6:32"},"nodeType":"YulFunctionCall","src":"15553:30:32"},"nodeType":"YulExpressionStatement","src":"15553:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15603:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15614:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15599:3:32"},"nodeType":"YulFunctionCall","src":"15599:18:32"},{"kind":"string","nodeType":"YulLiteral","src":"15619:22:32","type":"","value":"rangeWidthMultiplier"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15592:6:32"},"nodeType":"YulFunctionCall","src":"15592:50:32"},"nodeType":"YulExpressionStatement","src":"15592:50:32"},{"nodeType":"YulAssignment","src":"15651:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15663:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15674:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15659:3:32"},"nodeType":"YulFunctionCall","src":"15659:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15651:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15698:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15709:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15694:3:32"},"nodeType":"YulFunctionCall","src":"15694:20:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15720:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"15728:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"15716:3:32"},"nodeType":"YulFunctionCall","src":"15716:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15687:6:32"},"nodeType":"YulFunctionCall","src":"15687:51:32"},"nodeType":"YulExpressionStatement","src":"15687:51:32"}]},"name":"abi_encode_tuple_t_stringliteral_f8dce0d4a3459471bfd5ca698b526cb410bac112be697e35103fb7328ff5234b_t_uint24__to_t_string_memory_ptr_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15482:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15493:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15504:4:32","type":""}],"src":"15312:432:32"},{"body":{"nodeType":"YulBlock","src":"15912:411:32","statements":[{"nodeType":"YulAssignment","src":"15922:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15934:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"15945:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15930:3:32"},"nodeType":"YulFunctionCall","src":"15930:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15922:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15965:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"15982:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15976:5:32"},"nodeType":"YulFunctionCall","src":"15976:13:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15958:6:32"},"nodeType":"YulFunctionCall","src":"15958:32:32"},"nodeType":"YulExpressionStatement","src":"15958:32:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16010:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16021:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16006:3:32"},"nodeType":"YulFunctionCall","src":"16006:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16042:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16050:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16038:3:32"},"nodeType":"YulFunctionCall","src":"16038:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16032:5:32"},"nodeType":"YulFunctionCall","src":"16032:24:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16066:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"16071:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"16062:3:32"},"nodeType":"YulFunctionCall","src":"16062:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"16075:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16058:3:32"},"nodeType":"YulFunctionCall","src":"16058:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16028:3:32"},"nodeType":"YulFunctionCall","src":"16028:50:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15999:6:32"},"nodeType":"YulFunctionCall","src":"15999:80:32"},"nodeType":"YulExpressionStatement","src":"15999:80:32"},{"nodeType":"YulVariableDeclaration","src":"16088:44:32","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16118:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16126:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16114:3:32"},"nodeType":"YulFunctionCall","src":"16114:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16108:5:32"},"nodeType":"YulFunctionCall","src":"16108:24:32"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"16092:12:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"16141:44:32","value":{"kind":"number","nodeType":"YulLiteral","src":"16151:34:32","type":"","value":"0xffffffffffffffffffffffffffffffff"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"16145:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16205:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16216:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16201:3:32"},"nodeType":"YulFunctionCall","src":"16201:20:32"},{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"16227:12:32"},{"name":"_1","nodeType":"YulIdentifier","src":"16241:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16223:3:32"},"nodeType":"YulFunctionCall","src":"16223:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16194:6:32"},"nodeType":"YulFunctionCall","src":"16194:51:32"},"nodeType":"YulExpressionStatement","src":"16194:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16265:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16276:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16261:3:32"},"nodeType":"YulFunctionCall","src":"16261:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16297:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16305:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16293:3:32"},"nodeType":"YulFunctionCall","src":"16293:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16287:5:32"},"nodeType":"YulFunctionCall","src":"16287:24:32"},{"name":"_1","nodeType":"YulIdentifier","src":"16313:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16283:3:32"},"nodeType":"YulFunctionCall","src":"16283:33:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16254:6:32"},"nodeType":"YulFunctionCall","src":"16254:63:32"},"nodeType":"YulExpressionStatement","src":"16254:63:32"}]},"name":"abi_encode_tuple_t_struct$_CollectParams_$2601_memory_ptr__to_t_struct$_CollectParams_$2601_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15881:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15892:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15903:4:32","type":""}],"src":"15749:574:32"},{"body":{"nodeType":"YulBlock","src":"16511:377:32","statements":[{"nodeType":"YulAssignment","src":"16521:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16533:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16544:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16529:3:32"},"nodeType":"YulFunctionCall","src":"16529:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16521:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16564:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16581:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16575:5:32"},"nodeType":"YulFunctionCall","src":"16575:13:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16557:6:32"},"nodeType":"YulFunctionCall","src":"16557:32:32"},"nodeType":"YulExpressionStatement","src":"16557:32:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16609:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16620:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16605:3:32"},"nodeType":"YulFunctionCall","src":"16605:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16641:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16649:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16637:3:32"},"nodeType":"YulFunctionCall","src":"16637:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16631:5:32"},"nodeType":"YulFunctionCall","src":"16631:24:32"},{"kind":"number","nodeType":"YulLiteral","src":"16657:34:32","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"16627:3:32"},"nodeType":"YulFunctionCall","src":"16627:65:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16598:6:32"},"nodeType":"YulFunctionCall","src":"16598:95:32"},"nodeType":"YulExpressionStatement","src":"16598:95:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16713:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16724:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16709:3:32"},"nodeType":"YulFunctionCall","src":"16709:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16741:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16749:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16737:3:32"},"nodeType":"YulFunctionCall","src":"16737:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16731:5:32"},"nodeType":"YulFunctionCall","src":"16731:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16702:6:32"},"nodeType":"YulFunctionCall","src":"16702:54:32"},"nodeType":"YulExpressionStatement","src":"16702:54:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16776:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16787:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16772:3:32"},"nodeType":"YulFunctionCall","src":"16772:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16804:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16812:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16800:3:32"},"nodeType":"YulFunctionCall","src":"16800:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16794:5:32"},"nodeType":"YulFunctionCall","src":"16794:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16765:6:32"},"nodeType":"YulFunctionCall","src":"16765:54:32"},"nodeType":"YulExpressionStatement","src":"16765:54:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16839:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"16850:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16835:3:32"},"nodeType":"YulFunctionCall","src":"16835:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16867:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"16875:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16863:3:32"},"nodeType":"YulFunctionCall","src":"16863:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"16857:5:32"},"nodeType":"YulFunctionCall","src":"16857:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16828:6:32"},"nodeType":"YulFunctionCall","src":"16828:54:32"},"nodeType":"YulExpressionStatement","src":"16828:54:32"}]},"name":"abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$2582_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$2582_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16480:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16491:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16502:4:32","type":""}],"src":"16328:560:32"},{"body":{"nodeType":"YulBlock","src":"17074:614:32","statements":[{"nodeType":"YulAssignment","src":"17084:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17096:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17107:3:32","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17092:3:32"},"nodeType":"YulFunctionCall","src":"17092:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17084:4:32"}]},{"nodeType":"YulVariableDeclaration","src":"17120:29:32","value":{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17138:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"17143:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"17134:3:32"},"nodeType":"YulFunctionCall","src":"17134:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"17147:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17130:3:32"},"nodeType":"YulFunctionCall","src":"17130:19:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"17124:2:32","type":""}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17165:9:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17186:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17180:5:32"},"nodeType":"YulFunctionCall","src":"17180:13:32"},{"name":"_1","nodeType":"YulIdentifier","src":"17195:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17176:3:32"},"nodeType":"YulFunctionCall","src":"17176:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17158:6:32"},"nodeType":"YulFunctionCall","src":"17158:41:32"},"nodeType":"YulExpressionStatement","src":"17158:41:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17219:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17230:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17215:3:32"},"nodeType":"YulFunctionCall","src":"17215:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17251:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17259:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17247:3:32"},"nodeType":"YulFunctionCall","src":"17247:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17241:5:32"},"nodeType":"YulFunctionCall","src":"17241:24:32"},{"name":"_1","nodeType":"YulIdentifier","src":"17267:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17237:3:32"},"nodeType":"YulFunctionCall","src":"17237:33:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17208:6:32"},"nodeType":"YulFunctionCall","src":"17208:63:32"},"nodeType":"YulExpressionStatement","src":"17208:63:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17291:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17302:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17287:3:32"},"nodeType":"YulFunctionCall","src":"17287:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17323:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17331:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17319:3:32"},"nodeType":"YulFunctionCall","src":"17319:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17313:5:32"},"nodeType":"YulFunctionCall","src":"17313:24:32"},{"kind":"number","nodeType":"YulLiteral","src":"17339:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17309:3:32"},"nodeType":"YulFunctionCall","src":"17309:39:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17280:6:32"},"nodeType":"YulFunctionCall","src":"17280:69:32"},"nodeType":"YulExpressionStatement","src":"17280:69:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17369:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17380:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17365:3:32"},"nodeType":"YulFunctionCall","src":"17365:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17401:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17409:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17397:3:32"},"nodeType":"YulFunctionCall","src":"17397:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17391:5:32"},"nodeType":"YulFunctionCall","src":"17391:24:32"},{"name":"_1","nodeType":"YulIdentifier","src":"17417:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17387:3:32"},"nodeType":"YulFunctionCall","src":"17387:33:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17358:6:32"},"nodeType":"YulFunctionCall","src":"17358:63:32"},"nodeType":"YulExpressionStatement","src":"17358:63:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17441:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17452:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17437:3:32"},"nodeType":"YulFunctionCall","src":"17437:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17469:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17477:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17465:3:32"},"nodeType":"YulFunctionCall","src":"17465:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17459:5:32"},"nodeType":"YulFunctionCall","src":"17459:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17430:6:32"},"nodeType":"YulFunctionCall","src":"17430:54:32"},"nodeType":"YulExpressionStatement","src":"17430:54:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17504:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17515:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17500:3:32"},"nodeType":"YulFunctionCall","src":"17500:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17532:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17540:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17528:3:32"},"nodeType":"YulFunctionCall","src":"17528:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17522:5:32"},"nodeType":"YulFunctionCall","src":"17522:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17493:6:32"},"nodeType":"YulFunctionCall","src":"17493:54:32"},"nodeType":"YulExpressionStatement","src":"17493:54:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17567:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17578:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17563:3:32"},"nodeType":"YulFunctionCall","src":"17563:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17595:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17603:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17591:3:32"},"nodeType":"YulFunctionCall","src":"17591:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17585:5:32"},"nodeType":"YulFunctionCall","src":"17585:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17556:6:32"},"nodeType":"YulFunctionCall","src":"17556:54:32"},"nodeType":"YulExpressionStatement","src":"17556:54:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17630:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17641:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17626:3:32"},"nodeType":"YulFunctionCall","src":"17626:20:32"},{"arguments":[{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17662:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17670:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17658:3:32"},"nodeType":"YulFunctionCall","src":"17658:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17652:5:32"},"nodeType":"YulFunctionCall","src":"17652:24:32"},{"name":"_1","nodeType":"YulIdentifier","src":"17678:2:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"17648:3:32"},"nodeType":"YulFunctionCall","src":"17648:33:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17619:6:32"},"nodeType":"YulFunctionCall","src":"17619:63:32"},"nodeType":"YulExpressionStatement","src":"17619:63:32"}]},"name":"abi_encode_tuple_t_struct$_ExactInputSingleParams_$2703_memory_ptr__to_t_struct$_ExactInputSingleParams_$2703_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17043:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17054:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17065:4:32","type":""}],"src":"16893:795:32"},{"body":{"nodeType":"YulBlock","src":"17850:1077:32","statements":[{"nodeType":"YulAssignment","src":"17860:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17872:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"17883:3:32","type":"","value":"352"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17868:3:32"},"nodeType":"YulFunctionCall","src":"17868:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17860:4:32"}]},{"expression":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17923:6:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17917:5:32"},"nodeType":"YulFunctionCall","src":"17917:13:32"},{"name":"headStart","nodeType":"YulIdentifier","src":"17932:9:32"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"17896:20:32"},"nodeType":"YulFunctionCall","src":"17896:46:32"},"nodeType":"YulExpressionStatement","src":"17896:46:32"},{"nodeType":"YulVariableDeclaration","src":"17951:44:32","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17981:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"17989:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17977:3:32"},"nodeType":"YulFunctionCall","src":"17977:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17971:5:32"},"nodeType":"YulFunctionCall","src":"17971:24:32"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"17955:12:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"18025:12:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18043:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18054:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18039:3:32"},"nodeType":"YulFunctionCall","src":"18039:20:32"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"18004:20:32"},"nodeType":"YulFunctionCall","src":"18004:56:32"},"nodeType":"YulExpressionStatement","src":"18004:56:32"},{"nodeType":"YulVariableDeclaration","src":"18069:46:32","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18101:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18109:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18097:3:32"},"nodeType":"YulFunctionCall","src":"18097:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18091:5:32"},"nodeType":"YulFunctionCall","src":"18091:24:32"},"variables":[{"name":"memberValue0_1","nodeType":"YulTypedName","src":"18073:14:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_1","nodeType":"YulIdentifier","src":"18144:14:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18164:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18175:4:32","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18160:3:32"},"nodeType":"YulFunctionCall","src":"18160:20:32"}],"functionName":{"name":"abi_encode_t_uint24","nodeType":"YulIdentifier","src":"18124:19:32"},"nodeType":"YulFunctionCall","src":"18124:57:32"},"nodeType":"YulExpressionStatement","src":"18124:57:32"},{"nodeType":"YulVariableDeclaration","src":"18190:46:32","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18222:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18230:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18218:3:32"},"nodeType":"YulFunctionCall","src":"18218:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18212:5:32"},"nodeType":"YulFunctionCall","src":"18212:24:32"},"variables":[{"name":"memberValue0_2","nodeType":"YulTypedName","src":"18194:14:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_2","nodeType":"YulIdentifier","src":"18264:14:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18284:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18295:4:32","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18280:3:32"},"nodeType":"YulFunctionCall","src":"18280:20:32"}],"functionName":{"name":"abi_encode_t_int24","nodeType":"YulIdentifier","src":"18245:18:32"},"nodeType":"YulFunctionCall","src":"18245:56:32"},"nodeType":"YulExpressionStatement","src":"18245:56:32"},{"nodeType":"YulVariableDeclaration","src":"18310:46:32","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18342:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18350:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18338:3:32"},"nodeType":"YulFunctionCall","src":"18338:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18332:5:32"},"nodeType":"YulFunctionCall","src":"18332:24:32"},"variables":[{"name":"memberValue0_3","nodeType":"YulTypedName","src":"18314:14:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_3","nodeType":"YulIdentifier","src":"18384:14:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18404:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18415:4:32","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18400:3:32"},"nodeType":"YulFunctionCall","src":"18400:20:32"}],"functionName":{"name":"abi_encode_t_int24","nodeType":"YulIdentifier","src":"18365:18:32"},"nodeType":"YulFunctionCall","src":"18365:56:32"},"nodeType":"YulExpressionStatement","src":"18365:56:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18441:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18452:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18437:3:32"},"nodeType":"YulFunctionCall","src":"18437:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18469:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18477:4:32","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18465:3:32"},"nodeType":"YulFunctionCall","src":"18465:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18459:5:32"},"nodeType":"YulFunctionCall","src":"18459:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18430:6:32"},"nodeType":"YulFunctionCall","src":"18430:54:32"},"nodeType":"YulExpressionStatement","src":"18430:54:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18504:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18515:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18500:3:32"},"nodeType":"YulFunctionCall","src":"18500:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18532:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18540:4:32","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18528:3:32"},"nodeType":"YulFunctionCall","src":"18528:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18522:5:32"},"nodeType":"YulFunctionCall","src":"18522:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18493:6:32"},"nodeType":"YulFunctionCall","src":"18493:54:32"},"nodeType":"YulExpressionStatement","src":"18493:54:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18567:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"18578:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18563:3:32"},"nodeType":"YulFunctionCall","src":"18563:20:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18595:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"18603:4:32","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18591:3:32"},"nodeType":"YulFunctionCall","src":"18591:17:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18585:5:32"},"nodeType":"YulFunctionCall","src":"18585:24:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18556:6:32"},"nodeType":"YulFunctionCall","src":"18556:54:32"},"nodeType":"YulExpressionStatement","src":"18556:54:32"},{"nodeType":"YulVariableDeclaration","src":"18619:16:32","value":{"kind":"number","nodeType":"YulLiteral","src":"18629:6:32","type":"","value":"0x0100"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"18623:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18655:9:32"},{"name":"_1","nodeType":"YulIdentifier","src":"18666:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18651:3:32"},"nodeType":"YulFunctionCall","src":"18651:18:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18681:6:32"},{"name":"_1","nodeType":"YulIdentifier","src":"18689:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18677:3:32"},"nodeType":"YulFunctionCall","src":"18677:15:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18671:5:32"},"nodeType":"YulFunctionCall","src":"18671:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18644:6:32"},"nodeType":"YulFunctionCall","src":"18644:50:32"},"nodeType":"YulExpressionStatement","src":"18644:50:32"},{"nodeType":"YulVariableDeclaration","src":"18703:16:32","value":{"kind":"number","nodeType":"YulLiteral","src":"18713:6:32","type":"","value":"0x0120"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"18707:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18728:44:32","value":{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18760:6:32"},{"name":"_2","nodeType":"YulIdentifier","src":"18768:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18756:3:32"},"nodeType":"YulFunctionCall","src":"18756:15:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18750:5:32"},"nodeType":"YulFunctionCall","src":"18750:22:32"},"variables":[{"name":"memberValue0_4","nodeType":"YulTypedName","src":"18732:14:32","type":""}]},{"expression":{"arguments":[{"name":"memberValue0_4","nodeType":"YulIdentifier","src":"18802:14:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18822:9:32"},{"name":"_2","nodeType":"YulIdentifier","src":"18833:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18818:3:32"},"nodeType":"YulFunctionCall","src":"18818:18:32"}],"functionName":{"name":"abi_encode_t_address","nodeType":"YulIdentifier","src":"18781:20:32"},"nodeType":"YulFunctionCall","src":"18781:56:32"},"nodeType":"YulExpressionStatement","src":"18781:56:32"},{"nodeType":"YulVariableDeclaration","src":"18846:16:32","value":{"kind":"number","nodeType":"YulLiteral","src":"18856:6:32","type":"","value":"0x0140"},"variables":[{"name":"_3","nodeType":"YulTypedName","src":"18850:2:32","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18882:9:32"},{"name":"_3","nodeType":"YulIdentifier","src":"18893:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18878:3:32"},"nodeType":"YulFunctionCall","src":"18878:18:32"},{"arguments":[{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18908:6:32"},{"name":"_3","nodeType":"YulIdentifier","src":"18916:2:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18904:3:32"},"nodeType":"YulFunctionCall","src":"18904:15:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18898:5:32"},"nodeType":"YulFunctionCall","src":"18898:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18871:6:32"},"nodeType":"YulFunctionCall","src":"18871:50:32"},"nodeType":"YulExpressionStatement","src":"18871:50:32"}]},"name":"abi_encode_tuple_t_struct$_MintParams_$2532_memory_ptr__to_t_struct$_MintParams_$2532_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17819:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17830:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17841:4:32","type":""}],"src":"17693:1234:32"},{"body":{"nodeType":"YulBlock","src":"19031:91:32","statements":[{"nodeType":"YulAssignment","src":"19041:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19053:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19064:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19049:3:32"},"nodeType":"YulFunctionCall","src":"19049:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19041:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19083:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19098:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"19106:8:32","type":"","value":"0xffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19094:3:32"},"nodeType":"YulFunctionCall","src":"19094:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19076:6:32"},"nodeType":"YulFunctionCall","src":"19076:40:32"},"nodeType":"YulExpressionStatement","src":"19076:40:32"}]},"name":"abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19000:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19011:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19022:4:32","type":""}],"src":"18932:190:32"},{"body":{"nodeType":"YulBlock","src":"19228:76:32","statements":[{"nodeType":"YulAssignment","src":"19238:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19250:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19261:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19246:3:32"},"nodeType":"YulFunctionCall","src":"19246:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19238:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19280:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"19291:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19273:6:32"},"nodeType":"YulFunctionCall","src":"19273:25:32"},"nodeType":"YulExpressionStatement","src":"19273:25:32"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19197:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19208:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19219:4:32","type":""}],"src":"19127:177:32"},{"body":{"nodeType":"YulBlock","src":"19486:277:32","statements":[{"nodeType":"YulAssignment","src":"19496:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19508:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19519:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19504:3:32"},"nodeType":"YulFunctionCall","src":"19504:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19496:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19539:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"19550:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19532:6:32"},"nodeType":"YulFunctionCall","src":"19532:25:32"},"nodeType":"YulExpressionStatement","src":"19532:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19577:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19588:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19573:3:32"},"nodeType":"YulFunctionCall","src":"19573:18:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19604:1:32","type":"","value":"2"},{"name":"value1","nodeType":"YulIdentifier","src":"19607:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"19593:10:32"},"nodeType":"YulFunctionCall","src":"19593:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19566:6:32"},"nodeType":"YulFunctionCall","src":"19566:49:32"},"nodeType":"YulExpressionStatement","src":"19566:49:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19635:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19646:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19631:3:32"},"nodeType":"YulFunctionCall","src":"19631:18:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"19662:1:32","type":"","value":"2"},{"name":"value2","nodeType":"YulIdentifier","src":"19665:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"19651:10:32"},"nodeType":"YulFunctionCall","src":"19651:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19624:6:32"},"nodeType":"YulFunctionCall","src":"19624:49:32"},"nodeType":"YulExpressionStatement","src":"19624:49:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19693:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"19704:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19689:3:32"},"nodeType":"YulFunctionCall","src":"19689:18:32"},{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"19713:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"19721:34:32","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"19709:3:32"},"nodeType":"YulFunctionCall","src":"19709:47:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19682:6:32"},"nodeType":"YulFunctionCall","src":"19682:75:32"},"nodeType":"YulExpressionStatement","src":"19682:75:32"}]},"name":"abi_encode_tuple_t_uint256_t_int24_t_int24_t_uint128__to_t_uint256_t_int24_t_int24_t_uint128__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19431:9:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19442:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19450:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19458:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19466:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19477:4:32","type":""}],"src":"19309:454:32"},{"body":{"nodeType":"YulBlock","src":"19967:337:32","statements":[{"nodeType":"YulAssignment","src":"19977:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19989:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20000:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19985:3:32"},"nodeType":"YulFunctionCall","src":"19985:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19977:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20020:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"20031:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20013:6:32"},"nodeType":"YulFunctionCall","src":"20013:25:32"},"nodeType":"YulExpressionStatement","src":"20013:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20058:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20069:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20054:3:32"},"nodeType":"YulFunctionCall","src":"20054:18:32"},{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"20078:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"20086:34:32","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"20074:3:32"},"nodeType":"YulFunctionCall","src":"20074:47:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20047:6:32"},"nodeType":"YulFunctionCall","src":"20047:75:32"},"nodeType":"YulExpressionStatement","src":"20047:75:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20142:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20153:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20138:3:32"},"nodeType":"YulFunctionCall","src":"20138:18:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20169:1:32","type":"","value":"2"},{"name":"value2","nodeType":"YulIdentifier","src":"20172:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"20158:10:32"},"nodeType":"YulFunctionCall","src":"20158:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20131:6:32"},"nodeType":"YulFunctionCall","src":"20131:49:32"},"nodeType":"YulExpressionStatement","src":"20131:49:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20200:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20211:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20196:3:32"},"nodeType":"YulFunctionCall","src":"20196:18:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20227:1:32","type":"","value":"2"},{"name":"value3","nodeType":"YulIdentifier","src":"20230:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"20216:10:32"},"nodeType":"YulFunctionCall","src":"20216:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20189:6:32"},"nodeType":"YulFunctionCall","src":"20189:49:32"},"nodeType":"YulExpressionStatement","src":"20189:49:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20258:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20269:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20254:3:32"},"nodeType":"YulFunctionCall","src":"20254:19:32"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20289:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20282:6:32"},"nodeType":"YulFunctionCall","src":"20282:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"20275:6:32"},"nodeType":"YulFunctionCall","src":"20275:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20247:6:32"},"nodeType":"YulFunctionCall","src":"20247:51:32"},"nodeType":"YulExpressionStatement","src":"20247:51:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint128_t_int24_t_int24_t_bool__to_t_uint256_t_uint128_t_int24_t_int24_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19904:9:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19915:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19923:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19931:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19939:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19947:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19958:4:32","type":""}],"src":"19768:536:32"},{"body":{"nodeType":"YulBlock","src":"20438:119:32","statements":[{"nodeType":"YulAssignment","src":"20448:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20460:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20471:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20456:3:32"},"nodeType":"YulFunctionCall","src":"20456:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20448:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20490:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"20501:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20483:6:32"},"nodeType":"YulFunctionCall","src":"20483:25:32"},"nodeType":"YulExpressionStatement","src":"20483:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20528:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20539:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20524:3:32"},"nodeType":"YulFunctionCall","src":"20524:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"20544:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20517:6:32"},"nodeType":"YulFunctionCall","src":"20517:34:32"},"nodeType":"YulExpressionStatement","src":"20517:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20399:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20410:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20418:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20429:4:32","type":""}],"src":"20309:248:32"},{"body":{"nodeType":"YulBlock","src":"20789:340:32","statements":[{"nodeType":"YulAssignment","src":"20799:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20811:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20822:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20807:3:32"},"nodeType":"YulFunctionCall","src":"20807:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20799:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20842:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"20853:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20835:6:32"},"nodeType":"YulFunctionCall","src":"20835:25:32"},"nodeType":"YulExpressionStatement","src":"20835:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20880:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20891:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20876:3:32"},"nodeType":"YulFunctionCall","src":"20876:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"20896:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20869:6:32"},"nodeType":"YulFunctionCall","src":"20869:34:32"},"nodeType":"YulExpressionStatement","src":"20869:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20923:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20934:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20919:3:32"},"nodeType":"YulFunctionCall","src":"20919:18:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"20950:1:32","type":"","value":"2"},{"name":"value2","nodeType":"YulIdentifier","src":"20953:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"20939:10:32"},"nodeType":"YulFunctionCall","src":"20939:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20912:6:32"},"nodeType":"YulFunctionCall","src":"20912:49:32"},"nodeType":"YulExpressionStatement","src":"20912:49:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20981:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"20992:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20977:3:32"},"nodeType":"YulFunctionCall","src":"20977:18:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"21008:1:32","type":"","value":"2"},{"name":"value3","nodeType":"YulIdentifier","src":"21011:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"20997:10:32"},"nodeType":"YulFunctionCall","src":"20997:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20970:6:32"},"nodeType":"YulFunctionCall","src":"20970:49:32"},"nodeType":"YulExpressionStatement","src":"20970:49:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21039:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21050:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21035:3:32"},"nodeType":"YulFunctionCall","src":"21035:19:32"},{"arguments":[{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"21070:6:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21063:6:32"},"nodeType":"YulFunctionCall","src":"21063:14:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"21056:6:32"},"nodeType":"YulFunctionCall","src":"21056:22:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21028:6:32"},"nodeType":"YulFunctionCall","src":"21028:51:32"},"nodeType":"YulExpressionStatement","src":"21028:51:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21099:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21110:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21095:3:32"},"nodeType":"YulFunctionCall","src":"21095:19:32"},{"name":"value5","nodeType":"YulIdentifier","src":"21116:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21088:6:32"},"nodeType":"YulFunctionCall","src":"21088:35:32"},"nodeType":"YulExpressionStatement","src":"21088:35:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_int24_t_int24_t_bool_t_uint256__to_t_uint256_t_uint256_t_int24_t_int24_t_bool_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20718:9:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20729:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20737:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20745:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20753:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20761:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"20769:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"20780:4:32","type":""}],"src":"20562:567:32"},{"body":{"nodeType":"YulBlock","src":"21311:187:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21328:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"21339:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21321:6:32"},"nodeType":"YulFunctionCall","src":"21321:25:32"},"nodeType":"YulExpressionStatement","src":"21321:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21366:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21377:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21362:3:32"},"nodeType":"YulFunctionCall","src":"21362:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"21382:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21355:6:32"},"nodeType":"YulFunctionCall","src":"21355:34:32"},"nodeType":"YulExpressionStatement","src":"21355:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21409:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21420:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21405:3:32"},"nodeType":"YulFunctionCall","src":"21405:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"21425:2:32","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21398:6:32"},"nodeType":"YulFunctionCall","src":"21398:30:32"},"nodeType":"YulExpressionStatement","src":"21398:30:32"},{"nodeType":"YulAssignment","src":"21437:55:32","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"21465:6:32"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21477:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21488:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21473:3:32"},"nodeType":"YulFunctionCall","src":"21473:18:32"}],"functionName":{"name":"abi_encode_t_string","nodeType":"YulIdentifier","src":"21445:19:32"},"nodeType":"YulFunctionCall","src":"21445:47:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21437:4:32"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21264:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"21275:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21283:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21291:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21302:4:32","type":""}],"src":"21134:364:32"},{"body":{"nodeType":"YulBlock","src":"21733:256:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21750:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"21761:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21743:6:32"},"nodeType":"YulFunctionCall","src":"21743:25:32"},"nodeType":"YulExpressionStatement","src":"21743:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21788:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21799:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21784:3:32"},"nodeType":"YulFunctionCall","src":"21784:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"21804:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21777:6:32"},"nodeType":"YulFunctionCall","src":"21777:34:32"},"nodeType":"YulExpressionStatement","src":"21777:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21831:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21842:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21827:3:32"},"nodeType":"YulFunctionCall","src":"21827:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"21847:2:32","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21820:6:32"},"nodeType":"YulFunctionCall","src":"21820:30:32"},"nodeType":"YulExpressionStatement","src":"21820:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21870:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21881:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21866:3:32"},"nodeType":"YulFunctionCall","src":"21866:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"21886:2:32","type":"","value":"18"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21859:6:32"},"nodeType":"YulFunctionCall","src":"21859:30:32"},"nodeType":"YulExpressionStatement","src":"21859:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21909:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21920:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21905:3:32"},"nodeType":"YulFunctionCall","src":"21905:19:32"},{"kind":"string","nodeType":"YulLiteral","src":"21926:20:32","type":"","value":"Unknown mint error"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21898:6:32"},"nodeType":"YulFunctionCall","src":"21898:49:32"},"nodeType":"YulExpressionStatement","src":"21898:49:32"},{"nodeType":"YulAssignment","src":"21956:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21968:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"21979:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21964:3:32"},"nodeType":"YulFunctionCall","src":"21964:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"21956:4:32"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_34cbab512ecc1bb9723527c06813bbc156590fb1ae4cb863d2cf2d7cc2530654__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"21694:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"21705:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"21713:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"21724:4:32","type":""}],"src":"21503:486:32"},{"body":{"nodeType":"YulBlock","src":"22224:259:32","statements":[{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22241:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"22252:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22234:6:32"},"nodeType":"YulFunctionCall","src":"22234:25:32"},"nodeType":"YulExpressionStatement","src":"22234:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22279:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22290:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22275:3:32"},"nodeType":"YulFunctionCall","src":"22275:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"22295:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22268:6:32"},"nodeType":"YulFunctionCall","src":"22268:34:32"},"nodeType":"YulExpressionStatement","src":"22268:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22322:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22333:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22318:3:32"},"nodeType":"YulFunctionCall","src":"22318:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"22338:2:32","type":"","value":"96"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22311:6:32"},"nodeType":"YulFunctionCall","src":"22311:30:32"},"nodeType":"YulExpressionStatement","src":"22311:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22361:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22372:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22357:3:32"},"nodeType":"YulFunctionCall","src":"22357:18:32"},{"kind":"number","nodeType":"YulLiteral","src":"22377:2:32","type":"","value":"21"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22350:6:32"},"nodeType":"YulFunctionCall","src":"22350:30:32"},"nodeType":"YulExpressionStatement","src":"22350:30:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22400:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22411:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22396:3:32"},"nodeType":"YulFunctionCall","src":"22396:19:32"},{"kind":"string","nodeType":"YulLiteral","src":"22417:23:32","type":"","value":"Zero liquidity minted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22389:6:32"},"nodeType":"YulFunctionCall","src":"22389:52:32"},"nodeType":"YulExpressionStatement","src":"22389:52:32"},{"nodeType":"YulAssignment","src":"22450:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22462:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22473:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22458:3:32"},"nodeType":"YulFunctionCall","src":"22458:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22450:4:32"}]}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_ba3f67c9f8db8f9ad7578a5b5bfe72d10e3ead8623bd80de22ff704bc271202b__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22185:9:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22196:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22204:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22215:4:32","type":""}],"src":"21994:489:32"},{"body":{"nodeType":"YulBlock","src":"22645:162:32","statements":[{"nodeType":"YulAssignment","src":"22655:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22667:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22678:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22663:3:32"},"nodeType":"YulFunctionCall","src":"22663:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"22655:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22697:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"22708:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22690:6:32"},"nodeType":"YulFunctionCall","src":"22690:25:32"},"nodeType":"YulExpressionStatement","src":"22690:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22735:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22746:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22731:3:32"},"nodeType":"YulFunctionCall","src":"22731:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"22751:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22724:6:32"},"nodeType":"YulFunctionCall","src":"22724:34:32"},"nodeType":"YulExpressionStatement","src":"22724:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"22778:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"22789:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22774:3:32"},"nodeType":"YulFunctionCall","src":"22774:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"22794:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"22767:6:32"},"nodeType":"YulFunctionCall","src":"22767:34:32"},"nodeType":"YulExpressionStatement","src":"22767:34:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22598:9:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"22609:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"22617:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22625:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22636:4:32","type":""}],"src":"22488:319:32"},{"body":{"nodeType":"YulBlock","src":"23149:571:32","statements":[{"nodeType":"YulAssignment","src":"23159:27:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23171:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23182:3:32","type":"","value":"320"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23167:3:32"},"nodeType":"YulFunctionCall","src":"23167:19:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23159:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23202:9:32"},{"name":"value0","nodeType":"YulIdentifier","src":"23213:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23195:6:32"},"nodeType":"YulFunctionCall","src":"23195:25:32"},"nodeType":"YulExpressionStatement","src":"23195:25:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23240:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23251:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23236:3:32"},"nodeType":"YulFunctionCall","src":"23236:18:32"},{"name":"value1","nodeType":"YulIdentifier","src":"23256:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23229:6:32"},"nodeType":"YulFunctionCall","src":"23229:34:32"},"nodeType":"YulExpressionStatement","src":"23229:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23283:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23294:2:32","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23279:3:32"},"nodeType":"YulFunctionCall","src":"23279:18:32"},{"name":"value2","nodeType":"YulIdentifier","src":"23299:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23272:6:32"},"nodeType":"YulFunctionCall","src":"23272:34:32"},"nodeType":"YulExpressionStatement","src":"23272:34:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23326:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23337:2:32","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23322:3:32"},"nodeType":"YulFunctionCall","src":"23322:18:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23353:1:32","type":"","value":"2"},{"name":"value3","nodeType":"YulIdentifier","src":"23356:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"23342:10:32"},"nodeType":"YulFunctionCall","src":"23342:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23315:6:32"},"nodeType":"YulFunctionCall","src":"23315:49:32"},"nodeType":"YulExpressionStatement","src":"23315:49:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23384:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23395:3:32","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23380:3:32"},"nodeType":"YulFunctionCall","src":"23380:19:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23412:1:32","type":"","value":"2"},{"name":"value4","nodeType":"YulIdentifier","src":"23415:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"23401:10:32"},"nodeType":"YulFunctionCall","src":"23401:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23373:6:32"},"nodeType":"YulFunctionCall","src":"23373:50:32"},"nodeType":"YulExpressionStatement","src":"23373:50:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23443:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23454:3:32","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23439:3:32"},"nodeType":"YulFunctionCall","src":"23439:19:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23471:1:32","type":"","value":"2"},{"name":"value5","nodeType":"YulIdentifier","src":"23474:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"23460:10:32"},"nodeType":"YulFunctionCall","src":"23460:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23432:6:32"},"nodeType":"YulFunctionCall","src":"23432:50:32"},"nodeType":"YulExpressionStatement","src":"23432:50:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23502:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23513:3:32","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23498:3:32"},"nodeType":"YulFunctionCall","src":"23498:19:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23530:1:32","type":"","value":"2"},{"name":"value6","nodeType":"YulIdentifier","src":"23533:6:32"}],"functionName":{"name":"signextend","nodeType":"YulIdentifier","src":"23519:10:32"},"nodeType":"YulFunctionCall","src":"23519:21:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23491:6:32"},"nodeType":"YulFunctionCall","src":"23491:50:32"},"nodeType":"YulExpressionStatement","src":"23491:50:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23561:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23572:3:32","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23557:3:32"},"nodeType":"YulFunctionCall","src":"23557:19:32"},{"arguments":[{"name":"value7","nodeType":"YulIdentifier","src":"23582:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"23590:34:32","type":"","value":"0xffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23578:3:32"},"nodeType":"YulFunctionCall","src":"23578:47:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23550:6:32"},"nodeType":"YulFunctionCall","src":"23550:76:32"},"nodeType":"YulExpressionStatement","src":"23550:76:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23646:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23657:3:32","type":"","value":"256"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23642:3:32"},"nodeType":"YulFunctionCall","src":"23642:19:32"},{"name":"value8","nodeType":"YulIdentifier","src":"23663:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23635:6:32"},"nodeType":"YulFunctionCall","src":"23635:35:32"},"nodeType":"YulExpressionStatement","src":"23635:35:32"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23690:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23701:3:32","type":"","value":"288"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23686:3:32"},"nodeType":"YulFunctionCall","src":"23686:19:32"},{"name":"value9","nodeType":"YulIdentifier","src":"23707:6:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23679:6:32"},"nodeType":"YulFunctionCall","src":"23679:35:32"},"nodeType":"YulExpressionStatement","src":"23679:35:32"}]},"name":"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_int24_t_int24_t_int24_t_int24_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_int24_t_int24_t_int24_t_int24_t_uint128_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23046:9:32","type":""},{"name":"value9","nodeType":"YulTypedName","src":"23057:6:32","type":""},{"name":"value8","nodeType":"YulTypedName","src":"23065:6:32","type":""},{"name":"value7","nodeType":"YulTypedName","src":"23073:6:32","type":""},{"name":"value6","nodeType":"YulTypedName","src":"23081:6:32","type":""},{"name":"value5","nodeType":"YulTypedName","src":"23089:6:32","type":""},{"name":"value4","nodeType":"YulTypedName","src":"23097:6:32","type":""},{"name":"value3","nodeType":"YulTypedName","src":"23105:6:32","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23113:6:32","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23121:6:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23129:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23140:4:32","type":""}],"src":"22812:908:32"},{"body":{"nodeType":"YulBlock","src":"23822:87:32","statements":[{"nodeType":"YulAssignment","src":"23832:26:32","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23844:9:32"},{"kind":"number","nodeType":"YulLiteral","src":"23855:2:32","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23840:3:32"},"nodeType":"YulFunctionCall","src":"23840:18:32"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23832:4:32"}]},{"expression":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23874:9:32"},{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23889:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"23897:4:32","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"23885:3:32"},"nodeType":"YulFunctionCall","src":"23885:17:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23867:6:32"},"nodeType":"YulFunctionCall","src":"23867:36:32"},"nodeType":"YulExpressionStatement","src":"23867:36:32"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23791:9:32","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23802:6:32","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23813:4:32","type":""}],"src":"23725:184:32"},{"body":{"nodeType":"YulBlock","src":"23971:31:32","statements":[{"nodeType":"YulAssignment","src":"23973:27:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"23989:3:32","type":"","value":"224"},{"name":"value","nodeType":"YulIdentifier","src":"23994:5:32"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"23985:3:32"},"nodeType":"YulFunctionCall","src":"23985:15:32"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"23973:8:32"}]}]},"name":"shift_right_224_unsigned","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"23948:5:32","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"23958:8:32","type":""}],"src":"23914:88:32"},{"body":{"nodeType":"YulBlock","src":"24054:717:32","statements":[{"body":{"nodeType":"YulBlock","src":"24094:9:32","statements":[{"nodeType":"YulLeave","src":"24096:5:32"}]},"condition":{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"24070:14:32"},"nodeType":"YulFunctionCall","src":"24070:16:32"},{"kind":"number","nodeType":"YulLiteral","src":"24088:4:32","type":"","value":"0x44"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"24067:2:32"},"nodeType":"YulFunctionCall","src":"24067:26:32"},"nodeType":"YulIf","src":"24064:2:32"},{"expression":{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"24127:3:32"},{"name":"ret","nodeType":"YulIdentifier","src":"24132:3:32"},{"kind":"number","nodeType":"YulLiteral","src":"24137:1:32","type":"","value":"4"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"24112:14:32"},"nodeType":"YulFunctionCall","src":"24112:27:32"},"nodeType":"YulExpressionStatement","src":"24112:27:32"},{"body":{"nodeType":"YulBlock","src":"24212:9:32","statements":[{"nodeType":"YulLeave","src":"24214:5:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"name":"ret","nodeType":"YulIdentifier","src":"24192:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24186:5:32"},"nodeType":"YulFunctionCall","src":"24186:10:32"}],"functionName":{"name":"shift_right_224_unsigned","nodeType":"YulIdentifier","src":"24161:24:32"},"nodeType":"YulFunctionCall","src":"24161:36:32"},{"kind":"number","nodeType":"YulLiteral","src":"24199:10:32","type":"","value":"0x08c379a0"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24158:2:32"},"nodeType":"YulFunctionCall","src":"24158:52:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24151:6:32"},"nodeType":"YulFunctionCall","src":"24151:60:32"},"nodeType":"YulIf","src":"24148:2:32"},{"nodeType":"YulVariableDeclaration","src":"24230:21:32","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24248:2:32","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24242:5:32"},"nodeType":"YulFunctionCall","src":"24242:9:32"},"variables":[{"name":"data","nodeType":"YulTypedName","src":"24234:4:32","type":""}]},{"expression":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24275:4:32"},{"kind":"number","nodeType":"YulLiteral","src":"24281:1:32","type":"","value":"4"},{"arguments":[{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"24288:14:32"},"nodeType":"YulFunctionCall","src":"24288:16:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24310:1:32","type":"","value":"3"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24306:3:32"},"nodeType":"YulFunctionCall","src":"24306:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24284:3:32"},"nodeType":"YulFunctionCall","src":"24284:29:32"}],"functionName":{"name":"returndatacopy","nodeType":"YulIdentifier","src":"24260:14:32"},"nodeType":"YulFunctionCall","src":"24260:54:32"},"nodeType":"YulExpressionStatement","src":"24260:54:32"},{"nodeType":"YulVariableDeclaration","src":"24323:25:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24343:4:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24337:5:32"},"nodeType":"YulFunctionCall","src":"24337:11:32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24327:6:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24357:26:32","value":{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"24367:14:32"},"nodeType":"YulFunctionCall","src":"24367:16:32"},"variables":[{"name":"_1","nodeType":"YulTypedName","src":"24361:2:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24392:28:32","value":{"kind":"number","nodeType":"YulLiteral","src":"24402:18:32","type":"","value":"0xffffffffffffffff"},"variables":[{"name":"_2","nodeType":"YulTypedName","src":"24396:2:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"24478:9:32","statements":[{"nodeType":"YulLeave","src":"24480:5:32"}]},"condition":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24438:6:32"},{"name":"_2","nodeType":"YulIdentifier","src":"24446:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24435:2:32"},"nodeType":"YulFunctionCall","src":"24435:14:32"},{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24458:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"24466:4:32","type":"","value":"0x24"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24454:3:32"},"nodeType":"YulFunctionCall","src":"24454:17:32"},{"name":"_1","nodeType":"YulIdentifier","src":"24473:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24451:2:32"},"nodeType":"YulFunctionCall","src":"24451:25:32"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"24432:2:32"},"nodeType":"YulFunctionCall","src":"24432:45:32"},"nodeType":"YulIf","src":"24429:2:32"},{"nodeType":"YulVariableDeclaration","src":"24496:28:32","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24511:4:32"},{"name":"offset","nodeType":"YulIdentifier","src":"24517:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24507:3:32"},"nodeType":"YulFunctionCall","src":"24507:17:32"},"variables":[{"name":"msg","nodeType":"YulTypedName","src":"24500:3:32","type":""}]},{"nodeType":"YulVariableDeclaration","src":"24533:24:32","value":{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"24553:3:32"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"24547:5:32"},"nodeType":"YulFunctionCall","src":"24547:10:32"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"24537:6:32","type":""}]},{"body":{"nodeType":"YulBlock","src":"24584:9:32","statements":[{"nodeType":"YulLeave","src":"24586:5:32"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24572:6:32"},{"name":"_2","nodeType":"YulIdentifier","src":"24580:2:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24569:2:32"},"nodeType":"YulFunctionCall","src":"24569:14:32"},"nodeType":"YulIf","src":"24566:2:32"},{"body":{"nodeType":"YulBlock","src":"24666:9:32","statements":[{"nodeType":"YulLeave","src":"24668:5:32"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"24616:3:32"},{"name":"length","nodeType":"YulIdentifier","src":"24621:6:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24612:3:32"},"nodeType":"YulFunctionCall","src":"24612:16:32"},{"kind":"number","nodeType":"YulLiteral","src":"24630:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24608:3:32"},"nodeType":"YulFunctionCall","src":"24608:27:32"},{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"24641:4:32"},{"arguments":[],"functionName":{"name":"returndatasize","nodeType":"YulIdentifier","src":"24647:14:32"},"nodeType":"YulFunctionCall","src":"24647:16:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24637:3:32"},"nodeType":"YulFunctionCall","src":"24637:27:32"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"24605:2:32"},"nodeType":"YulFunctionCall","src":"24605:60:32"},"nodeType":"YulIf","src":"24602:2:32"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24691:2:32","type":"","value":"64"},{"arguments":[{"arguments":[{"name":"msg","nodeType":"YulIdentifier","src":"24703:3:32"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"24716:6:32"},{"kind":"number","nodeType":"YulLiteral","src":"24724:2:32","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24712:3:32"},"nodeType":"YulFunctionCall","src":"24712:15:32"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24733:2:32","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"24729:3:32"},"nodeType":"YulFunctionCall","src":"24729:7:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24708:3:32"},"nodeType":"YulFunctionCall","src":"24708:29:32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24699:3:32"},"nodeType":"YulFunctionCall","src":"24699:39:32"},{"kind":"number","nodeType":"YulLiteral","src":"24740:4:32","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24695:3:32"},"nodeType":"YulFunctionCall","src":"24695:50:32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24684:6:32"},"nodeType":"YulFunctionCall","src":"24684:62:32"},"nodeType":"YulExpressionStatement","src":"24684:62:32"},{"nodeType":"YulAssignment","src":"24755:10:32","value":{"name":"msg","nodeType":"YulIdentifier","src":"24762:3:32"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"24755:3:32"}]}]},"name":"try_decode_error_message","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"24046:3:32","type":""}],"src":"24007:764:32"},{"body":{"nodeType":"YulBlock","src":"24823:86:32","statements":[{"body":{"nodeType":"YulBlock","src":"24887:16:32","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24896:1:32","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24899:1:32","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24889:6:32"},"nodeType":"YulFunctionCall","src":"24889:12:32"},"nodeType":"YulExpressionStatement","src":"24889:12:32"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24846:5:32"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24857:5:32"},{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24872:3:32","type":"","value":"160"},{"kind":"number","nodeType":"YulLiteral","src":"24877:1:32","type":"","value":"1"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"24868:3:32"},"nodeType":"YulFunctionCall","src":"24868:11:32"},{"kind":"number","nodeType":"YulLiteral","src":"24881:1:32","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24864:3:32"},"nodeType":"YulFunctionCall","src":"24864:19:32"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"24853:3:32"},"nodeType":"YulFunctionCall","src":"24853:31:32"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24843:2:32"},"nodeType":"YulFunctionCall","src":"24843:42:32"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24836:6:32"},"nodeType":"YulFunctionCall","src":"24836:50:32"},"nodeType":"YulIf","src":"24833:2:32"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24812:5:32","type":""}],"src":"24776:133:32"}]},"contents":"{\n    { }\n    function abi_decode_t_uint16_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, 0xffff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        value1 := calldataload(add(headStart, 32))\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_t_address(value_1)\n        value2 := value_1\n    }\n    function abi_decode_tuple_t_struct$_SwapParams_$2967_calldata_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(value0, value0) }\n        value0 := headStart\n    }\n    function abi_decode_tuple_t_uint160(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint160t_int24t_uint16t_uint16t_uint16t_uint8t_bool_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5, value6\n    {\n        if slt(sub(dataEnd, headStart), 224) { revert(value4, value4) }\n        let value := mload(headStart)\n        validator_revert_t_address(value)\n        value0 := value\n        let value_1 := mload(add(headStart, 32))\n        if iszero(eq(value_1, signextend(2, value_1))) { revert(value4, value4) }\n        value1 := value_1\n        value2 := abi_decode_t_uint16_fromMemory(add(headStart, 64))\n        value3 := abi_decode_t_uint16_fromMemory(add(headStart, 96))\n        value4 := abi_decode_t_uint16_fromMemory(add(headStart, 128))\n        let value_2 := mload(add(headStart, 160))\n        if iszero(eq(value_2, and(value_2, 0xff))) { revert(value5, value5) }\n        value5 := value_2\n        let value_3 := mload(add(headStart, 192))\n        if iszero(eq(value_3, iszero(iszero(value_3)))) { revert(value6, value6) }\n        value6 := value_3\n    }\n    function abi_decode_tuple_t_uint24(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, 0xffffff))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_address_payable(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_t_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_uint256t_uint128t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 128) { revert(value2, value2) }\n        value0 := mload(headStart)\n        let value := mload(add(headStart, 32))\n        if iszero(eq(value, and(value, 0xffffffffffffffffffffffffffffffff))) { revert(value2, value2) }\n        value1 := value\n        value2 := mload(add(headStart, 64))\n        value3 := mload(add(headStart, 96))\n    }\n    function abi_decode_tuple_t_uint256t_uint256_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := mload(headStart)\n        value1 := mload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_uint256t_bytes_calldata_ptr(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value2, value2) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value2, value2) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(value2, value2) }\n        if gt(add(add(_2, length), 32), dataEnd) { revert(value2, value2) }\n        value2 := add(_2, 32)\n        value3 := length\n    }\n    function abi_encode_t_address(value, pos)\n    {\n        mstore(pos, and(value, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_t_int24(value, pos)\n    {\n        mstore(pos, signextend(2, value))\n    }\n    function abi_encode_t_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let i := end\n        for { } lt(i, length) { i := add(i, 0x20) }\n        {\n            let _1 := 0x20\n            mstore(add(add(pos, i), _1), mload(add(add(value, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(pos, length), 0x20), end)\n        }\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_t_uint24(value, pos)\n    {\n        mstore(pos, and(value, 0xffffff))\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_payable__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint24__to_t_address_t_address_t_uint24__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), and(value2, 0xffffff))\n    }\n    function abi_encode_tuple_t_contract$_INonfungiblePositionManager_$2618__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_ISwapRouter_$2775__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_contract$_IUniswapV3Factory_$1383__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_int24__to_t_int24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, signextend(2, value0))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_t_string(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_stringliteral_0c9a170025b1199db443e102b5af1d9803f66022be9833ab69fcf7c7d7ba0269__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid multiplier\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_1f51ff47eb13ce7682ffc5c6a8dbf2cc8251a06f9a3b24b891be498a64ef76b7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 24)\n        mstore(add(headStart, 64), \"Callback sender mismatch\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2b4ead52544f7c4fd94cacb66ce31ac975f3e5d5b96c986beaffd53058354f85__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Invalid deposit token\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_3e2d8b60b27a886b8a2c87748b4096ef19f4893d838ef953f696ef0721238046__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"WETH9 address not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_426d7b4d88a506bc09f6ed29efbdcc4a0863c1c503bcb8fec11e1c49071ec5b5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Withdraw amount zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_44869874655bf0887220635de03422dfc5fe91eb11e0815cf64ede1a814a8cfa__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Position already active\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47b25e07ef95bcb6ac2cf1a21d18f5ecb385543cbab4d4f6617b805d835e076e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Deposit ETH value zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_5b315838595b6f0906c99fe9714c2e147346e98cd548cbaadd82971a173fc974__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid tokenOut\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60de758d3296c7eae9cdf7e88b7058fbf54b8138dae3844858ca011a2b517bef__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Insufficient WETH\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_67f3458ed9473ec120369981a7c64321611a483e2742077207296ad8e1b75d0e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 19)\n        mstore(add(headStart, 64), \"Deposit amount zero\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_7f8125015117dd75b23ce94a1f1b95a56c6b263752737858dfbd59ad91b03334__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"No active position\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87e7f60b8ff0f06b751ad82b250a560c5b632939464075923cf9b80024908ad5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Pool doesn't exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_8add2de00d7b9d85843872167b04166d8faa6b5d9abddab527403555bd1de776__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No ETH to refund\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9296ff0c00c9773aeb7dfef423d0c5484d831f800b943533b0cf1300a3d8e8df__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Invalid recipient address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_96b6969c794b38e9db79973f913a03fb7261caa659882d184f77b4014bec49da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid tokenIn\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_a6664b97aef19c137d44ec81dfc0c0cc28a2c3470357b125208345a2c048425d__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid recipient\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b39775a60751529ff5cba1ab02f690a6255c8af3b19f825012d2298820e7f489__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"WETH9 not set\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_bc06614a3aa13e2413c6c9cffac61a3d079d7aa40762830e5e884fc0c8bcabd1__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Insufficient WETH balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f8dce0d4a3459471bfd5ca698b526cb410bac112be697e35103fb7328ff5234b_t_uint24__to_t_string_memory_ptr_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 64)\n        mstore(add(headStart, 64), 20)\n        mstore(add(headStart, 96), \"rangeWidthMultiplier\")\n        tail := add(headStart, 128)\n        mstore(add(headStart, 0x20), and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_struct$_CollectParams_$2601_memory_ptr__to_t_struct$_CollectParams_$2601_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), sub(shl(160, 1), 1)))\n        let memberValue0 := mload(add(value0, 0x40))\n        let _1 := 0xffffffffffffffffffffffffffffffff\n        mstore(add(headStart, 0x40), and(memberValue0, _1))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n    }\n    function abi_encode_tuple_t_struct$_DecreaseLiquidityParams_$2582_memory_ptr__to_t_struct$_DecreaseLiquidityParams_$2582_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, mload(value0))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 0x40), mload(add(value0, 0x40)))\n        mstore(add(headStart, 0x60), mload(add(value0, 0x60)))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n    }\n    function abi_encode_tuple_t_struct$_ExactInputSingleParams_$2703_memory_ptr__to_t_struct$_ExactInputSingleParams_$2703_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(mload(value0), _1))\n        mstore(add(headStart, 0x20), and(mload(add(value0, 0x20)), _1))\n        mstore(add(headStart, 0x40), and(mload(add(value0, 0x40)), 0xffffff))\n        mstore(add(headStart, 0x60), and(mload(add(value0, 0x60)), _1))\n        mstore(add(headStart, 0x80), mload(add(value0, 0x80)))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), and(mload(add(value0, 0xe0)), _1))\n    }\n    function abi_encode_tuple_t_struct$_MintParams_$2532_memory_ptr__to_t_struct$_MintParams_$2532_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 352)\n        abi_encode_t_address(mload(value0), headStart)\n        let memberValue0 := mload(add(value0, 0x20))\n        abi_encode_t_address(memberValue0, add(headStart, 0x20))\n        let memberValue0_1 := mload(add(value0, 0x40))\n        abi_encode_t_uint24(memberValue0_1, add(headStart, 0x40))\n        let memberValue0_2 := mload(add(value0, 0x60))\n        abi_encode_t_int24(memberValue0_2, add(headStart, 0x60))\n        let memberValue0_3 := mload(add(value0, 0x80))\n        abi_encode_t_int24(memberValue0_3, add(headStart, 0x80))\n        mstore(add(headStart, 0xa0), mload(add(value0, 0xa0)))\n        mstore(add(headStart, 0xc0), mload(add(value0, 0xc0)))\n        mstore(add(headStart, 0xe0), mload(add(value0, 0xe0)))\n        let _1 := 0x0100\n        mstore(add(headStart, _1), mload(add(value0, _1)))\n        let _2 := 0x0120\n        let memberValue0_4 := mload(add(value0, _2))\n        abi_encode_t_address(memberValue0_4, add(headStart, _2))\n        let _3 := 0x0140\n        mstore(add(headStart, _3), mload(add(value0, _3)))\n    }\n    function abi_encode_tuple_t_uint24__to_t_uint24__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffff))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_int24_t_int24_t_uint128__to_t_uint256_t_int24_t_int24_t_uint128__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 128)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), signextend(2, value1))\n        mstore(add(headStart, 64), signextend(2, value2))\n        mstore(add(headStart, 96), and(value3, 0xffffffffffffffffffffffffffffffff))\n    }\n    function abi_encode_tuple_t_uint256_t_uint128_t_int24_t_int24_t_bool__to_t_uint256_t_uint128_t_int24_t_int24_t_bool__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 160)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 64), signextend(2, value2))\n        mstore(add(headStart, 96), signextend(2, value3))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_int24_t_int24_t_bool_t_uint256__to_t_uint256_t_uint256_t_int24_t_int24_t_bool_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 192)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), signextend(2, value2))\n        mstore(add(headStart, 96), signextend(2, value3))\n        mstore(add(headStart, 128), iszero(iszero(value4)))\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_string_memory_ptr__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        tail := abi_encode_t_string(value2, add(headStart, 96))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_34cbab512ecc1bb9723527c06813bbc156590fb1ae4cb863d2cf2d7cc2530654__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), 18)\n        mstore(add(headStart, 128), \"Unknown mint error\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_stringliteral_ba3f67c9f8db8f9ad7578a5b5bfe72d10e3ead8623bd80de22ff704bc271202b__to_t_uint256_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 96)\n        mstore(add(headStart, 96), 21)\n        mstore(add(headStart, 128), \"Zero liquidity minted\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_int24_t_int24_t_int24_t_int24_t_uint128_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_int24_t_int24_t_int24_t_int24_t_uint128_t_uint256_t_uint256__fromStack_reversed(headStart, value9, value8, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 320)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), signextend(2, value3))\n        mstore(add(headStart, 128), signextend(2, value4))\n        mstore(add(headStart, 160), signextend(2, value5))\n        mstore(add(headStart, 192), signextend(2, value6))\n        mstore(add(headStart, 224), and(value7, 0xffffffffffffffffffffffffffffffff))\n        mstore(add(headStart, 256), value8)\n        mstore(add(headStart, 288), value9)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function shift_right_224_unsigned(value) -> newValue\n    { newValue := shr(224, value) }\n    function try_decode_error_message() -> ret\n    {\n        if lt(returndatasize(), 0x44) { leave }\n        returndatacopy(ret, ret, 4)\n        if iszero(eq(shift_right_224_unsigned(mload(ret)), 0x08c379a0)) { leave }\n        let data := mload(64)\n        returndatacopy(data, 4, add(returndatasize(), not(3)))\n        let offset := mload(data)\n        let _1 := returndatasize()\n        let _2 := 0xffffffffffffffff\n        if or(gt(offset, _2), gt(add(offset, 0x24), _1)) { leave }\n        let msg := add(data, offset)\n        let length := mload(msg)\n        if gt(length, _2) { leave }\n        if gt(add(add(msg, length), 0x20), add(data, returndatasize())) { leave }\n        mstore(64, add(add(msg, and(add(length, 31), not(31))), 0x20))\n        ret := msg\n    }\n    function validator_revert_t_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n}","id":32,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{"2920":[{"length":32,"start":6326},{"length":32,"start":7310},{"length":32,"start":9078}],"2922":[{"length":32,"start":6202},{"length":32,"start":6443},{"length":32,"start":12830},{"length":32,"start":13112},{"length":32,"start":13368},{"length":32,"start":13873},{"length":32,"start":14520}],"2924":[{"length":32,"start":5458},{"length":32,"start":5701},{"length":32,"start":5972},{"length":32,"start":6290}],"2926":[{"length":32,"start":1290},{"length":32,"start":1818},{"length":32,"start":3990},{"length":32,"start":5087},{"length":32,"start":5252},{"length":32,"start":6523},{"length":32,"start":7355},{"length":32,"start":8059},{"length":32,"start":9125},{"length":32,"start":10416},{"length":32,"start":13665}],"2928":[{"length":32,"start":1877},{"length":32,"start":4146},{"length":32,"start":5158},{"length":32,"start":5326},{"length":32,"start":6398},{"length":32,"start":6581},{"length":32,"start":7389},{"length":32,"start":8239},{"length":32,"start":9158},{"length":32,"start":10555},{"length":32,"start":13712}],"2930":[{"length":32,"start":6254},{"length":32,"start":9534},{"length":32,"start":9653},{"length":32,"start":9722},{"length":32,"start":9826},{"length":32,"start":9946},{"length":32,"start":10015}],"2932":[{"length":32,"start":1254},{"length":32,"start":9569},{"length":32,"start":9617},{"length":32,"start":9758},{"length":32,"start":9862},{"length":32,"start":9910},{"length":32,"start":10051}],"2934":[{"length":32,"start":6675},{"length":32,"start":7423},{"length":32,"start":9191},{"length":32,"start":13759}],"2936":[{"length":32,"start":6362},{"length":32,"start":10168},{"length":32,"start":10229},{"length":32,"start":10262}],"2938":[{"length":32,"start":1937},{"length":32,"start":1997},{"length":32,"start":2379},{"length":32,"start":2542},{"length":32,"start":2728},{"length":32,"start":2898},{"length":32,"start":4381},{"length":32,"start":4513},{"length":32,"start":4703},{"length":32,"start":4868},{"length":32,"start":7723},{"length":32,"start":7825},{"length":32,"start":7951},{"length":32,"start":8376},{"length":32,"start":8450}]},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C6 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x791B98BC GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xD3487997 GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x478 JUMPI DUP1 PUSH4 0xF586C6D9 EQ PUSH2 0x498 JUMPI DUP1 PUSH4 0xF6326FB3 EQ PUSH2 0x4AD JUMPI DUP1 PUSH4 0xFFD2A7D3 EQ PUSH2 0x4B5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xD3487997 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0xD534D636 EQ PUSH2 0x43B JUMPI DUP1 PUSH4 0xDDCA3F43 EQ PUSH2 0x450 JUMPI DUP1 PUSH4 0xDF2AB5BB EQ PUSH2 0x465 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0xC31C9C07 GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xC31C9C07 EQ PUSH2 0x3BA JUMPI DUP1 PUSH4 0xC45A0155 EQ PUSH2 0x3CF JUMPI DUP1 PUSH4 0xD0C93A7C EQ PUSH2 0x3E4 JUMPI DUP1 PUSH4 0xD21220A7 EQ PUSH2 0x406 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x791B98BC EQ PUSH2 0x37B JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x390 JUMPI DUP1 PUSH4 0xB31AC6E2 EQ PUSH2 0x3A5 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3CCDBB28 GT PUSH2 0x164 JUMPI DUP1 PUSH4 0x49404B7C GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x49404B7C EQ PUSH2 0x311 JUMPI DUP1 PUSH4 0x4AA4A4FC EQ PUSH2 0x324 JUMPI DUP1 PUSH4 0x516606EB EQ PUSH2 0x339 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x366 JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x3CCDBB28 EQ PUSH2 0x2AB JUMPI DUP1 PUSH4 0x41675B05 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0x479C2E76 EQ PUSH2 0x2EB JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x12210E8A GT PUSH2 0x1A0 JUMPI DUP1 PUSH4 0x12210E8A EQ PUSH2 0x241 JUMPI DUP1 PUSH4 0x1EE0B02E EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x338B5DEA EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0x36118B52 EQ PUSH2 0x28B JUMPI PUSH2 0x1CD JUMP JUMPDEST DUP1 PUSH4 0x1D31E7C EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0xB77884D EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0xDFE1681 EQ PUSH2 0x21F JUMPI PUSH2 0x1CD JUMP JUMPDEST CALLDATASIZE PUSH2 0x1CD JUMPI STOP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x4D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x4733 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x209 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x48E9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x508 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST PUSH2 0x249 PUSH2 0x52C JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x257 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x266 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FAB JUMP JUMPDEST PUSH2 0x584 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x277 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x286 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E8E JUMP JUMPDEST PUSH2 0x66B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x297 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x402D JUMP JUMPDEST PUSH2 0x89C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EB9 JUMP JUMPDEST PUSH2 0xBA9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2D7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x3FCE JUMP JUMPDEST PUSH2 0xDA0 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x10E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4774 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x31F CALLDATASIZE PUSH1 0x4 PUSH2 0x3FFE JUMP JUMPDEST PUSH2 0x111B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1302 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x345 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x359 PUSH2 0x354 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EFA JUMP JUMPDEST PUSH2 0x1326 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x178C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x387 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1838 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x185C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x212 PUSH2 0x186C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1890 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x18B4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x3F9 PUSH2 0x18D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x41C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x412 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x18FC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x427 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x436 CALLDATASIZE PUSH1 0x4 PUSH2 0x40AA JUMP JUMPDEST PUSH2 0x1920 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x447 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x300 PUSH2 0x19DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E7 PUSH2 0x1A11 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x473 CALLDATASIZE PUSH1 0x4 PUSH2 0x3EB9 JUMP JUMPDEST PUSH2 0x1A35 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x484 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x249 PUSH2 0x493 CALLDATASIZE PUSH1 0x4 PUSH2 0x3E56 JUMP JUMPDEST PUSH2 0x1B72 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x234 PUSH2 0x1C74 JUMP JUMPDEST PUSH2 0x249 PUSH2 0x1D7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4CA PUSH2 0x1F74 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x487D JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH3 0xFFFFFF AND DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SELFBALANCE GT PUSH2 0x555 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4448 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 SELFBALANCE DUP1 ISZERO PUSH2 0x8FC MUL SWAP2 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x581 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x58C PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x59D PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x5E6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH3 0xFFFFFF AND GT DUP1 ISZERO PUSH2 0x601 JUMPI POP PUSH1 0x64 DUP2 PUSH3 0xFFFFFF AND GT ISZERO JUMPDEST PUSH2 0x61D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x41EA JUMP JUMPDEST PUSH1 0x4 DUP1 SLOAD PUSH3 0xFFFFFF NOT AND PUSH3 0xFFFFFF DUP4 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH32 0x22A7B700C7155AB4252833EEE76474BC7531E6598483AE76EB278DF86F084C0C SWAP1 PUSH2 0x660 SWAP1 DUP4 SWAP1 PUSH2 0x455B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x6B1 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x6BE PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x6CF PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x718 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x789 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST DUP1 PUSH2 0x7F8 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 ISZERO PUSH2 0x7F8 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO ISZERO JUMPDEST PUSH2 0x814 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x424D JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x834 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x43C3 JUMP JUMPDEST PUSH2 0x849 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND CALLER ADDRESS DUP5 PUSH2 0x22C3 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 DUP4 PUSH1 0x40 MLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x8E2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x8EF PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x900 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x949 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x98F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x427C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x9B5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x9D5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x42AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xA23 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA3B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA4F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA73 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST LT ISZERO PUSH2 0xA91 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4524 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0xADD SWAP1 DUP6 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAF7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB0B JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP3 POP DUP5 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP5 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xB45 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP5 PUSH1 0x40 MLOAD PUSH2 0x88C SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xBEF JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xBFC PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xC0D PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xC56 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xC7C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4472 JUMP JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0xC9C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x42AB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xCCA SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xCE2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xCF6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD1A SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST LT ISZERO PUSH2 0xD38 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4310 JUMP JUMPDEST PUSH2 0xD4C PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP3 DUP5 PUSH2 0x231D JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xD1C19FBCD4551A5EDFB66D43D2E337C04837AFDA3482B42BDF569A8FCCDAE5FB DUP5 PUSH1 0x40 MLOAD PUSH2 0xD8F SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH1 0x1 DUP1 SSTORE POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0xDE6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0xDF3 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xE04 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE4D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 GAS SWAP1 POP PUSH1 0x0 DUP1 DUP1 PUSH2 0xE5E PUSH2 0x236F JUMP JUMPDEST SWAP2 POP SWAP2 POP PUSH1 0x0 PUSH2 0xE6D DUP4 PUSH2 0x251D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0xE7A DUP8 PUSH2 0x265D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP1 PUSH2 0xE88 DUP4 PUSH2 0x27A9 JUMP JUMPDEST PUSH1 0x3 SLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO DUP1 PUSH2 0xEB8 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x2 DUP4 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x80 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND EQ ISZERO JUMPDEST DUP1 PUSH2 0xED5 JUMPI POP PUSH1 0x3 SLOAD PUSH1 0x2 DUP3 DUP2 SIGNEXTEND PUSH1 0x1 PUSH1 0x98 SHL SWAP1 SWAP3 DIV DUP2 SIGNEXTEND SWAP1 SIGNEXTEND EQ ISZERO JUMPDEST ISZERO PUSH2 0xEE9 JUMPI PUSH2 0xEE4 DUP3 DUP3 PUSH2 0x287C JUMP JUMPDEST PUSH1 0x1 SWAP7 POP JUMPDEST PUSH32 0x74E6B99361B503F9A408F847F4767AF1B660A31AADE7F5E8B2A3FF487D35E854 DUP5 DUP11 DUP8 DUP7 DUP12 GAS DUP15 SUB PUSH1 0x40 MLOAD PUSH2 0xF24 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x3 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH32 0x9D590540B9DF5920F0D9D5D6702F02AF98857DBEE3BC9D3E2D5273D67D533C18 SWAP2 TIMESTAMP SWAP2 DUP8 SWAP2 DUP14 SWAP2 DUP11 SWAP2 DUP10 SWAP2 PUSH1 0x1 PUSH1 0x80 SHL DUP3 DIV PUSH1 0x2 SWAP1 DUP2 SIGNEXTEND SWAP3 PUSH1 0x1 PUSH1 0x98 SHL DUP2 DIV SWAP1 SWAP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0xFCB SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xFE3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xFF7 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x101B SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1067 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x107F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1093 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x10B7 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10CD SWAP11 SWAP10 SWAP9 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4893 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP PUSH1 0x1 DUP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND SWAP3 PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV DUP2 SIGNEXTEND SWAP3 PUSH1 0x1 PUSH1 0x98 SHL DUP2 DIV SWAP1 SWAP2 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1187 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x11D6 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x11EE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1202 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1226 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1248 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4398 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x2E1A7D4D PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x2E1A7D4D SWAP1 PUSH2 0x1294 SWAP1 DUP5 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x12AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x12C2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH1 0x0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x12FC JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x136E JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x137B PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x138C PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x13D5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x140C PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x145E JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x1453 PUSH1 0x20 DUP5 ADD DUP5 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x147A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44A9 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x14B4 PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ DUP1 PUSH2 0x1509 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND PUSH2 0x14FE PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x1525 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x436E JUMP JUMPDEST PUSH2 0x154D CALLER ADDRESS PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH2 0x153C PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 SWAP1 PUSH2 0x22C3 JUMP JUMPDEST PUSH2 0x1593 PUSH32 0x0 PUSH1 0x60 DUP5 ADD CALLDATALOAD PUSH2 0x1583 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x218E JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x0 SWAP1 DUP1 PUSH2 0x15B0 PUSH1 0x20 DUP7 ADD DUP7 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x15D1 SWAP2 SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x15EF PUSH1 0x60 DUP7 ADD PUSH1 0x40 DUP8 ADD PUSH2 0x3FAB JUMP JUMPDEST PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x80 ADD CALLDATALOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0xA0 ADD PUSH1 0x20 DUP2 ADD SWAP1 PUSH2 0x1635 SWAP2 SWAP1 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE POP SWAP1 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x414BF389 DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x168F SWAP2 SWAP1 PUSH2 0x461C JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x16A9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x16BD JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x16E1 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP PUSH2 0x16F3 PUSH1 0x40 DUP5 ADD PUSH1 0x20 DUP6 ADD PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1709 PUSH1 0x20 DUP6 ADD DUP6 PUSH2 0x3E56 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xA078C4190ABE07940190EFFC1846BE0CCF03AD6007BC9E93F9697D0B460BEFBB DUP6 PUSH1 0x60 ADD CALLDATALOAD DUP6 PUSH1 0x40 MLOAD PUSH2 0x1747 SWAP3 SWAP2 SWAP1 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1782 PUSH32 0x0 PUSH1 0x0 PUSH2 0x1583 PUSH1 0x20 DUP8 ADD DUP8 PUSH2 0x3E56 JUMP JUMPDEST POP PUSH1 0x1 DUP1 SSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1794 PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x17A5 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x17EE JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND JUMPDEST SWAP1 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1968 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4216 JUMP JUMPDEST DUP4 ISZERO PUSH2 0x19A2 JUMPI PUSH2 0x19A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP7 PUSH2 0x231D JUMP JUMPDEST DUP3 ISZERO PUSH2 0x12FC JUMPI PUSH2 0x12FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND CALLER DUP6 PUSH2 0x231D JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 SLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP3 AND SWAP2 PUSH1 0x1 PUSH1 0x80 SHL DUP2 DIV DUP3 SIGNEXTEND SWAP2 PUSH1 0x1 PUSH1 0x98 SHL DUP3 DIV SWAP1 SIGNEXTEND SWAP1 PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP6 JUMP JUMPDEST PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH2 0x1A3D PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1A4E PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1A97 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1ABD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x44D2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x1AEC SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1B04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1B18 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1B3C SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x1B5E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x4310 JUMP JUMPDEST PUSH2 0x12FC PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND DUP4 DUP4 PUSH2 0x231D JUMP JUMPDEST PUSH2 0x1B7A PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1B8B PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1BD4 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1C19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49D8 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xB4C7741 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x1698EE82 SWAP1 PUSH2 0x1D27 SWAP1 PUSH32 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH32 0x0 SWAP1 PUSH1 0x4 ADD PUSH2 0x41A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D3F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1D53 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D77 SWAP2 SWAP1 PUSH2 0x3E72 JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x1 SLOAD EQ ISZERO PUSH2 0x1DC2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x49B8 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x1 SSTORE PUSH2 0x1DCF PUSH2 0x22BF JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1DE0 PUSH2 0x185C JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1E29 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x4A45 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1E6F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x427C JUMP JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0x1E8F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x433E JUMP JUMPDEST PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0xD0E30DB0 CALLVALUE PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1EEA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1EFE JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0x8752A472E571A816AEA92EEC8DAE9BAF628E840F4929FBCC2D155E6233FF68A7 CALLVALUE PUSH1 0x40 MLOAD PUSH2 0x1F66 SWAP2 SWAP1 PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH1 0x1 DUP1 SSTORE JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FC5 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1FDD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x1FF1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2015 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE SWAP1 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2064 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x207C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2090 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x20B4 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP2 POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x20EB JUMPI PUSH1 0x0 PUSH2 0x2187 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x2137 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x214F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2163 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2187 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP SWAP1 SWAP2 SWAP3 JUMP JUMPDEST DUP1 ISZERO DUP1 PUSH2 0x2214 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 DUP2 AND PUSH1 0x24 DUP4 ADD MSTORE SWAP2 MLOAD SWAP2 DUP6 AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x21E6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x21FA JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2210 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD ISZERO JUMPDEST PUSH2 0x224F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x36 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A8F PUSH1 0x36 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x95EA7B3 PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x22A1 SWAP1 DUP5 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x22B5 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x2AD8 JUMP JUMPDEST SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP7 AND PUSH1 0x24 DUP4 ADD MSTORE DUP5 AND PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x84 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x23B872DD PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x12FC SWAP1 DUP6 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x22A1 SWAP1 DUP5 SWAP1 PUSH2 0x2A27 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x1698EE82 PUSH32 0x0 PUSH32 0x0 PUSH32 0x0 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2424 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41A1 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x243C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2450 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2474 SWAP2 SWAP1 PUSH2 0x3E72 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x249C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x441C JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x3850C7BD PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0xE0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x24E9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x250D SWAP2 SWAP1 PUSH2 0x3F0B JUMP JUMPDEST POP SWAP5 SWAP9 SWAP4 SWAP8 POP SWAP3 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x2533 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND DUP1 PUSH2 0x2C33 JUMP JUMPDEST SWAP1 POP PUSH1 0xC0 DUP2 SWAP1 SHR PUSH1 0xFF PUSH32 0x0 DUP2 AND PUSH32 0x0 SWAP1 SWAP2 AND LT PUSH2 0x25F1 JUMPI PUSH1 0x0 PUSH2 0x25DA PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x25E9 DUP3 DUP3 PUSH2 0x2C33 JUMP JUMPDEST SWAP4 POP POP PUSH2 0x2656 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2643 PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x2652 DUP3 DUP3 PUSH2 0x2CF2 JUMP JUMPDEST SWAP4 POP POP JUMPDEST POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0xFF AND PUSH32 0x0 PUSH1 0xFF AND LT PUSH2 0x2716 JUMPI PUSH1 0x0 PUSH2 0x26FF PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x270E DUP5 DUP3 PUSH2 0x2CF2 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x277B JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2768 PUSH1 0xFF PUSH32 0x0 DUP2 AND SWAP1 PUSH32 0x0 AND PUSH2 0x2C95 JUMP JUMPDEST PUSH1 0xA EXP SWAP1 POP PUSH2 0x2777 DUP5 DUP3 PUSH2 0x2C33 JUMP JUMPDEST SWAP2 POP POP JUMPDEST PUSH1 0x0 PUSH2 0x2794 PUSH1 0x1 PUSH1 0x60 SHL PUSH2 0x278E DUP5 PUSH2 0x2D59 JUMP JUMPDEST SWAP1 PUSH2 0x2C33 JUMP JUMPDEST SWAP1 POP PUSH2 0x279F DUP2 PUSH2 0x2E41 JUMP JUMPDEST SWAP3 POP POP POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 PUSH3 0xFFFFFF AND PUSH32 0x0 SWAP1 DUP2 MUL SWAP1 DUP2 SWAP1 PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP8 SWAP1 SIGNEXTEND DUP2 PUSH2 0x27ED JUMPI INVALID JUMPDEST SDIV MUL SUB SWAP3 POP DUP1 PUSH32 0x0 PUSH32 0x0 PUSH1 0x2 SIGNEXTEND DUP7 PUSH1 0x2 SIGNEXTEND DUP2 PUSH2 0x2843 JUMPI INVALID JUMPDEST SDIV MUL ADD SWAP2 POP PUSH3 0xD89E7 NOT PUSH1 0x2 DUP5 SWAP1 SIGNEXTEND SLT ISZERO PUSH2 0x2860 JUMPI PUSH3 0xD89E7 NOT SWAP3 POP JUMPDEST PUSH3 0xD89E8 PUSH1 0x2 DUP4 SWAP1 SIGNEXTEND SGT ISZERO PUSH2 0x2876 JUMPI PUSH3 0xD89E8 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x2896 JUMPI PUSH2 0x2896 PUSH2 0x3160 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x70A08231 SWAP1 PUSH2 0x28E5 SWAP1 ADDRESS SWAP1 PUSH1 0x4 ADD PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x28FD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2911 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2935 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2985 SWAP2 SWAP1 PUSH2 0x418D JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x299D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x29B1 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x29D5 SWAP2 SWAP1 PUSH2 0x3FE6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 GT DUP1 PUSH2 0x29E6 JUMPI POP PUSH1 0x0 DUP2 GT JUMPDEST ISZERO PUSH2 0x29FC JUMPI PUSH2 0x29F7 DUP5 DUP5 DUP5 DUP5 PUSH2 0x3527 JUMP JUMPDEST PUSH2 0x12FC JUMP JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 PUSH1 0x2 SSTORE PUSH23 0xFF000000000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A7C DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x22A6 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x22A1 JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2A9B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x22A1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A65 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x2B19 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x49FE PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x2B22 DUP6 PUSH2 0x3963 JUMP JUMPDEST PUSH2 0x2B73 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x2BB1 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x2B92 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x2C13 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x2C18 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x2C28 DUP3 DUP3 DUP7 PUSH2 0x3969 JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x2C42 JUMPI POP PUSH1 0x0 PUSH2 0x2C8F JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0x2C4F JUMPI INVALID JUMPDEST DIV EQ PUSH2 0x2C8C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x4A24 PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 GT ISZERO PUSH2 0x2CEC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1E PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A207375627472616374696F6E206F766572666C6F770000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST POP SWAP1 SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 GT PUSH2 0x2D48 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1A PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206469766973696F6E206279207A65726F000000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST DUP2 DUP4 DUP2 PUSH2 0x2D51 JUMPI INVALID JUMPDEST DIV SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x2D68 JUMPI POP PUSH1 0x0 PUSH2 0x27A4 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0x2D75 DUP5 PUSH2 0x3A0D JUMP JUMPDEST PUSH1 0x1 SWAP2 SHR SHL SWAP1 POP DUP1 PUSH2 0x2D85 JUMPI POP PUSH1 0x1 JUMPDEST PUSH1 0x0 PUSH2 0x2DA6 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2D99 DUP8 DUP7 PUSH2 0x2CF2 JUMP JUMPDEST DUP6 SWAP1 PUSH2 0x3AB8 JUMP JUMPDEST SWAP1 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DC1 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST DUP5 SWAP1 PUSH2 0x3AB8 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DD5 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DE9 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2DFD PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E11 PUSH1 0x2 PUSH2 0x2DA0 PUSH2 0x2DBA DUP8 DUP6 PUSH2 0x2CF2 JUMP JUMPDEST SWAP1 POP PUSH2 0x2E1D DUP5 DUP3 PUSH2 0x2CF2 JUMP JUMPDEST DUP2 GT ISZERO PUSH2 0x2E38 JUMPI PUSH2 0x2E2F DUP2 PUSH1 0x1 PUSH2 0x2C95 JUMP JUMPDEST SWAP3 POP POP POP PUSH2 0x27A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x27A4 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH5 0x1000276A3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT DUP1 ISZERO SWAP1 PUSH2 0x2E7D JUMPI POP PUSH20 0xFFFD8963EFD1FC6A506488495D951D5263988D26 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND LT JUMPDEST PUSH2 0x2EB2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x29 PUSH1 0xF9 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH5 0x100000000 PUSH1 0x1 PUSH1 0xC0 SHL SUB PUSH1 0x20 DUP4 SWAP1 SHL AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT PUSH1 0x7 SHL DUP2 DUP2 SHR PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT PUSH1 0x6 SHL SWAP1 DUP2 SHR PUSH4 0xFFFFFFFF DUP2 GT PUSH1 0x5 SHL SWAP1 DUP2 SHR PUSH2 0xFFFF DUP2 GT PUSH1 0x4 SHL SWAP1 DUP2 SHR PUSH1 0xFF DUP2 GT PUSH1 0x3 SWAP1 DUP2 SHL SWAP2 DUP3 SHR PUSH1 0xF DUP2 GT PUSH1 0x2 SHL SWAP1 DUP2 SHR SWAP2 DUP3 GT PUSH1 0x1 SWAP1 DUP2 SHL SWAP3 DUP4 SHR SWAP8 SWAP1 DUP9 GT SWAP7 OR SWAP1 SWAP5 OR SWAP1 SWAP3 OR OR SWAP1 SWAP2 OR OR OR PUSH1 0x80 DUP2 LT PUSH2 0x2F46 JUMPI PUSH1 0x7F DUP2 SUB DUP4 SWAP1 SHR SWAP2 POP PUSH2 0x2F50 JUMP JUMPDEST DUP1 PUSH1 0x7F SUB DUP4 SWAP1 SHL SWAP2 POP JUMPDEST SWAP1 DUP1 MUL PUSH1 0x7F DUP2 DUP2 SHR PUSH1 0xFF DUP4 DUP2 SHR SWAP2 SWAP1 SWAP2 SHR DUP1 MUL DUP1 DUP4 SHR DUP2 DUP4 SHR SHR DUP1 MUL DUP1 DUP5 SHR DUP2 DUP5 SHR SHR DUP1 MUL DUP1 DUP6 SHR DUP2 DUP6 SHR SHR DUP1 MUL DUP1 DUP7 SHR DUP2 DUP7 SHR SHR DUP1 MUL DUP1 DUP8 SHR DUP2 DUP8 SHR SHR DUP1 MUL DUP1 DUP9 SHR DUP2 DUP9 SHR SHR DUP1 MUL DUP1 DUP10 SHR DUP2 DUP10 SHR SHR DUP1 MUL DUP1 DUP11 SHR DUP2 DUP11 SHR SHR DUP1 MUL DUP1 DUP12 SHR DUP2 DUP12 SHR SHR DUP1 MUL DUP1 DUP13 SHR DUP2 DUP13 SHR SHR DUP1 MUL DUP1 DUP14 SHR DUP2 DUP14 SHR SHR DUP1 MUL DUP1 DUP15 SHR SWAP13 DUP2 SWAP1 SHR SWAP13 SWAP1 SWAP13 SHR DUP1 MUL SWAP13 DUP14 SWAP1 SHR SWAP15 SWAP14 PUSH1 0x7F NOT DUP16 ADD PUSH1 0x40 SHL PUSH1 0xC0 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x8000000000000000 AND OR PUSH1 0xC1 SWAP12 SWAP1 SWAP12 SHR PUSH8 0x4000000000000000 AND SWAP11 SWAP1 SWAP11 OR PUSH1 0xC2 SWAP10 SWAP1 SWAP10 SHR PUSH8 0x2000000000000000 AND SWAP9 SWAP1 SWAP9 OR PUSH1 0xC3 SWAP8 SWAP1 SWAP8 SHR PUSH8 0x1000000000000000 AND SWAP7 SWAP1 SWAP7 OR PUSH1 0xC4 SWAP6 SWAP1 SWAP6 SHR PUSH8 0x800000000000000 AND SWAP5 SWAP1 SWAP5 OR PUSH1 0xC5 SWAP4 SWAP1 SWAP4 SHR PUSH8 0x400000000000000 AND SWAP3 SWAP1 SWAP3 OR PUSH1 0xC6 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x200000000000000 AND OR PUSH1 0xC7 SWAP2 SWAP1 SWAP2 SHR PUSH8 0x100000000000000 AND OR PUSH1 0xC8 SWAP2 SWAP1 SWAP2 SHR PUSH7 0x80000000000000 AND OR PUSH1 0xC9 SWAP2 SWAP1 SWAP2 SHR PUSH7 0x40000000000000 AND OR PUSH1 0xCA SWAP2 SWAP1 SWAP2 SHR PUSH7 0x20000000000000 AND OR PUSH1 0xCB SWAP2 SWAP1 SWAP2 SHR PUSH7 0x10000000000000 AND OR PUSH1 0xCC SWAP2 SWAP1 SWAP2 SHR PUSH7 0x8000000000000 AND OR PUSH1 0xCD SWAP2 SWAP1 SWAP2 SHR PUSH7 0x4000000000000 AND OR PUSH10 0x3627A301D71055774C85 DUP2 MUL PUSH16 0x28F6481AB7F045A5AF012A19D003AA9 NOT DUP2 ADD PUSH1 0x80 SWAP1 DUP2 SAR SWAP1 PUSH16 0xDB2DF09E81959A81455E260799A0632F DUP4 ADD SWAP1 SAR PUSH1 0x2 DUP2 DUP2 SIGNEXTEND SWAP1 DUP4 SWAP1 SIGNEXTEND EQ PUSH2 0x3151 JUMPI DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3135 DUP3 PUSH2 0x3B12 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GT ISZERO PUSH2 0x314A JUMPI DUP2 PUSH2 0x314C JUMP JUMPDEST DUP1 JUMPDEST PUSH2 0x3153 JUMP JUMPDEST DUP2 JUMPDEST SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x317A JUMPI POP PUSH1 0x2 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x3196 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x43F0 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP4 DUP5 SWAP1 SSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xB8 SHL SUB NOT DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP2 ADD SWAP1 SWAP2 MSTORE DUP4 DUP2 MSTORE SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 SWAP2 AND SWAP2 DUP4 SWAP2 SWAP1 DUP2 SWAP1 DUP5 ISZERO PUSH2 0x32F2 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP8 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x0 DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x80 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0x624E65F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xC49CCBE SWAP2 PUSH2 0x3252 SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x45D9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x326B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x329B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x3298 SWAP2 DUP2 ADD SWAP1 PUSH2 0x4087 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x32E6 JUMPI PUSH2 0x32A7 PUSH2 0x48FD JUMP JUMPDEST DUP1 PUSH2 0x32B2 JUMPI POP PUSH2 0x32B9 JUMP JUMPDEST SWAP1 POP PUSH2 0x32E1 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0xF DUP2 MSTORE PUSH15 0x111958DC99585CD94819985A5B1959 PUSH1 0x8A SHL PUSH1 0x20 DUP3 ADD MSTORE JUMPDEST PUSH2 0x32ED JUMP JUMPDEST POP POP PUSH1 0x1 SWAP3 POP JUMPDEST PUSH2 0x32F7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x80 DUP2 ADD DUP3 MSTORE DUP6 DUP2 MSTORE ADDRESS PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 DUP4 ADD DUP2 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD PUSH4 0xFC6F7865 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x0 SWAP2 DUP3 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 PUSH4 0xFC6F7865 SWAP2 PUSH2 0x336C SWAP2 SWAP1 PUSH1 0x4 ADD PUSH2 0x4596 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3385 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x33B5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x33B2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x4087 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x3411 JUMPI PUSH2 0x33C1 PUSH2 0x48FD JUMP JUMPDEST DUP1 PUSH2 0x33CC JUMPI POP PUSH2 0x33DC JUMP JUMPDEST DUP4 MLOAD PUSH2 0x33D6 JUMPI DUP1 SWAP4 POP JUMPDEST POP PUSH2 0x340C JUMP JUMPDEST DUP3 MLOAD PUSH2 0x340C JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xE DUP2 MSTORE PUSH1 0x20 ADD PUSH14 0x10DBDB1B1958DD0819985A5B1959 PUSH1 0x92 SHL DUP2 MSTORE POP SWAP3 POP JUMPDEST PUSH2 0x341B JUMP JUMPDEST PUSH1 0x1 SWAP6 POP SWAP1 SWAP3 POP SWAP1 POP JUMPDEST DUP5 ISZERO PUSH2 0x349A JUMPI PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH2 0x346D SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3487 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3498 JUMPI POP PUSH1 0x1 JUMPDEST POP JUMPDEST DUP5 ISZERO DUP1 PUSH2 0x34A5 JUMPI POP DUP4 ISZERO JUMPDEST ISZERO PUSH2 0x34E3 JUMPI DUP6 PUSH32 0xE8914E5F08092E2E56EF8BCED992F3D69B4EE899C061273D524B9B8369A2E5F6 DUP5 PUSH1 0x40 MLOAD PUSH2 0x34DA SWAP2 SWAP1 PUSH2 0x41D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 JUMPDEST DUP6 PUSH32 0xBB89AA54ED6940A7E7167BD262B2400D63945045CEFF1A52A05F2601ED215F1 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH2 0x3515 SWAP3 SWAP2 SWAP1 PUSH2 0x47A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0xB0 SHL SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x3551 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x54C SWAP1 PUSH2 0x42D9 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH2 0x160 ADD PUSH1 0x40 MSTORE DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x0 PUSH3 0xFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP6 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD DUP4 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE POP SWAP1 POP PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x88316456 DUP7 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x367B SWAP2 SWAP1 PUSH2 0x4685 JUMP JUMPDEST PUSH1 0x80 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3695 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x36C5 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x36C2 SWAP2 DUP2 ADD SWAP1 PUSH2 0x403F JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x375C JUMPI PUSH2 0x36D1 PUSH2 0x48FD JUMP JUMPDEST DUP1 PUSH2 0x36DC JUMPI POP PUSH2 0x371D JUMP JUMPDEST PUSH32 0xE3E761156CB5AAD50F5757AC6FF101FD3EB2EBA81B0D509536C0DE0F1046332A DUP9 DUP9 DUP4 PUSH1 0x40 MLOAD PUSH2 0x370F SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x47E2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP PUSH2 0x3757 JUMP JUMPDEST PUSH32 0xE3E761156CB5AAD50F5757AC6FF101FD3EB2EBA81B0D509536C0DE0F1046332A DUP8 DUP8 PUSH1 0x40 MLOAD PUSH2 0x374E SWAP3 SWAP2 SWAP1 PUSH2 0x480A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST PUSH2 0x3958 JUMP JUMPDEST DUP4 SWAP8 POP DUP3 SWAP7 POP DUP2 SWAP6 POP DUP1 SWAP5 POP PUSH1 0x0 DUP8 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND GT ISZERO PUSH2 0x38A1 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP10 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP15 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD DUP14 PUSH1 0x2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP PUSH1 0x2 PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x13 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH3 0xFFFFFF MUL NOT AND SWAP1 DUP4 PUSH1 0x2 SIGNEXTEND PUSH3 0xFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x16 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP SWAP1 POP POP PUSH32 0xA8EBF59E901FC409129A5DDFCE5DCF103A4E3E31687D70E3FAA5EAB31C0715E1 DUP9 DUP15 DUP15 DUP11 PUSH1 0x40 MLOAD PUSH2 0x3894 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x474C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0x3953 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x852CD8D PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP1 PUSH4 0x42966C68 SWAP1 PUSH2 0x38ED SWAP1 DUP12 SWAP1 PUSH1 0x4 ADD PUSH2 0x4743 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x3907 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x3918 JUMPI POP PUSH1 0x1 JUMPDEST POP PUSH32 0xE3E761156CB5AAD50F5757AC6FF101FD3EB2EBA81B0D509536C0DE0F1046332A DUP12 DUP12 PUSH1 0x40 MLOAD PUSH2 0x394A SWAP3 SWAP2 SWAP1 PUSH2 0x4842 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x3978 JUMPI POP DUP2 PUSH2 0x22B8 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x3988 JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x39D2 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x39BA JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x39FF JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP1 PUSH2 0x3A1A JUMPI PUSH1 0x0 SWAP2 POP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 GT ISZERO PUSH2 0x3A31 JUMPI PUSH1 0x80 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A49 JUMPI PUSH1 0x40 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH4 0xFFFFFFFF DUP2 GT ISZERO PUSH2 0x3A5D JUMPI PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x3A6F JUMPI PUSH1 0x10 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0xFF DUP2 GT ISZERO PUSH2 0x3A80 JUMPI PUSH1 0x8 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0xF DUP2 GT ISZERO PUSH2 0x3A91 JUMPI PUSH1 0x4 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0x3 DUP2 GT ISZERO PUSH2 0x3AA2 JUMPI PUSH1 0x2 SWAP2 DUP3 ADD SWAP2 SHR JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x3AB2 JUMPI PUSH1 0x1 DUP3 ADD SWAP2 POP JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0x2C8C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH1 0x2 SIGNEXTEND SLT PUSH2 0x3B29 JUMPI DUP3 PUSH1 0x2 SIGNEXTEND PUSH2 0x3B31 JUMP JUMPDEST DUP3 PUSH1 0x2 SIGNEXTEND PUSH1 0x0 SUB JUMPDEST SWAP1 POP PUSH3 0xD89E8 DUP2 GT ISZERO PUSH2 0x3B6F JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0xFA SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP3 AND PUSH2 0x3B83 JUMPI PUSH1 0x1 PUSH1 0x80 SHL PUSH2 0x3B95 JUMP JUMPDEST PUSH16 0xFFFCB933BD6FAD37AA2D162D1A594001 JUMPDEST PUSH17 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH1 0x2 DUP3 AND ISZERO PUSH2 0x3BC9 JUMPI PUSH16 0xFFF97272373D413259A46990580E213A MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x4 DUP3 AND ISZERO PUSH2 0x3BE8 JUMPI PUSH16 0xFFF2E50F5F656932EF12357CF3C7FDCC MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x8 DUP3 AND ISZERO PUSH2 0x3C07 JUMPI PUSH16 0xFFE5CACA7E10E4E61C3624EAA0941CD0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x10 DUP3 AND ISZERO PUSH2 0x3C26 JUMPI PUSH16 0xFFCB9843D60F6159C9DB58835C926644 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x20 DUP3 AND ISZERO PUSH2 0x3C45 JUMPI PUSH16 0xFF973B41FA98C081472E6896DFB254C0 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x40 DUP3 AND ISZERO PUSH2 0x3C64 JUMPI PUSH16 0xFF2EA16466C96A3843EC78B326B52861 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x80 DUP3 AND ISZERO PUSH2 0x3C83 JUMPI PUSH16 0xFE5DEE046A99A2A811C461F1969C3053 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x100 DUP3 AND ISZERO PUSH2 0x3CA3 JUMPI PUSH16 0xFCBE86C7900A88AEDCFFC83B479AA3A4 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x200 DUP3 AND ISZERO PUSH2 0x3CC3 JUMPI PUSH16 0xF987A7253AC413176F2B074CF7815E54 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x400 DUP3 AND ISZERO PUSH2 0x3CE3 JUMPI PUSH16 0xF3392B0822B70005940C7A398E4B70F3 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x800 DUP3 AND ISZERO PUSH2 0x3D03 JUMPI PUSH16 0xE7159475A2C29B7443B29C7FA6E889D9 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x1000 DUP3 AND ISZERO PUSH2 0x3D23 JUMPI PUSH16 0xD097F3BDFD2022B8845AD8F792AA5825 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x2000 DUP3 AND ISZERO PUSH2 0x3D43 JUMPI PUSH16 0xA9F746462D870FDF8A65DC1F90E061E5 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x4000 DUP3 AND ISZERO PUSH2 0x3D63 JUMPI PUSH16 0x70D869A156D2A1B890BB3DF62BAF32F7 MUL PUSH1 0x80 SHR JUMPDEST PUSH2 0x8000 DUP3 AND ISZERO PUSH2 0x3D83 JUMPI PUSH16 0x31BE135F97D08FD981231505542FCFA6 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x10000 DUP3 AND ISZERO PUSH2 0x3DA4 JUMPI PUSH16 0x9AA508B5B7A84E1C677DE54F3E99BC9 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x20000 DUP3 AND ISZERO PUSH2 0x3DC4 JUMPI PUSH15 0x5D6AF8DEDB81196699C329225EE604 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x40000 DUP3 AND ISZERO PUSH2 0x3DE3 JUMPI PUSH14 0x2216E584F5FA1EA926041BEDFE98 MUL PUSH1 0x80 SHR JUMPDEST PUSH3 0x80000 DUP3 AND ISZERO PUSH2 0x3E00 JUMPI PUSH12 0x48A170391F7DC42444E8FA2 MUL PUSH1 0x80 SHR JUMPDEST PUSH1 0x0 DUP5 PUSH1 0x2 SIGNEXTEND SGT ISZERO PUSH2 0x3E1B JUMPI DUP1 PUSH1 0x0 NOT DUP2 PUSH2 0x3E17 JUMPI INVALID JUMPDEST DIV SWAP1 POP JUMPDEST PUSH5 0x100000000 DUP2 MOD ISZERO PUSH2 0x3E2F JUMPI PUSH1 0x1 PUSH2 0x3E32 JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0xFF AND PUSH1 0x20 DUP3 SWAP1 SHR ADD SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 MLOAD PUSH2 0xFFFF DUP2 AND DUP2 EQ PUSH2 0x27A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E67 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2C8C DUP2 PUSH2 0x49A2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3E83 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x2C8C DUP2 PUSH2 0x49A2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3EA0 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x3EAB DUP2 PUSH2 0x49A2 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3ECD JUMPI DUP1 DUP2 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x3ED8 DUP2 PUSH2 0x49A2 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH2 0x3EEF DUP2 PUSH2 0x49A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xC0 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3AB2 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xE0 DUP9 DUP11 SUB SLT ISZERO PUSH2 0x3F25 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP8 MLOAD PUSH2 0x3F30 DUP2 PUSH2 0x49A2 JUMP JUMPDEST DUP1 SWAP8 POP POP PUSH1 0x20 DUP9 ADD MLOAD DUP1 PUSH1 0x2 SIGNEXTEND DUP2 EQ PUSH2 0x3F47 JUMPI DUP4 DUP5 REVERT JUMPDEST SWAP6 POP PUSH2 0x3F55 PUSH1 0x40 DUP10 ADD PUSH2 0x3E44 JUMP JUMPDEST SWAP5 POP PUSH2 0x3F63 PUSH1 0x60 DUP10 ADD PUSH2 0x3E44 JUMP JUMPDEST SWAP4 POP PUSH2 0x3F71 PUSH1 0x80 DUP10 ADD PUSH2 0x3E44 JUMP JUMPDEST SWAP3 POP PUSH1 0xA0 DUP9 ADD MLOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x3F86 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0xC0 DUP10 ADD MLOAD SWAP1 SWAP3 POP DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x3F9B JUMPI DUP2 DUP3 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 SWAP9 SWAP2 SWAP5 SWAP8 POP SWAP3 SWAP6 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FBC JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH3 0xFFFFFF DUP2 AND DUP2 EQ PUSH2 0x2C8C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FDF JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3FF7 JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4010 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x4022 DUP2 PUSH2 0x49A2 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4010 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4054 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 MLOAD SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4071 JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 SWAP1 SWAP7 ADD MLOAD SWAP5 SWAP8 SWAP1 SWAP7 POP SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x4099 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD SWAP1 SWAP3 SWAP1 SWAP2 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x40BF JUMPI DUP2 DUP3 REVERT JUMPDEST DUP5 CALLDATALOAD SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x40E4 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP8 ADD SWAP2 POP DUP8 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x40F7 JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD DUP2 DUP2 GT ISZERO PUSH2 0x4105 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP9 PUSH1 0x20 DUP3 DUP6 ADD ADD GT ISZERO PUSH2 0x4116 JUMPI DUP5 DUP6 REVERT JUMPDEST SWAP6 SWAP9 SWAP5 SWAP8 POP POP PUSH1 0x20 ADD SWAP5 POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x2 SIGNEXTEND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x415E JUMPI PUSH1 0x20 DUP2 DUP6 ADD DUP2 ADD MLOAD DUP7 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x4142 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x416F JUMPI DUP3 PUSH1 0x20 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xFFFFFF AND SWAP1 MSTORE JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP1 SWAP2 AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x2 SWAP2 SWAP1 SWAP2 SIGNEXTEND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 MSTORE PUSH2 0x22B8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4139 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x24B73B30B634B21036BAB63A34B83634B2B9 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x18 SWAP1 DUP3 ADD MSTORE PUSH32 0x43616C6C6261636B2073656E646572206D69736D617463680000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x24B73B30B634B2103232B837B9B4BA103A37B5B2B7 PUSH1 0x59 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x15D155120E481859191C995CDCC81B9BDD081CD95D PUSH1 0x5A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x576974686472617720616D6F756E74207A65726F PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x17 SWAP1 DUP3 ADD MSTORE PUSH32 0x506F736974696F6E20616C726561647920616374697665000000000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x4465706F736974204554482076616C7565207A65726F PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x125B9D985B1A59081D1BDAD95B93DD5D PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x92DCE6EACCCCD2C6D2CADCE840AE8AA89 PUSH1 0x7B SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x13 SWAP1 DUP3 ADD MSTORE PUSH19 0x4465706F73697420616D6F756E74207A65726F PUSH1 0x68 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x27379030B1BA34BB32903837B9B4BA34B7B7 PUSH1 0x71 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x141BDBDB08191BD95CDB89DD08195E1A5CDD PUSH1 0x72 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x139BC8115512081D1BC81C99599D5B99 PUSH1 0x82 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E76616C696420726563697069656E74206164647265737300000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xF SWAP1 DUP3 ADD MSTORE PUSH15 0x24B73B30B634B2103A37B5B2B724B7 PUSH1 0x89 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x11 SWAP1 DUP3 ADD MSTORE PUSH17 0x125B9D985B1A59081C9958DA5C1A595B9D PUSH1 0x7A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xD SWAP1 DUP3 ADD MSTORE PUSH13 0x15D155120E481B9BDD081CD95D PUSH1 0x9A SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x19 SWAP1 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420574554482062616C616E636500000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 DUP3 MSTORE PUSH1 0x14 SWAP1 DUP3 ADD MSTORE PUSH20 0x3930B733B2ABB4B23A3426BAB63A34B83634B2B9 PUSH1 0x61 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP3 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP1 DUP2 AND SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA0 DUP3 ADD SWAP1 POP DUP3 MLOAD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB PUSH1 0x20 DUP5 ADD MLOAD AND PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x80 DUP4 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x40 DUP1 DUP5 ADD MLOAD PUSH3 0xFFFFFF AND SWAP1 DUP4 ADD MSTORE PUSH1 0x60 DUP1 DUP5 ADD MLOAD DUP3 AND SWAP1 DUP4 ADD MSTORE PUSH1 0x80 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xA0 DUP4 DUP2 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xC0 DUP1 DUP5 ADD MLOAD SWAP1 DUP4 ADD MSTORE PUSH1 0xE0 SWAP3 DUP4 ADD MLOAD AND SWAP2 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0x100 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x160 DUP3 ADD SWAP1 POP PUSH2 0x4699 DUP3 DUP5 MLOAD PUSH2 0x4125 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x46AB PUSH1 0x20 DUP5 ADD DUP3 PUSH2 0x4125 JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x46BE PUSH1 0x40 DUP5 ADD DUP3 PUSH2 0x4184 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x46D1 PUSH1 0x60 DUP5 ADD DUP3 PUSH2 0x4132 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x46E4 PUSH1 0x80 DUP5 ADD DUP3 PUSH2 0x4132 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0xE0 DUP4 ADD MSTORE PUSH2 0x100 DUP1 DUP5 ADD MLOAD DUP2 DUP5 ADD MSTORE POP PUSH2 0x120 DUP1 DUP5 ADD MLOAD PUSH2 0x4722 DUP3 DUP6 ADD DUP3 PUSH2 0x4125 JUMP JUMPDEST POP POP PUSH2 0x140 SWAP3 DUP4 ADD MLOAD SWAP2 SWAP1 SWAP3 ADD MSTORE SWAP1 JUMP JUMPDEST PUSH3 0xFFFFFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST SWAP4 DUP5 MSTORE PUSH1 0x2 SWAP3 DUP4 SIGNEXTEND PUSH1 0x20 DUP6 ADD MSTORE SWAP2 SIGNEXTEND PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST SWAP5 DUP6 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x2 SWAP2 DUP3 SIGNEXTEND PUSH1 0x40 DUP6 ADD MSTORE SWAP1 SIGNEXTEND PUSH1 0x60 DUP4 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD SWAP1 JUMP JUMPDEST SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 SWAP3 DUP4 SIGNEXTEND PUSH1 0x40 DUP7 ADD MSTORE SWAP2 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0xC0 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP3 MSTORE DUP4 PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4801 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x4139 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x12 SWAP1 DUP3 ADD MSTORE PUSH18 0x2AB735B737BBB71036B4B73A1032B93937B9 PUSH1 0x71 SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0x40 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x15 SWAP1 DUP3 ADD MSTORE PUSH21 0x16995C9BC81B1A5C5D5A591A5D1E481B5A5B9D1959 PUSH1 0x5A SHL PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 ADD SWAP1 JUMP JUMPDEST SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST SWAP10 DUP11 MSTORE PUSH1 0x20 DUP11 ADD SWAP9 SWAP1 SWAP9 MSTORE PUSH1 0x40 DUP10 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x2 SWAP5 DUP6 SIGNEXTEND PUSH1 0x60 DUP10 ADD MSTORE SWAP3 DUP5 SIGNEXTEND PUSH1 0x80 DUP9 ADD MSTORE SWAP1 DUP4 SIGNEXTEND PUSH1 0xA0 DUP8 ADD MSTORE SWAP1 SWAP2 SIGNEXTEND PUSH1 0xC0 DUP6 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x80 SHL SUB AND PUSH1 0xE0 DUP5 ADD MSTORE PUSH2 0x100 DUP4 ADD MSTORE PUSH2 0x120 DUP3 ADD MSTORE PUSH2 0x140 ADD SWAP1 JUMP JUMPDEST PUSH1 0xFF SWAP2 SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0xE0 SHR SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x44 RETURNDATASIZE LT ISZERO PUSH2 0x490D JUMPI PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x4 DUP2 DUP3 RETURNDATACOPY PUSH4 0x8C379A0 PUSH2 0x4921 DUP3 MLOAD PUSH2 0x48F7 JUMP JUMPDEST EQ PUSH2 0x492B JUMPI PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x3 NOT ADD PUSH1 0x4 DUP3 RETURNDATACOPY DUP1 MLOAD RETURNDATASIZE PUSH8 0xFFFFFFFFFFFFFFFF DUP2 PUSH1 0x24 DUP5 ADD GT DUP2 DUP5 GT OR ISZERO PUSH2 0x495B JUMPI POP POP POP POP PUSH2 0x1869 JUMP JUMPDEST DUP3 DUP5 ADD SWAP3 POP DUP3 MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x4975 JUMPI POP POP POP POP PUSH2 0x1869 JUMP JUMPDEST POP RETURNDATASIZE DUP4 ADD PUSH1 0x20 DUP3 DUP5 ADD ADD GT ISZERO PUSH2 0x498D JUMPI POP POP POP PUSH2 0x1869 JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH1 0x20 ADD PUSH1 0x40 MSTORE SWAP2 POP POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x581 JUMPI PUSH1 0x0 DUP1 REVERT INVALID MSTORE PUSH6 0x656E7472616E PUSH4 0x79477561 PUSH19 0x643A207265656E7472616E742063616C6C004F PUSH24 0x6E61626C653A206E6577206F776E65722069732074686520 PUSH27 0x65726F2061646472657373416464726573733A20696E7375666669 PUSH4 0x69656E74 KECCAK256 PUSH3 0x616C61 PUSH15 0x636520666F722063616C6C53616665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x7563636565645361666545524332303A20617070 PUSH19 0x6F76652066726F6D206E6F6E2D7A65726F2074 PUSH16 0x206E6F6E2D7A65726F20616C6C6F7761 PUSH15 0x6365A26469706673582212200775A0 0xED 0x4B GAS CREATE2 DUP15 PUSH26 0x53357AF6D061376A6FCC0FF09E6BA3B28CCB7B71C539E264736F PUSH13 0x63430007060033000000000000 ","sourceMap":"1795:23048:30:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2846:38;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2462:37;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2342:31::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;19856:173::-;;;:::i;:::-;;23318:277;;;;;;;;;;-1:-1:-1;23318:277:30;;;;;:::i;:::-;;:::i;20953:537::-;;;;;;;;;;-1:-1:-1;20953:537:30;;;;;:::i;:::-;;:::i;22452:812::-;;;;;;;;;;-1:-1:-1;22452:812:30;;;;;:::i;:::-;;:::i;21869:575::-;;;;;;;;;;-1:-1:-1;21869:575:30;;;;;:::i;:::-;;:::i;7460:1849::-;;;;;;;;;;-1:-1:-1;7460:1849:30;;;;;:::i;:::-;;:::i;23659:482::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;20447:454::-;;;;;;:::i;:::-;;:::i;2581:30::-;;;;;;;;;;;;;:::i;9317:1581::-;;;;;;;;;;-1:-1:-1;9317:1581:30;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;1717:145:0:-;;;;;;;;;;;;;:::i;2229:60:30:-;;;;;;;;;;;;;:::i;1085:85:0:-;;;;;;;;;;;;;:::i;2418:37:30:-;;;;;;;;;;;;;:::i;2296:39::-;;;;;;;;;;;;;:::i;2180:42::-;;;;;;;;;;;;;:::i;2540:34::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;2380:31::-;;;;;;;;;;;;;:::i;19247:505::-;;;;;;;;;;-1:-1:-1;19247:505:30;;;;;:::i;:::-;;:::i;2778:31::-;;;;;;;;;;;;;:::i;2506:27::-;;;;;;;;;;;;;:::i;20037:402::-;;;;;;:::i;:::-;;:::i;2011:240:0:-;;;;;;;;;;-1:-1:-1;2011:240:0;;;;;:::i;:::-;;:::i;24545:120:30:-;;;;;;;;;;;;;:::i;21498:363::-;;;:::i;24149:388::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;2846:38::-;;;;;;:::o;2462:37::-;;;:::o;2342:31::-;;;:::o;19856:173::-;19937:1;19913:21;:25;19905:54;;;;-1:-1:-1;;;19905:54:30;;;;;;;:::i;:::-;;;;;;;;;19970:51;;19978:10;;19999:21;19970:51;;;;;;;;;19999:21;19978:10;19970:51;;;;;;;;;;;;;;;;;;;;;19856:173::o;23318:277::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;23423:1:30::1;23409:11;:15;;;:37;;;;;23443:3;23428:11;:18;;;;23409:37;23401:68;;;;-1:-1:-1::0;;;23401:68:30::1;;;;;;;:::i;:::-;23480:20;:34:::0;;-1:-1:-1;;23480:34:30::1;;::::0;::::1;;::::0;;23530:57:::1;::::0;::::1;::::0;::::1;::::0;23480:34;;23530:57:::1;:::i;:::-;;;;;;;;23318:277:::0;:::o;20953:537::-;1688:1:10;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:10;;;;;;;;;;;;;;;1688:1;2407:7;:18;1308:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;;1289:68;;;::::0;;-1:-1:-1;;;1289:68:0;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;::::1;;21108:6:30::2;-1:-1:-1::0;;;;;21098:16:30::2;:6;-1:-1:-1::0;;;;;21098:16:30::2;;:53;;;;21145:6;-1:-1:-1::0;;;;;21135:16:30::2;:6;-1:-1:-1::0;;;;;21135:16:30::2;;21098:53;:114;;;;21183:5;-1:-1:-1::0;;;;;21173:15:30::2;:6;-1:-1:-1::0;;;;;21173:15:30::2;;:38;;;;-1:-1:-1::0;21192:5:30::2;-1:-1:-1::0;;;;;21192:19:30::2;::::0;::::2;21173:38;21076:220;;;;-1:-1:-1::0;;;21076:220:30::2;;;;;;;:::i;:::-;21325:1;21315:7;:11;21307:43;;;;-1:-1:-1::0;;;21307:43:30::2;;;;;;;:::i;:::-;21361:67;-1:-1:-1::0;;;;;21361:31:30;::::2;21393:10;21413:4;21420:7:::0;21361:31:::2;:67::i;:::-;21462:10;-1:-1:-1::0;;;;;21444:38:30::2;21454:6;-1:-1:-1::0;;;;;21444:38:30::2;;21474:7;21444:38;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1645:1:10;2580:22;;20953:537:30:o;22452:812::-;1688:1:10;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:10;;;;;;;;;;;;;;;1688:1;2407:7;:18;1308:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;;1289:68;;;::::0;;-1:-1:-1;;;1289:68:0;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;::::1;;22626:5:30::2;-1:-1:-1::0;;;;;22626:19:30::2;22618:53;;;;-1:-1:-1::0;;;22618:53:30::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;22690:24:30;::::2;22682:62;;;;-1:-1:-1::0;;;22682:62:30::2;;;;;;;:::i;:::-;22773:1;22763:7;:11;22755:44;;;;-1:-1:-1::0;;;22755:44:30::2;;;;;;;:::i;:::-;22892:38;::::0;-1:-1:-1;;;22892:38:30;;22934:7;;-1:-1:-1;;;;;22899:5:30::2;22892:23;::::0;::::2;::::0;:38:::2;::::0;22924:4:::2;::::0;22892:38:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:49;;22870:124;;;;-1:-1:-1::0;;;22870:124:30::2;;;;;;;:::i;:::-;23039:31;::::0;-1:-1:-1;;;23039:31:30;;-1:-1:-1;;;;;23046:5:30::2;23039:22;::::0;::::2;::::0;:31:::2;::::0;23062:7;;23039:31:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;23119:28:30::2;::::0;-1:-1:-1;;;;;23119:19:30;::::2;::::0;-1:-1:-1;23119:28:30;::::2;;;::::0;-1:-1:-1;23139:7:30;;23119:28:::2;::::0;;;23139:7;23119:19;:28;::::2;;;;;;;;;;;;;::::0;::::2;;;;;;23214:10;-1:-1:-1::0;;;;;23197:37:30::2;23207:5;-1:-1:-1::0;;;;;23197:37:30::2;;23226:7;23197:37;;;;;;:::i;21869:575::-:0;1688:1:10;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:10;;;;;;;;;;;;;;;1688:1;2407:7;:18;1308:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;;1289:68;;;::::0;;-1:-1:-1;;;1289:68:0;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;22030:24:30;::::2;22022:62;;;;-1:-1:-1::0;;;22022:62:30::2;;;;;;;:::i;:::-;22113:1;22103:7;:11;22095:44;;;;-1:-1:-1::0;;;22095:44:30::2;;;;;;;:::i;:::-;22225:39;::::0;-1:-1:-1;;;22225:39:30;;22268:7;;-1:-1:-1;;;;;22225:24:30;::::2;::::0;::::2;::::0;:39:::2;::::0;22258:4:::2;::::0;22225:39:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;;22203:120;;;;-1:-1:-1::0;;;22203:120:30::2;;;;;;;:::i;:::-;22334:48;-1:-1:-1::0;;;;;22334:27:30;::::2;22362:10:::0;22374:7;22334:27:::2;:48::i;:::-;22416:10;-1:-1:-1::0;;;;;22398:38:30::2;22408:6;-1:-1:-1::0;;;;;22398:38:30::2;;22428:7;22398:38;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1645:1:10;2580:22;;-1:-1:-1;21869:575:30:o;7460:1849::-;1688:1:10;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:10;;;;;;;;;;;;;;;1688:1;2407:7;:18;1308:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;;1289:68;;;::::0;;-1:-1:-1;;;1289:68:0;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;::::1;;7585:16:30::2;7604:9;7585:28;;7624:13;7741:20:::0;7776:17;7807:29:::2;:27;:29::i;:::-;7726:110;;;;7847:27;7877:34;7898:12;7877:20;:34::i;:::-;7847:64;;7922:19;7944:35;7957:21;7944:12;:35::i;:::-;7922:57;;8040:21;8063::::0;8088:54:::2;8118:13;8088:15;:54::i;:::-;8241:22:::0;;8039:103;;-1:-1:-1;8039:103:30;-1:-1:-1;;;;8241:22:30;::::2;;;8240:23;::::0;:84:::2;;-1:-1:-1::0;8299:25:30;;:15:::2;8280:44:::0;;::::2;-1:-1:-1::0;;;8299:25:30;;::::2;::::0;::::2;8280:44:::0;::::2;;;8240:84;:145;;;-1:-1:-1::0;8360:25:30;;:15:::2;8341:44:::0;;::::2;-1:-1:-1::0;;;8360:25:30;;::::2;::::0;::::2;8341:44:::0;::::2;;;8240:145;8222:282;;;8412:50;8429:15;8446;8412:16;:50::i;:::-;8488:4;8477:15;;8222:282;8595:210;8627:19;8661:21;8697:11;8723:13;8751:8;8785:9;8774:8;:20;8595:210;;;;;;;;;;;:::i;:::-;;;;;;;;9077:25:::0;;9197:39:::2;::::0;-1:-1:-1;;;9197:39:30;;8882:419:::2;::::0;8923:15:::2;::::0;8953:19;;8987:21;;9023:11;;9049:13;;-1:-1:-1;;;9077:25:30;::::2;:15;:25:::0;;::::2;::::0;-1:-1:-1;;;9117:25:30;::::2;::::0;;::::2;::::0;-1:-1:-1;;;;;9157:25:30;;::::2;::::0;-1:-1:-1;;;;;9204:6:30::2;9197:24;::::0;::::2;::::0;:39:::2;::::0;9230:4:::2;::::0;9197:39:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9251;::::0;-1:-1:-1;;;9251:39:30;;-1:-1:-1;;;;;9258:6:30::2;9251:24;::::0;::::2;::::0;:39:::2;::::0;9284:4:::2;::::0;9251:39:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8882:419;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1::0;;1645:1:10;2580:22;;-1:-1:-1;;;;;;;7460:1849:30:o;23659:482::-;23942:15;:23;;23980:25;;23942:23;;-1:-1:-1;;;;;23980:25:30;;;-1:-1:-1;;;24020:25:30;;;;;-1:-1:-1;;;24060:25:30;;;;;;-1:-1:-1;;;24100:22:30;;;;;;23659:482::o;20447:454::-;20571:5;-1:-1:-1;;;;;20571:19:30;20563:45;;;;-1:-1:-1;;;20563:45:30;;;;;;;:::i;:::-;-1:-1:-1;;;;;20627:23:30;;20619:53;;;;-1:-1:-1;;;20619:53:30;;;;;;;:::i;:::-;20701:38;;-1:-1:-1;;;20701:38:30;;20683:15;;-1:-1:-1;;;;;20708:5:30;20701:23;;;;:38;;20733:4;;20701:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20683:56;;20769:13;20758:7;:24;;20750:54;;;;-1:-1:-1;;;20750:54:30;;;;;;;:::i;:::-;20815:31;;-1:-1:-1;;;20815:31:30;;-1:-1:-1;;;;;20822:5:30;20815:22;;;;:31;;20838:7;;20815:31;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;20857:36:30;;-1:-1:-1;;;;;20857:27:30;;;-1:-1:-1;20857:36:30;;;;;-1:-1:-1;20885:7:30;;20857:36;;;;20885:7;20857:27;:36;;;;;;;;;;;;;;;;;;;;;20447:454;;;:::o;2581:30::-;;;:::o;9317:1581::-;9416:17;1688:1:10;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:10;;;;;;;;;;;;;;;1688:1;2407:7;:18;1308:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;;1289:68;;;::::0;;-1:-1:-1;;;1289:68:0;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;::::1;;-1:-1:-1::0;;;;;9486:6:30::2;9468:24;:14;;::::0;::::2;:6:::0;:14:::2;:::i;:::-;-1:-1:-1::0;;;;;9468:24:30::2;;:52;;;-1:-1:-1::0;;;;;;9514:6:30::2;9496:24;:14;;::::0;::::2;:6:::0;:14:::2;:::i;:::-;-1:-1:-1::0;;;;;9496:24:30::2;;9468:52;9446:117;;;;-1:-1:-1::0;;;9446:117:30::2;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9615:6:30::2;9596:25;:15;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;9596:25:30::2;;:54;;;-1:-1:-1::0;;;;;;9644:6:30::2;9625:25;:15;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;9625:25:30::2;;9596:54;9574:120;;;;-1:-1:-1::0;;;9574:120:30::2;;;;;;;:::i;:::-;9748:133;9802:10;9835:4;9855:15;::::0;::::2;;9755:14;;::::0;::::2;9855:6:::0;9755:14:::2;:::i;:::-;-1:-1:-1::0;;;;;9748:39:30::2;::::0;:133;;:39:::2;:133::i;:::-;9892:109;9949:10;9975:15;::::0;::::2;;9899:14;;::::0;::::2;9975:6:::0;9899:14:::2;:::i;:::-;-1:-1:-1::0;;;;;9892:34:30::2;::::0;:109;:34:::2;:109::i;:::-;10101:442;::::0;;::::2;::::0;::::2;::::0;;;10046:52:::2;::::0;10101:442;10178:14:::2;;::::0;::::2;:6:::0;:14:::2;:::i;:::-;-1:-1:-1::0;;;;;10101:442:30::2;;;;;10221:6;:15;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10101:442:30::2;::::0;;::::2;;10260:14;::::0;;;::::2;::::0;::::2;;:::i;:::-;10101:442;;;;;;10312:4;-1:-1:-1::0;;;;;10101:442:30::2;;;;;10346:15;10101:442;;;;10390:6;:15;;;10101:442;;;;10442:6;:23;;;10101:442;;;;10503:6;:24;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;10101:442:30::2;;;::::0;10046:497:::2;;10568:10;-1:-1:-1::0;;;;;10568:27:30::2;;10596:10;10568:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10556:51:::0;-1:-1:-1;10674:15:30::2;::::0;;;::::2;::::0;::::2;;:::i;:::-;-1:-1:-1::0;;;;;10623:131:30::2;10645:14;;::::0;::::2;:6:::0;:14:::2;:::i;:::-;-1:-1:-1::0;;;;;10623:131:30::2;;10704:6;:15;;;10734:9;10623:131;;;;;;;:::i;:::-;;;;;;;;10803:58;10846:10;10859:1;10810:14;;::::0;::::2;:6:::0;:14:::2;:::i;10803:58::-;10874:16;1645:1:10::0;2580:22;;9317:1581:30;;-1:-1:-1;9317:1581:30:o;1717:145:0:-;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;1823:1:::1;1807:6:::0;;1786:40:::1;::::0;-1:-1:-1;;;;;1807:6:0;;::::1;::::0;1786:40:::1;::::0;1823:1;;1786:40:::1;1853:1;1836:19:::0;;-1:-1:-1;;;;;;1836:19:0::1;::::0;;1717:145::o;2229:60:30:-;;;:::o;1085:85:0:-;1131:7;1157:6;-1:-1:-1;;;;;1157:6:0;1085:85;;:::o;2418:37:30:-;;;:::o;2296:39::-;;;:::o;2180:42::-;;;:::o;2540:34::-;;;:::o;2380:31::-;;;:::o;19247:505::-;19432:10;-1:-1:-1;;;;;19454:15:30;19432:38;;19410:112;;;;-1:-1:-1;;;19410:112:30;;;;;;;:::i;:::-;19539:15;;19535:100;;19571:52;-1:-1:-1;;;;;19578:6:30;19571:27;19599:10;19611:11;19571:27;:52::i;:::-;19649:15;;19645:100;;19681:52;-1:-1:-1;;;;;19688:6:30;19681:27;19709:10;19721:11;19681:27;:52::i;2778:31::-;;;;;;;;-1:-1:-1;;;;;2778:31:30;;;-1:-1:-1;;;2778:31:30;;;;;-1:-1:-1;;;2778:31:30;;;;;-1:-1:-1;;;2778:31:30;;;;;:::o;2506:27::-;;;:::o;20037:402::-;1308:12:0;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;20194:23:30;::::1;20186:53;;;;-1:-1:-1::0;;;20186:53:30::1;;;;;;;:::i;:::-;20268:38;::::0;-1:-1:-1;;;20268:38:30;;20250:15:::1;::::0;-1:-1:-1;;;;;20268:23:30;::::1;::::0;::::1;::::0;:38:::1;::::0;20300:4:::1;::::0;20268:38:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20250:56;;20336:13;20325:7;:24;;20317:57;;;;-1:-1:-1::0;;;20317:57:30::1;;;;;;;:::i;:::-;20385:46;-1:-1:-1::0;;;;;20385:26:30;::::1;20412:9:::0;20423:7;20385:26:::1;:46::i;2011:240:0:-:0;1308:12;:10;:12::i;:::-;-1:-1:-1;;;;;1297:23:0;:7;:5;:7::i;:::-;-1:-1:-1;;;;;1297:23:0;;1289:68;;;;;-1:-1:-1;;;1289:68:0;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;;;-1:-1:-1;;;;;2099:22:0;::::1;2091:73;;;;-1:-1:-1::0;;;2091:73:0::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2200:6;::::0;;2179:38:::1;::::0;-1:-1:-1;;;;;2179:38:0;;::::1;::::0;2200:6;::::1;::::0;2179:38:::1;::::0;::::1;2227:6;:17:::0;;-1:-1:-1;;;;;;2227:17:0::1;-1:-1:-1::0;;;;;2227:17:0;;;::::1;::::0;;;::::1;::::0;;2011:240::o;24545:120:30:-;24621:36;;-1:-1:-1;;;24621:36:30;;24594:7;;-1:-1:-1;;;;;24621:7:30;:15;;;;:36;;24637:6;;24645;;24653:3;;24621:36;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24614:43;;24545:120;:::o;21498:363::-;1688:1:10;2277:7;;:19;;2269:63;;;;;-1:-1:-1;;;2269:63:10;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;2269:63:10;;;;;;;;;;;;;;;1688:1;2407:7;:18;1308:12:0::1;:10;:12::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;:7;:5;:7::i;:::-;-1:-1:-1::0;;;;;1297:23:0::1;;1289:68;;;::::0;;-1:-1:-1;;;1289:68:0;;::::1;;::::0;::::1;::::0;;;;;;;-1:-1:-1;;;;;;;;;;;1289:68:0;;;;;;;;;;;;;::::1;;21579:5:30::2;-1:-1:-1::0;;;;;21579:19:30::2;21571:53;;;;-1:-1:-1::0;;;21571:53:30::2;;;;;;;:::i;:::-;21655:1;21643:9;:13;21635:48;;;;-1:-1:-1::0;;;21635:48:30::2;;;;;;;:::i;:::-;21742:5;-1:-1:-1::0;;;;;21735:21:30::2;;21764:9;21735:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;21809:10;-1:-1:-1::0;;;;;21792:39:30::2;21802:5;-1:-1:-1::0;;;;;21792:39:30::2;;21821:9;21792:39;;;;;;:::i;:::-;;;;;;;;1645:1:10::0;2580:22;;21498:363:30:o;24149:388::-;24230:16;24248;24266:19;24321:6;-1:-1:-1;;;;;24314:24:30;;24347:4;24314:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24375;;-1:-1:-1;;;24375:39:30;;24303:50;;-1:-1:-1;;;;;;24382:6:30;24375:24;;;;:39;;24408:4;;24375:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24364:50;-1:-1:-1;24439:5:30;-1:-1:-1;;;;;24439:19:30;:90;;24528:1;24439:90;;;24474:38;;-1:-1:-1;;;24474:38:30;;-1:-1:-1;;;;;24481:5:30;24474:23;;;;:38;;24506:4;;24474:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24425:104;;24149:388;;;:::o;1348:613:4:-;1713:10;;;1712:62;;-1:-1:-1;1729:39:4;;;-1:-1:-1;;;1729:39:4;;1753:4;1729:39;;;;-1:-1:-1;;;;;1729:39:4;;;;;;;;;:15;;;;;;:39;;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1729:39:4;:44;1712:62;1704:150;;;;-1:-1:-1;;;1704:150:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1891:62;;;-1:-1:-1;;;;;1891:62:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1891:62:4;-1:-1:-1;;;1891:62:4;;;1864:90;;1884:5;;1864:19;:90::i;:::-;1348:613;;;:::o;3581:193:8:-;3684:12;3715:52;3737:6;3745:4;3751:1;3754:12;3715:21;:52::i;:::-;3708:59;;3581:193;;;;;;:::o;598:104:9:-;685:10;598:104;:::o;885:203:4:-;1012:68;;;-1:-1:-1;;;;;1012:68:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1012:68:4;-1:-1:-1;;;1012:68:4;;;985:96;;1005:5;;985:19;:96::i;704:175::-;813:58;;;-1:-1:-1;;;;;813:58:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;813:58:4;-1:-1:-1;;;813:58:4;;;786:86;;806:5;;786:19;:86::i;17009:351:30:-;17098:20;17120:10;17148:19;17170:7;-1:-1:-1;;;;;17170:15:30;;17186:6;17194;17202:3;17170:36;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17148:58;-1:-1:-1;;;;;;17225:25:30;;17217:56;;;;-1:-1:-1;;;17217:56:30;;;;;;;:::i;:::-;17332:11;-1:-1:-1;;;;;17317:33:30;;:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;17284:68:30;;;;-1:-1:-1;17009:351:30;;-1:-1:-1;;;;;;17009:351:30:o;18061:665::-;18152:20;;18205:48;-1:-1:-1;;;;;18231:21:30;;;18205:25;:48::i;:::-;18185:68;-1:-1:-1;18303:3:30;18290:16;;;18323:32;18341:14;18323:32;;:14;:32;;;;18319:400;;18372:14;18413:52;18441:23;18421:14;18413:23;;;18449:14;18441:23;18413:27;:52::i;:::-;18389:2;:77;;-1:-1:-1;18496:27:30;:15;18389:77;18496:19;:27::i;:::-;18481:42;;18319:400;;;;18556:14;18597:52;18625:23;18605:14;18597:23;;;18633:14;18625:23;18597:27;:52::i;:::-;18573:2;:77;;-1:-1:-1;18680:27:30;:15;18573:77;18680:19;:27::i;:::-;18665:42;;18319:400;;18061:665;;;;;:::o;17368:685::-;17435:5;17453:20;17506:14;17488:32;;:14;:32;;;17484:394;;17537:14;17578:52;17606:23;17586:14;17578:23;;;17614:14;17606:23;17578:27;:52::i;:::-;17554:2;:77;;-1:-1:-1;17661:24:30;:12;17554:77;17661:16;:24::i;:::-;17646:39;;17484:394;;;;17718:14;17759:52;17787:23;17767:14;17759:23;;;17795:14;17787:23;17759:27;:52::i;:::-;17735:2;:77;;-1:-1:-1;17842:24:30;:12;17735:77;17842:16;:24::i;:::-;17827:39;;17484:394;;17890:20;17935:40;-1:-1:-1;;;17935:27:30;17949:12;17935:13;:27::i;:::-;:31;;:40::i;:::-;17890:96;;18004:41;18032:12;18004:27;:41::i;:::-;17997:48;;;;17368:685;;;;:::o;16485:516::-;16656:20;;16573:15;;;;16656:20;;16636:11;:41;;;;;;16703:30;;;;;;;;;;;;;;16702:46;:58;16690:70;;16832:9;16818:11;16803;16784:30;;:16;:30;;;;;;;;16783:46;:58;;-1:-1:-1;;;16858:29:30;;;;;16854:64;;;-1:-1:-1;;16889:29:30;;16854:64;637:9:21;16933:29:30;;;;;16929:64;;;637:9:21;;-1:-1:-1;16929:64:30;16485:516;;;;:::o;10960:574::-;11044:22;;-1:-1:-1;;;11044:22:30;;;;11040:73;;;11083:18;:16;:18::i;:::-;11142:39;;-1:-1:-1;;;11142:39:30;;11123:16;;-1:-1:-1;;;;;11149:6:30;11142:24;;;;:39;;11175:4;;11142:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11123:58;;11192:16;11218:6;-1:-1:-1;;;;;11211:24:30;;11244:4;11211:39;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11192:58;;11276:1;11265:8;:12;:28;;;;11292:1;11281:8;:12;11265:28;11261:266;;;11310:56;11325:9;11336;11347:8;11357;11310:14;:56::i;:::-;11261:266;;;11399:22;:30;;11424:5;11399:15;11444:27;-1:-1:-1;;11486:29:30;;;10960:574;;;;:::o;2967:751:4:-;3386:23;3412:69;3440:4;3412:69;;;;;;;;;;;;;;;;;3420:5;-1:-1:-1;;;;;3412:27:4;;;:69;;;;;:::i;:::-;3495:17;;3386:95;;-1:-1:-1;3495:21:4;3491:221;;3635:10;3624:30;;;;;;;;;;;;;;;-1:-1:-1;3624:30:4;3616:85;;;;-1:-1:-1;;;3616:85:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4608:523:8;4735:12;4792:5;4767:21;:30;;4759:81;;;;-1:-1:-1;;;4759:81:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:18;4869:6;4858:10;:18::i;:::-;4850:60;;;;;-1:-1:-1;;;4850:60:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;4981:12;4995:23;5022:6;-1:-1:-1;;;;;5022:11:8;5042:5;5050:4;5022:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5022:33:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4980:75;;;;5072:52;5090:7;5099:10;5111:12;5072:17;:52::i;:::-;5065:59;4608:523;-1:-1:-1;;;;;;;4608:523:8:o;3538:215:2:-;3596:7;3619:6;3615:20;;-1:-1:-1;3634:1:2;3627:8;;3615:20;3657:5;;;3661:1;3657;:5;:1;3680:5;;;;;:10;3672:56;;;;-1:-1:-1;;;3672:56:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3745:1;-1:-1:-1;3538:215:2;;;;;:::o;3136:155::-;3194:7;3226:1;3221;:6;;3213:49;;;;;-1:-1:-1;;;3213:49:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3279:5:2;;;3136:155::o;4217:150::-;4275:7;4306:1;4302;:5;4294:44;;;;;-1:-1:-1;;;4294:44:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;4359:1;4355;:5;;;;;;;4217:150;-1:-1:-1;;;4217:150:2:o;742:1409:31:-;790:7;814:6;810:20;;-1:-1:-1;829:1:31;822:8;;810:20;1011:16;1047:1;1036:7;1041:1;1036:4;:7::i;:::-;1030:1;1036:12;;1030:19;;-1:-1:-1;1064:13:31;1060:31;;-1:-1:-1;1090:1:31;1060:31;1252:14;1269:36;1303:1;1269:29;1282:15;:1;1288:8;1282:5;:15::i;:::-;1269:8;;:12;:29::i;:::-;:33;;:36::i;:::-;1252:53;-1:-1:-1;1325:32:31;1355:1;1325:25;1336:13;:1;1252:53;1336:5;:13::i;:::-;1325:6;;:10;:25::i;:32::-;1316:41;-1:-1:-1;1377:32:31;1407:1;1377:25;1388:13;:1;1316:41;1388:5;:13::i;1377:32::-;1368:41;-1:-1:-1;1429:32:31;1459:1;1429:25;1440:13;:1;1368:41;1440:5;:13::i;1429:32::-;1420:41;-1:-1:-1;1481:32:31;1511:1;1481:25;1492:13;:1;1420:41;1492:5;:13::i;1481:32::-;1472:41;-1:-1:-1;1533:32:31;1563:1;1533:25;1544:13;:1;1472:41;1544:5;:13::i;1533:32::-;1524:41;-1:-1:-1;1816:13:31;:1;1524:41;1816:5;:13::i;:::-;1807:6;:22;1803:341;;;1997:13;:6;2008:1;1997:10;:13::i;:::-;1990:20;;;;;;1803:341;2126:6;-1:-1:-1;2119:13:31;;-1:-1:-1;2119:13:31;4354:4281:21;4427:10;817;-1:-1:-1;;;;;4556:30:21;;;;;;:63;;-1:-1:-1;997:49:21;-1:-1:-1;;;;;4590:29:21;;;4556:63;4548:77;;;;;-1:-1:-1;;;4548:77:21;;;;;;;;;;;;-1:-1:-1;;;4548:77:21;;;;;;;;;;;;;;;-1:-1:-1;;;;;4676:2:21;4651:27;;;;-1:-1:-1;;;;;4781:41:21;;4778:1;4774:49;4871:9;;;4944:18;4938:25;;4935:1;4931:33;5012:9;;;5085:10;5079:17;;5076:1;5072:25;5145:9;;;5218:6;5212:13;;5209:1;5205:21;5274:9;;;5347:4;5341:11;;5338:1;5334:19;;;5401:9;;;5474:3;5468:10;;5465:1;5461:18;5527:9;;;5594:10;;;5591:1;5587:18;;;5653:9;;;;5713:10;;;4984;;5117;;;5246;;;5373;5499;;;5625;5743;5784:3;5777:10;;5773:79;;5809:3;5803;:9;5793:5;:20;;5789:24;;5773:79;;;5848:3;5842;:9;5832:5;:20;;5828:24;;5773:79;5951:9;;;5946:3;5942:19;;;5983:11;;;;6055:9;;;;6120;;6111:19;;;6152:11;;;6224:9;6289;;6280:19;;;6321:11;;;6393:9;6458;;6449:19;;;6490:11;;;6562:9;6627;;6618:19;;;6659:11;;;6731:9;6796;;6787:19;;;6828:11;;;6900:9;6965;;6956:19;;;6997:11;;;7069:9;7134;;7125:19;;;7166:11;;;7238:9;7303;;7294:19;;;7335:11;;;7407:9;7472;;7463:19;;;7504:11;;;7576:9;7641;;7632:19;;;7673:11;;;7745:9;7810;;7801:19;;;7842:11;;;7914:9;7979;;7970:19;;;8011:11;;;;8083:9;;;;8148;;8139:19;;;;;5951:9;-1:-1:-1;;5879:17:21;;5901:2;5878:25;6026:10;;;;;;;6016:21;6195:10;;;;;;;6185:21;;;;6364:10;;;;;;;6354:21;;;;6533:10;;;;;;;6523:21;;;;6702:10;;;;;;;6692:21;;;;6871:10;;;;;;;6861:21;;;;7040:10;;;;;;;7030:21;7209:10;;;;;;;7199:21;7378:10;;;;;;;7368:21;7547:10;;;;;;;7537:21;7716:10;;;;;;;7706:21;7885:10;;;;;;;7875:21;8054:10;;;;;;;8044:21;8223:10;;;;;;;8213:21;8285:24;8277:32;;-1:-1:-1;;8361:53:21;;5893:3;8360:62;;;;8471:39;8455:55;;8454:64;;8537:17;;;;;;;;;:91;;8597:12;-1:-1:-1;;;;;8567:42:21;:26;8586:6;8567:18;:26::i;:::-;-1:-1:-1;;;;;8567:42:21;;;:61;;8621:7;8567:61;;;8612:6;8567:61;8537:91;;;8557:7;8537:91;8530:98;4354:4281;-1:-1:-1;;;;;;;;;4354:4281:21:o;11542:2594:30:-;11612:22;;-1:-1:-1;;;11612:22:30;;;;:54;;;;-1:-1:-1;11638:15:30;:23;:28;;11612:54;11590:122;;;;-1:-1:-1;;;11590:122:30;;;;;;;:::i;:::-;11748:15;:23;;11809:25;;;11723:22;12020:27;;;;-1:-1:-1;;;;;;12138:29:30;;;;;12246:27;;;;;;;;;;;;11748:23;;-1:-1:-1;;;;;11809:25:30;;;;11748:23;;11723:22;;;12326:20;;12322:725;;12440:306;;;;;;;;;;;-1:-1:-1;;;;;12440:306:30;;;;;;-1:-1:-1;12440:306:30;;;;;;;;;;12707:15;12440:306;;;;12384:381;;-1:-1:-1;;;12384:381:30;;-1:-1:-1;;;;;12384:15:30;:33;;;;:381;;12440:306;12384:381;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;12384:381:30;;;;;;;;-1:-1:-1;;12384:381:30;;;;;;;;;;;;:::i;:::-;;;12363:624;;;;:::i;:::-;;;;;;;;12895:6;-1:-1:-1;12363:624:30;;;-1:-1:-1;12943:28:30;;;;;;;;;;;;-1:-1:-1;;;12943:28:30;;;;12363:624;;;;;;12810:4;12798:16;;12363:624;12322:725;;;13031:4;13019:16;;12322:725;13218:253;;;;;;;;;;;13342:4;13218:253;;;;-1:-1:-1;;;;;13218:253:30;;;;;;;;;;13176:310;;-1:-1:-1;;;13176:310:30;;13106:15;;;;-1:-1:-1;;;;;13176:15:30;:23;;;;:310;;13218:253;13176:310;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13176:310:30;;;;;;;;-1:-1:-1;;13176:310:30;;;;;;;;;;;;:::i;:::-;;;13159:663;;;;:::i;:::-;;;;;;;;13670:22;;13666:50;;13710:6;13699:17;;13666:50;13617:111;13159:663;;;13754:22;;13750:60;;13783:27;;;;;;;;;;;;;-1:-1:-1;;;13783:27:30;;;;;13750:60;13159:663;;;13600:4;;-1:-1:-1;13566:2:30;;-1:-1:-1;13570:2:30;-1:-1:-1;13159:663:30;13869:9;13865:87;;;13899:30;;-1:-1:-1;;;13899:30:30;;-1:-1:-1;;;;;13899:15:30;:20;;;;:30;;13920:8;;13899:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13895:46;;13969:9;13968:10;:24;;;;13983:9;13982:10;13968:24;13964:103;;;14036:8;14014:41;14046:8;14014:41;;;;;;:::i;:::-;;;;;;;;13964:103;14101:8;14084:44;14111:7;14120;14084:44;;;;;;;:::i;:::-;;;;;;;;11542:2594;;;;;;;;:::o;14144:2288::-;14322:22;;-1:-1:-1;;;14322:22:30;;;;14321:23;14313:59;;;;-1:-1:-1;;;14313:59:30;;;;;;;:::i;:::-;14385:65;14453:475;;;;;;;;14519:6;-1:-1:-1;;;;;14453:475:30;;;;;14552:6;-1:-1:-1;;;;;14453:475:30;;;;;14582:3;14453:475;;;;;;14615:9;14453:475;;;;;;14654:9;14453:475;;;;;;14698:14;14453:475;;;;14747:14;14453:475;;;;14792:1;14453:475;;;;14824:1;14453:475;;;;14863:4;-1:-1:-1;;;;;14453:475:30;;;;;14897:15;14453:475;;;14385:543;;14941:15;14967:17;14995:21;15027;15065:15;-1:-1:-1;;;;;15065:20:30;;15086:6;15065:28;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15065:28:30;;;;;;;;-1:-1:-1;;15065:28:30;;;;;;;;;;;;:::i;:::-;;;15061:1364;;;;:::i;:::-;;;;;;;;16176:59;16196:14;16212;16228:6;16176:59;;;;;;;;:::i;:::-;;;;;;;;16122:125;15061:1364;;;16274:139;16312:14;16345;16274:139;;;;;;;:::i;:::-;;;;;;;;15061:1364;;;;15265:8;15255:18;;15300:10;15288:22;;15341:8;15325:24;;15380:8;15364:24;;15421:1;15409:9;-1:-1:-1;;;;;15409:13:30;;15405:705;;;15461:180;;;;;;;;15492:7;15461:180;;;;15522:9;-1:-1:-1;;;;;15461:180:30;;;;;15554:9;15461:180;;;;;;15586:9;15461:180;;;;;;15618:4;15461:180;;;;;15443:15;:198;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;15443:198:30;;;;;-1:-1:-1;;;;;15443:198:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15665:162;15705:7;15735:9;15767;15799;15665:162;;;;;;;;;:::i;:::-;;;;;;;;15405:705;;;15872:29;;-1:-1:-1;;;15872:29:30;;-1:-1:-1;;;;;15872:15:30;:20;;;;:29;;15893:7;;15872:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15868:45;15936:158;15978:14;16015;15936:158;;;;;;;:::i;:::-;;;;;;;;15405:705;15094:1027;;;;15061:1364;14144:2288;;;;;;;;;:::o;726:413:8:-;1086:20;1124:8;;;726:413::o;7091:725::-;7206:12;7234:7;7230:580;;;-1:-1:-1;7264:10:8;7257:17;;7230:580;7375:17;;:21;7371:429;;7633:10;7627:17;7693:15;7680:10;7676:2;7672:19;7665:44;7582:145;7772:12;7765:20;;-1:-1:-1;;;7765:20:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3253:1088:31;3301:9;3356:1;3381;3371:2;;3408:1;3403:6;;3371:2;-1:-1:-1;;;;;3444:1:31;3441:41;3438:2;;;3514:3;3507:11;;;;3541;3438:2;3590:18;3587:1;3584:25;3581:2;;;3641;3634:10;;;;3667;3581:2;3715:10;3712:1;3709:17;3706:2;;;3758;3751:10;;;;3784;3706:2;3832:6;3829:1;3826:13;3823:2;;;3871;3864:10;;;;3897;3823:2;3945:4;3942:1;3939:11;3936:2;;;3982:1;3975:9;;;;4007;3936:2;4054:3;4051:1;4048:10;4045:2;;;4090:1;4083:9;;;;4115;4045:2;4162:3;4159:1;4156:10;4153:2;;;4198:1;4191:9;;;;4223;4153:2;4270:3;4267:1;4264:10;4261:2;;;4306:1;4303;4299:9;4294:14;;4261:2;;3332:1002;;;:::o;2690:175:2:-;2748:7;2779:5;;;2802:6;;;;2794:46;;;;;-1:-1:-1;;;2794:46:2;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:2580:21;1418:20;1450:15;1475:1;1468:4;:8;;;:57;;1519:4;1512:12;;1468:57;;;1495:4;1488:12;;1487:13;;1468:57;1450:75;-1:-1:-1;637:9:21;1543:28;;;1535:42;;;;;-1:-1:-1;;;1535:42:21;;;;;;;;;;;;-1:-1:-1;;;1535:42:21;;;;;;;;;;;;;;;1588:13;1614:3;1604:13;;:93;;-1:-1:-1;;;1604:93:21;;;1625:34;1604:93;1588:109;;;-1:-1:-1;1721:3:21;1711:13;;:18;1707:83;;1748:34;1740:42;1787:3;1739:51;1707:83;1814:3;1804:13;;:18;1800:83;;1841:34;1833:42;1880:3;1832:51;1800:83;1907:3;1897:13;;:18;1893:83;;1934:34;1926:42;1973:3;1925:51;1893:83;2000:4;1990:14;;:19;1986:84;;2028:34;2020:42;2067:3;2019:51;1986:84;2094:4;2084:14;;:19;2080:84;;2122:34;2114:42;2161:3;2113:51;2080:84;2188:4;2178:14;;:19;2174:84;;2216:34;2208:42;2255:3;2207:51;2174:84;2282:4;2272:14;;:19;2268:84;;2310:34;2302:42;2349:3;2301:51;2268:84;2376:5;2366:15;;:20;2362:85;;2405:34;2397:42;2444:3;2396:51;2362:85;2471:5;2461:15;;:20;2457:85;;2500:34;2492:42;2539:3;2491:51;2457:85;2566:5;2556:15;;:20;2552:85;;2595:34;2587:42;2634:3;2586:51;2552:85;2661:5;2651:15;;:20;2647:85;;2690:34;2682:42;2729:3;2681:51;2647:85;2756:6;2746:16;;:21;2742:86;;2786:34;2778:42;2825:3;2777:51;2742:86;2852:6;2842:16;;:21;2838:86;;2882:34;2874:42;2921:3;2873:51;2838:86;2948:6;2938:16;;:21;2934:86;;2978:34;2970:42;3017:3;2969:51;2934:86;3044:6;3034:16;;:21;3030:86;;3074:34;3066:42;3113:3;3065:51;3030:86;3140:7;3130:17;;:22;3126:86;;3171:33;3163:41;3209:3;3162:50;3126:86;3236:7;3226:17;;:22;3222:85;;3267:32;3259:40;3304:3;3258:49;3222:85;3331:7;3321:17;;:22;3317:83;;3362:30;3354:38;3397:3;3353:47;3317:83;3424:7;3414:17;;:22;3410:78;;3455:25;3447:33;3485:3;3446:42;3410:78;3510:1;3503:4;:8;;;3499:47;;;3541:5;-1:-1:-1;;3521:25:21;;;;;;3513:33;;3499:47;3905:7;3896:5;:17;:22;:30;;3925:1;3896:30;;;3921:1;3896:30;3879:48;;3889:2;3880:5;:11;;3879:48;3856:72;;1355:2580;;;;;:::o;14:165:32:-;94:13;;147:6;136:18;;126:29;;116:2;;169:1;166;159:12;184:259;;296:2;284:9;275:7;271:23;267:32;264:2;;;317:6;309;302:22;264:2;361:9;348:23;380:33;407:5;380:33;:::i;448:263::-;;571:2;559:9;550:7;546:23;542:32;539:2;;;592:6;584;577:22;539:2;629:9;623:16;648:33;675:5;648:33;:::i;716:327::-;;;845:2;833:9;824:7;820:23;816:32;813:2;;;866:6;858;851:22;813:2;910:9;897:23;929:33;956:5;929:33;:::i;:::-;981:5;1033:2;1018:18;;;;1005:32;;-1:-1:-1;;;803:240:32:o;1048:470::-;;;;1194:2;1182:9;1173:7;1169:23;1165:32;1162:2;;;1215:6;1207;1200:22;1162:2;1259:9;1246:23;1278:33;1305:5;1278:33;:::i;:::-;1330:5;-1:-1:-1;1382:2:32;1367:18;;1354:32;;-1:-1:-1;1438:2:32;1423:18;;1410:32;1451:35;1410:32;1451:35;:::i;:::-;1505:7;1495:17;;;1152:366;;;;;:::o;1523:207::-;;1665:3;1653:9;1644:7;1640:23;1636:33;1633:2;;;1687:6;1679;1672:22;1999:1034;;;;;;;;2214:3;2202:9;2193:7;2189:23;2185:33;2182:2;;;2236:6;2228;2221:22;2182:2;2273:9;2267:16;2292:33;2319:5;2292:33;:::i;:::-;2344:5;2334:15;;;2394:2;2383:9;2379:18;2373:25;2443:7;2440:1;2429:22;2420:7;2417:35;2407:2;;2471:6;2463;2456:22;2407:2;2499:7;-1:-1:-1;2525:50:32;2571:2;2556:18;;2525:50;:::i;:::-;2515:60;;2594:50;2640:2;2629:9;2625:18;2594:50;:::i;:::-;2584:60;;2663:51;2709:3;2698:9;2694:19;2663:51;:::i;:::-;2653:61;;2759:3;2748:9;2744:19;2738:26;2808:4;2799:7;2795:18;2786:7;2783:31;2773:2;;2833:6;2825;2818:22;2773:2;2913:3;2898:19;;2892:26;2861:7;;-1:-1:-1;2956:15:32;;2949:23;2937:36;;2927:2;;2992:6;2984;2977:22;2927:2;3020:7;3010:17;;;2172:861;;;;;;;;;;:::o;3038:294::-;;3149:2;3137:9;3128:7;3124:23;3120:32;3117:2;;;3170:6;3162;3155:22;3117:2;3214:9;3201:23;3264:8;3257:5;3253:20;3246:5;3243:31;3233:2;;3293:6;3285;3278:22;3337:190;;3449:2;3437:9;3428:7;3424:23;3420:32;3417:2;;;3470:6;3462;3455:22;3417:2;-1:-1:-1;3498:23:32;;3407:120;-1:-1:-1;3407:120:32:o;3532:194::-;;3655:2;3643:9;3634:7;3630:23;3626:32;3623:2;;;3676:6;3668;3661:22;3623:2;-1:-1:-1;3704:16:32;;3613:113;-1:-1:-1;3613:113:32:o;3731:327::-;;;3860:2;3848:9;3839:7;3835:23;3831:32;3828:2;;;3881:6;3873;3866:22;3828:2;3922:9;3909:23;3899:33;;3982:2;3971:9;3967:18;3954:32;3995:33;4022:5;3995:33;:::i;:::-;4047:5;4037:15;;;3818:240;;;;;:::o;4063:335::-;;;4200:2;4188:9;4179:7;4175:23;4171:32;4168:2;;;4221:6;4213;4206:22;4403:509;;;;;4577:3;4565:9;4556:7;4552:23;4548:33;4545:2;;;4599:6;4591;4584:22;4545:2;4633:9;4627:16;4617:26;;4686:2;4675:9;4671:18;4665:25;-1:-1:-1;;;;;4723:5:32;4719:46;4712:5;4709:57;4699:2;;4785:6;4777;4770:22;4699:2;4858;4843:18;;4837:25;4902:2;4887:18;;;4881:25;4535:377;;4813:5;;-1:-1:-1;4535:377:32;-1:-1:-1;;;4535:377:32:o;4917:255::-;;;5057:2;5045:9;5036:7;5032:23;5028:32;5025:2;;;5078:6;5070;5063:22;5025:2;-1:-1:-1;;5106:16:32;;5162:2;5147:18;;;5141:25;5106:16;;5141:25;;-1:-1:-1;5015:157:32:o;5177:777::-;;;;;5342:2;5330:9;5321:7;5317:23;5313:32;5310:2;;;5363:6;5355;5348:22;5310:2;5404:9;5391:23;5381:33;;5461:2;5450:9;5446:18;5433:32;5423:42;;5516:2;5505:9;5501:18;5488:32;5539:18;5580:2;5572:6;5569:14;5566:2;;;5601:6;5593;5586:22;5566:2;5644:6;5633:9;5629:22;5619:32;;5689:7;5682:4;5678:2;5674:13;5670:27;5660:2;;5716:6;5708;5701:22;5660:2;5761;5748:16;5787:2;5779:6;5776:14;5773:2;;;5808:6;5800;5793:22;5773:2;5858:7;5853:2;5844:6;5840:2;5836:15;5832:24;5829:37;5826:2;;;5884:6;5876;5869:22;5826:2;5300:654;;;;-1:-1:-1;;5920:2:32;5912:11;;-1:-1:-1;;;5300:654:32:o;5959:106::-;-1:-1:-1;;;;;6027:31:32;6015:44;;6005:60::o;6070:93::-;6147:1;6136:20;6124:33;;6114:49::o;6168:478::-;;6250:5;6244:12;6277:6;6272:3;6265:19;6302:3;6314:162;6328:6;6325:1;6322:13;6314:162;;;6390:4;6446:13;;;6442:22;;6436:29;6418:11;;;6414:20;;6407:59;6343:12;6314:162;;;6494:6;6491:1;6488:13;6485:2;;;6560:3;6553:4;6544:6;6539:3;6535:16;6531:27;6524:40;6485:2;-1:-1:-1;6628:2:32;6607:15;-1:-1:-1;;6603:29:32;6594:39;;;;6635:4;6590:50;;6220:426;-1:-1:-1;;6220:426:32:o;6651:94::-;6729:8;6718:20;6706:33;;6696:49::o;6750:203::-;-1:-1:-1;;;;;6914:32:32;;;;6896:51;;6884:2;6869:18;;6851:102::o;7174:388::-;-1:-1:-1;;;;;7430:15:32;;;7412:34;;7482:15;;;;7477:2;7462:18;;7455:43;7546:8;7534:21;;;7529:2;7514:18;;7507:49;7362:2;7347:18;;7329:233::o;8273:188::-;8444:1;8433:21;;;;8415:40;;8403:2;8388:18;;8370:91::o;8466:222::-;;8615:2;8604:9;8597:21;8635:47;8678:2;8667:9;8663:18;8655:6;8635:47;:::i;8693:342::-;8895:2;8877:21;;;8934:2;8914:18;;;8907:30;-1:-1:-1;;;8968:2:32;8953:18;;8946:48;9026:2;9011:18;;8867:168::o;9040:348::-;9242:2;9224:21;;;9281:2;9261:18;;;9254:30;9320:26;9315:2;9300:18;;9293:54;9379:2;9364:18;;9214:174::o;9393:345::-;9595:2;9577:21;;;9634:2;9614:18;;;9607:30;-1:-1:-1;;;9668:2:32;9653:18;;9646:51;9729:2;9714:18;;9567:171::o;9743:345::-;9945:2;9927:21;;;9984:2;9964:18;;;9957:30;-1:-1:-1;;;10018:2:32;10003:18;;9996:51;10079:2;10064:18;;9917:171::o;10093:344::-;10295:2;10277:21;;;10334:2;10314:18;;;10307:30;-1:-1:-1;;;10368:2:32;10353:18;;10346:50;10428:2;10413:18;;10267:170::o;10442:347::-;10644:2;10626:21;;;10683:2;10663:18;;;10656:30;10722:25;10717:2;10702:18;;10695:53;10780:2;10765:18;;10616:173::o;10794:344::-;10996:2;10978:21;;;11035:2;11015:18;;;11008:30;-1:-1:-1;;;11069:2:32;11054:18;;11047:50;11129:2;11114:18;;10968:170::o;11143:346::-;11345:2;11327:21;;;11384:2;11364:18;;;11357:30;-1:-1:-1;;;11418:2:32;11403:18;;11396:52;11480:2;11465:18;;11317:172::o;11494:340::-;11696:2;11678:21;;;11735:2;11715:18;;;11708:30;-1:-1:-1;;;11769:2:32;11754:18;;11747:46;11825:2;11810:18;;11668:166::o;11839:341::-;12041:2;12023:21;;;12080:2;12060:18;;;12053:30;-1:-1:-1;;;12114:2:32;12099:18;;12092:47;12171:2;12156:18;;12013:167::o;12185:343::-;12387:2;12369:21;;;12426:2;12406:18;;;12399:30;-1:-1:-1;;;12460:2:32;12445:18;;12438:49;12519:2;12504:18;;12359:169::o;12533:342::-;12735:2;12717:21;;;12774:2;12754:18;;;12747:30;-1:-1:-1;;;12808:2:32;12793:18;;12786:48;12866:2;12851:18;;12707:168::o;12880:342::-;13082:2;13064:21;;;13121:2;13101:18;;;13094:30;-1:-1:-1;;;13155:2:32;13140:18;;13133:48;13213:2;13198:18;;13054:168::o;13227:340::-;13429:2;13411:21;;;13468:2;13448:18;;;13441:30;-1:-1:-1;;;13502:2:32;13487:18;;13480:46;13558:2;13543:18;;13401:166::o;13572:349::-;13774:2;13756:21;;;13813:2;13793:18;;;13786:30;13852:27;13847:2;13832:18;;13825:55;13912:2;13897:18;;13746:175::o;13926:339::-;14128:2;14110:21;;;14167:2;14147:18;;;14140:30;-1:-1:-1;;;14201:2:32;14186:18;;14179:45;14256:2;14241:18;;14100:165::o;14270:341::-;14472:2;14454:21;;;14511:2;14491:18;;;14484:30;-1:-1:-1;;;14545:2:32;14530:18;;14523:47;14602:2;14587:18;;14444:167::o;14616:337::-;14818:2;14800:21;;;14857:2;14837:18;;;14830:30;-1:-1:-1;;;14891:2:32;14876:18;;14869:43;14944:2;14929:18;;14790:163::o;14958:349::-;15160:2;15142:21;;;15199:2;15179:18;;;15172:30;15238:27;15233:2;15218:18;;15211:55;15298:2;15283:18;;15132:175::o;15312:432::-;15541:2;15523:21;;;15580:2;15560:18;;;15553:30;-1:-1:-1;;;15614:2:32;15599:18;;15592:50;15728:8;15716:21;;;;15709:4;15694:20;;15687:51;15674:3;15659:19;;15513:231::o;15749:574::-;15976:13;;15958:32;;16050:4;16038:17;;;16032:24;-1:-1:-1;;;;;16028:50:32;16006:20;;;15999:80;16126:4;16114:17;;;16108:24;-1:-1:-1;;;;;16223:21:32;;;16201:20;;;16194:51;;;;16305:4;16293:17;;;16287:24;16283:33;16261:20;;;16254:63;;;;15945:3;15930:19;;15912:411::o;16328:560::-;;16544:3;16533:9;16529:19;16521:27;;16581:6;16575:13;16564:9;16557:32;-1:-1:-1;;;;;16649:4:32;16641:6;16637:17;16631:24;16627:65;16620:4;16609:9;16605:20;16598:95;16749:4;16741:6;16737:17;16731:24;16724:4;16713:9;16709:20;16702:54;16812:4;16804:6;16800:17;16794:24;16787:4;16776:9;16772:20;16765:54;16875:4;16867:6;16863:17;16857:24;16850:4;16839:9;16835:20;16828:54;16511:377;;;;:::o;16893:795::-;17180:13;;-1:-1:-1;;;;;17176:22:32;;;17158:41;;17259:4;17247:17;;;17241:24;17237:33;;17215:20;;;17208:63;17331:4;17319:17;;;17313:24;17339:8;17309:39;17287:20;;;17280:69;17409:4;17397:17;;;17391:24;17387:33;;17365:20;;;17358:63;17477:4;17465:17;;;17459:24;17437:20;;;17430:54;17138:3;17528:17;;;17522:24;17500:20;;;17493:54;17603:4;17591:17;;;17585:24;17563:20;;;17556:54;17670:4;17658:17;;;17652:24;17648:33;17626:20;;;17619:63;;;;17107:3;17092:19;;17074:614::o;17693:1234::-;;17883:3;17872:9;17868:19;17860:27;;17896:46;17932:9;17923:6;17917:13;17896:46;:::i;:::-;17989:4;17981:6;17977:17;17971:24;18004:56;18054:4;18043:9;18039:20;18025:12;18004:56;:::i;:::-;;18109:4;18101:6;18097:17;18091:24;18124:57;18175:4;18164:9;18160:20;18144:14;18124:57;:::i;:::-;;18230:4;18222:6;18218:17;18212:24;18245:56;18295:4;18284:9;18280:20;18264:14;18245:56;:::i;:::-;;18350:4;18342:6;18338:17;18332:24;18365:56;18415:4;18404:9;18400:20;18384:14;18365:56;:::i;:::-;;18477:4;18469:6;18465:17;18459:24;18452:4;18441:9;18437:20;18430:54;18540:4;18532:6;18528:17;18522:24;18515:4;18504:9;18500:20;18493:54;18603:4;18595:6;18591:17;18585:24;18578:4;18567:9;18563:20;18556:54;18629:6;18689:2;18681:6;18677:15;18671:22;18666:2;18655:9;18651:18;18644:50;;18713:6;18768:2;18760:6;18756:15;18750:22;18781:56;18833:2;18822:9;18818:18;18802:14;18781:56;:::i;:::-;-1:-1:-1;;18856:6:32;18904:15;;;18898:22;18878:18;;;;18871:50;17850:1077;:::o;18932:190::-;19106:8;19094:21;;;;19076:40;;19064:2;19049:18;;19031:91::o;19127:177::-;19273:25;;;19261:2;19246:18;;19228:76::o;19309:454::-;19532:25;;;19604:1;19593:21;;;19588:2;19573:18;;19566:49;19651:21;;19646:2;19631:18;;19624:49;-1:-1:-1;;;;;19709:47:32;19704:2;19689:18;;19682:75;19519:3;19504:19;;19486:277::o;19768:536::-;20013:25;;;-1:-1:-1;;;;;20074:47:32;;;;20069:2;20054:18;;20047:75;20169:1;20158:21;;;20153:2;20138:18;;20131:49;20216:21;;20211:2;20196:18;;20189:49;20282:14;20275:22;20269:3;20254:19;;20247:51;20000:3;19985:19;;19967:337::o;20309:248::-;20483:25;;;20539:2;20524:18;;20517:34;20471:2;20456:18;;20438:119::o;20562:567::-;20835:25;;;20891:2;20876:18;;20869:34;;;;20950:1;20939:21;;;20934:2;20919:18;;20912:49;20997:21;;20992:2;20977:18;;20970:49;21063:14;21056:22;21050:3;21035:19;;21028:51;21110:3;21095:19;;21088:35;20822:3;20807:19;;20789:340::o;21134:364::-;;21339:6;21328:9;21321:25;21382:6;21377:2;21366:9;21362:18;21355:34;21425:2;21420;21409:9;21405:18;21398:30;21445:47;21488:2;21477:9;21473:18;21465:6;21445:47;:::i;:::-;21437:55;21311:187;-1:-1:-1;;;;;21311:187:32:o;21503:486::-;21743:25;;;21799:2;21784:18;;21777:34;21847:2;21842;21827:18;;21820:30;;;21886:2;21866:18;;;21859:30;-1:-1:-1;;;21920:3:32;21905:19;;21898:49;21979:3;21964:19;;21733:256::o;21994:489::-;22234:25;;;22290:2;22275:18;;22268:34;22338:2;22333;22318:18;;22311:30;;;22377:2;22357:18;;;22350:30;-1:-1:-1;;;22411:3:32;22396:19;;22389:52;22473:3;22458:19;;22224:259::o;22488:319::-;22690:25;;;22746:2;22731:18;;22724:34;;;;22789:2;22774:18;;22767:34;22678:2;22663:18;;22645:162::o;22812:908::-;23195:25;;;23251:2;23236:18;;23229:34;;;;23294:2;23279:18;;23272:34;;;;23353:1;23342:21;;;23337:2;23322:18;;23315:49;23401:21;;;23395:3;23380:19;;23373:50;23460:21;;;23454:3;23439:19;;23432:50;23519:21;;;23513:3;23498:19;;23491:50;-1:-1:-1;;;;;23578:47:32;23572:3;23557:19;;23550:76;23657:3;23642:19;;23635:35;23701:3;23686:19;;23679:35;23182:3;23167:19;;23149:571::o;23725:184::-;23897:4;23885:17;;;;23867:36;;23855:2;23840:18;;23822:87::o;23914:88::-;23989:3;23985:15;;23971:31::o;24007:764::-;;24088:4;24070:16;24067:26;24064:2;;;24096:5;;24064:2;24137:1;24132:3;24127;24112:27;24199:10;24161:36;24192:3;24186:10;24161:36;:::i;:::-;24158:52;24148:2;;24214:5;;24148:2;24248;24242:9;24288:16;-1:-1:-1;;24284:29:32;24281:1;24242:9;24260:54;24343:4;24337:11;24367:16;24402:18;24473:2;24466:4;24458:6;24454:17;24451:25;24446:2;24438:6;24435:14;24432:45;24429:2;;;24480:5;;;;;;24429:2;24517:6;24511:4;24507:17;24496:28;;24553:3;24547:10;24533:24;;24580:2;24572:6;24569:14;24566:2;;;24586:5;;;;;;24566:2;;24647:16;24641:4;24637:27;24630:4;24621:6;24616:3;24612:16;24608:27;24605:60;24602:2;;;24668:5;;;;;24602:2;24733;24712:15;-1:-1:-1;;24708:29:32;24699:39;;24740:4;24695:50;24691:2;24684:62;24703:3;-1:-1:-1;;24054:717:32;:::o;24776:133::-;-1:-1:-1;;;;;24853:31:32;;24843:42;;24833:2;;24899:1;24896;24889:12"},"gasEstimates":{"creation":{"codeDepositCost":"3838800","executionCost":"infinite","totalCost":"infinite"},"external":{"WETH9()":"infinite","currentPosition()":"2137","depositETH()":"infinite","depositToken(address,uint256)":"infinite","factory()":"infinite","fee()":"infinite","getActivePositionDetails()":"2166","getContractBalances()":"infinite","getPoolAddress()":"infinite","owner()":"1139","positionManager()":"infinite","rangeWidthMultiplier()":"1093","refundETH()":"infinite","renounceOwnership()":"infinite","setRangeWidthMultiplier(uint24)":"infinite","swap((address,address,uint24,uint256,uint256,uint160))":"infinite","swapRouter()":"infinite","sweepToken(address,uint256,address)":"infinite","tickSpacing()":"infinite","token0()":"infinite","token0Decimals()":"infinite","token1()":"infinite","token1Decimals()":"infinite","transferOwnership(address)":"infinite","uniswapV3MintCallback(uint256,uint256,bytes)":"infinite","unwrapWETH9(uint256,address)":"infinite","updatePredictionAndAdjust(uint256)":"infinite","withdrawETH(uint256,address)":"infinite","withdrawToken(address,uint256,address)":"infinite"},"internal":{"_adjustLiquidity(int24,int24)":"infinite","_calculateTicks(int24)":"infinite","_emitOperationReported(uint256,uint256,int24,int24,bool,uint256)":"infinite","_getCurrentSqrtPriceAndTick()":"infinite","_mintLiquidity(int24,int24,uint256,uint256)":"infinite","_priceToTick(uint256)":"infinite","_removeLiquidity()":"infinite","_sqrtPriceX96ToPrice(uint160)":"infinite","abs(int256)":"infinite"}},"methodIdentifiers":{"WETH9()":"4aa4a4fc","currentPosition()":"d534d636","depositETH()":"f6326fb3","depositToken(address,uint256)":"338b5dea","factory()":"c45a0155","fee()":"ddca3f43","getActivePositionDetails()":"479c2e76","getContractBalances()":"ffd2a7d3","getPoolAddress()":"f586c6d9","owner()":"8da5cb5b","positionManager()":"791b98bc","rangeWidthMultiplier()":"01d31e7c","refundETH()":"12210e8a","renounceOwnership()":"715018a6","setRangeWidthMultiplier(uint24)":"1ee0b02e","swap((address,address,uint24,uint256,uint256,uint160))":"516606eb","swapRouter()":"c31c9c07","sweepToken(address,uint256,address)":"df2ab5bb","tickSpacing()":"d0c93a7c","token0()":"0dfe1681","token0Decimals()":"b31ac6e2","token1()":"d21220a7","token1Decimals()":"0b77884d","transferOwnership(address)":"f2fde38b","uniswapV3MintCallback(uint256,uint256,bytes)":"d3487997","unwrapWETH9(uint256,address)":"49404b7c","updatePredictionAndAdjust(uint256)":"41675b05","withdrawETH(uint256,address)":"36118b52","withdrawToken(address,uint256,address)":"3ccdbb28"}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_positionManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_swapRouter\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token0\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_token1\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"_fee\",\"type\":\"uint24\"},{\"internalType\":\"address\",\"name\":\"_weth9\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"}],\"name\":\"LiquidityAdjusted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"currentTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"predictedTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"LiquidityManagementMetrics\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Desired\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Desired\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"LiquidityMintFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"LiquidityRemoveFailed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"actualPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"predictedPrice\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"currentTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"int24\",\"name\":\"predictedTick\",\"type\":\"int24\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"adjusted\",\"type\":\"bool\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasUsed\",\"type\":\"uint256\"}],\"name\":\"OperationReported\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"paramName\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"StrategyParamUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"name\":\"Swapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"WETH9\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentPosition\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"depositToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"contract IUniswapV3Factory\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fee\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getActivePositionDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint128\",\"name\":\"liquidity\",\"type\":\"uint128\"},{\"internalType\":\"int24\",\"name\":\"tickLower\",\"type\":\"int24\"},{\"internalType\":\"int24\",\"name\":\"tickUpper\",\"type\":\"int24\"},{\"internalType\":\"bool\",\"name\":\"active\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractBalances\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balance1\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"balanceWETH\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPoolAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"positionManager\",\"outputs\":[{\"internalType\":\"contract INonfungiblePositionManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rangeWidthMultiplier\",\"outputs\":[{\"internalType\":\"uint24\",\"name\":\"\",\"type\":\"uint24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"refundETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint24\",\"name\":\"_multiplier\",\"type\":\"uint24\"}],\"name\":\"setRangeWidthMultiplier\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"internalType\":\"uint24\",\"name\":\"poolFee\",\"type\":\"uint24\"},{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOutMinimum\",\"type\":\"uint256\"},{\"internalType\":\"uint160\",\"name\":\"sqrtPriceLimitX96\",\"type\":\"uint160\"}],\"internalType\":\"struct PredictiveLiquidityManagerFinal.SwapParams\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapRouter\",\"outputs\":[{\"internalType\":\"contract ISwapRouter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"sweepToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tickSpacing\",\"outputs\":[{\"internalType\":\"int24\",\"name\":\"\",\"type\":\"int24\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0Decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1Decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Owed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Owed\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"uniswapV3MintCallback\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountMinimum\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"unwrapWETH9\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"predictedPriceDecimal\",\"type\":\"uint256\"}],\"name\":\"updatePredictionAndAdjust\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address payable\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_recipient\",\"type\":\"address\"}],\"name\":\"withdrawToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PredictiveLiquidityManagerFinal.sol\":\"PredictiveLiquidityManagerFinal\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor () internal {\\n        address msgSender = _msgSender();\\n        _owner = msgSender;\\n        emit OwnershipTransferred(address(0), msgSender);\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n        _;\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        emit OwnershipTransferred(_owner, address(0));\\n        _owner = address(0);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        emit OwnershipTransferred(_owner, newOwner);\\n        _owner = newOwner;\\n    }\\n}\\n\",\"keccak256\":\"0x15e2d5bd4c28a88548074c54d220e8086f638a71ed07e6b3ba5a70066fcf458d\",\"license\":\"MIT\"},\"@openzeppelin/contracts/introspection/IERC165.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC165 standard, as defined in the\\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\\n *\\n * Implementers can declare support of contract interfaces, which can then be\\n * queried by others ({ERC165Checker}).\\n *\\n * For an implementation, see {ERC165}.\\n */\\ninterface IERC165 {\\n    /**\\n     * @dev Returns true if this contract implements the interface defined by\\n     * `interfaceId`. See the corresponding\\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\\n     * to learn more about how these ids are created.\\n     *\\n     * This function call must use less than 30 000 gas.\\n     */\\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\\n}\\n\",\"keccak256\":\"0xf70bc25d981e4ec9673a995ad2995d5d493ea188d3d8f388bba9c227ce09fb82\",\"license\":\"MIT\"},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\n */\\ninterface IERC20 {\\n    /**\\n     * @dev Returns the amount of tokens in existence.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns the amount of tokens owned by `account`.\\n     */\\n    function balanceOf(address account) external view returns (uint256);\\n\\n    /**\\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transfer(address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Returns the remaining number of tokens that `spender` will be\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\n     * zero by default.\\n     *\\n     * This value changes when {approve} or {transferFrom} are called.\\n     */\\n    function allowance(address owner, address spender) external view returns (uint256);\\n\\n    /**\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\n     * that someone may use both the old and the new allowance by unfortunate\\n     * transaction ordering. One possible solution to mitigate this race\\n     * condition is to first reduce the spender's allowance to 0 and set the\\n     * desired value afterwards:\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address spender, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\\n     * allowance mechanism. `amount` is then deducted from the caller's\\n     * allowance.\\n     *\\n     * Returns a boolean value indicating whether the operation succeeded.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n\\n    /**\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\n     * another (`to`).\\n     *\\n     * Note that `value` may be zero.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n\\n    /**\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\n     * a call to {approve}. `value` is the new allowance.\\n     */\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\n}\\n\",\"keccak256\":\"0x5f02220344881ce43204ae4a6281145a67bc52c2bb1290a791857df3d19d78f5\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\nimport \\\"./IERC20.sol\\\";\\nimport \\\"../../math/SafeMath.sol\\\";\\nimport \\\"../../utils/Address.sol\\\";\\n\\n/**\\n * @title SafeERC20\\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\\n * contract returns false). Tokens that return no value (and instead revert or\\n * throw on failure) are also supported, non-reverting calls are assumed to be\\n * successful.\\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\\n */\\nlibrary SafeERC20 {\\n    using SafeMath for uint256;\\n    using Address for address;\\n\\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\\n    }\\n\\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\\n    }\\n\\n    /**\\n     * @dev Deprecated. This function has issues similar to the ones found in\\n     * {IERC20-approve}, and its usage is discouraged.\\n     *\\n     * Whenever possible, use {safeIncreaseAllowance} and\\n     * {safeDecreaseAllowance} instead.\\n     */\\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\\n        // safeApprove should only be called when setting an initial allowance,\\n        // or when resetting it to zero. To increase and decrease it, use\\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\\n        // solhint-disable-next-line max-line-length\\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\\n            \\\"SafeERC20: approve from non-zero to non-zero allowance\\\"\\n        );\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\\n    }\\n\\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \\\"SafeERC20: decreased allowance below zero\\\");\\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\\n    }\\n\\n    /**\\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\\n     * @param token The token targeted by the call.\\n     * @param data The call data (encoded using abi.encode or one of its variants).\\n     */\\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\\n        // the target address contains contract code and also asserts for success in the low-level call.\\n\\n        bytes memory returndata = address(token).functionCall(data, \\\"SafeERC20: low-level call failed\\\");\\n        if (returndata.length > 0) { // Return data is optional\\n            // solhint-disable-next-line max-line-length\\n            require(abi.decode(returndata, (bool)), \\\"SafeERC20: ERC20 operation did not succeed\\\");\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0xf12dfbe97e6276980b83d2830bb0eb75e0cf4f3e626c2471137f82158ae6a0fc\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"../../introspection/IERC165.sol\\\";\\n\\n/**\\n * @dev Required interface of an ERC721 compliant contract.\\n */\\ninterface IERC721 is IERC165 {\\n    /**\\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\\n     */\\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\\n     */\\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\\n\\n    /**\\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\\n     */\\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\\n\\n    /**\\n     * @dev Returns the number of tokens in ``owner``'s account.\\n     */\\n    function balanceOf(address owner) external view returns (uint256 balance);\\n\\n    /**\\n     * @dev Returns the owner of the `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function ownerOf(uint256 tokenId) external view returns (address owner);\\n\\n    /**\\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must exist and be owned by `from`.\\n     * - If the caller is not `from`, it must be have been allowed to move this token by either {approve} or {setApprovalForAll}.\\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Transfers `tokenId` token from `from` to `to`.\\n     *\\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\\n     *\\n     * Requirements:\\n     *\\n     * - `from` cannot be the zero address.\\n     * - `to` cannot be the zero address.\\n     * - `tokenId` token must be owned by `from`.\\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n     *\\n     * Emits a {Transfer} event.\\n     */\\n    function transferFrom(address from, address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\\n     * The approval is cleared when the token is transferred.\\n     *\\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\\n     *\\n     * Requirements:\\n     *\\n     * - The caller must own the token or be an approved operator.\\n     * - `tokenId` must exist.\\n     *\\n     * Emits an {Approval} event.\\n     */\\n    function approve(address to, uint256 tokenId) external;\\n\\n    /**\\n     * @dev Returns the account approved for `tokenId` token.\\n     *\\n     * Requirements:\\n     *\\n     * - `tokenId` must exist.\\n     */\\n    function getApproved(uint256 tokenId) external view returns (address operator);\\n\\n    /**\\n     * @dev Approve or remove `operator` as an operator for the caller.\\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\\n     *\\n     * Requirements:\\n     *\\n     * - The `operator` cannot be the caller.\\n     *\\n     * Emits an {ApprovalForAll} event.\\n     */\\n    function setApprovalForAll(address operator, bool _approved) external;\\n\\n    /**\\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\\n     *\\n     * See {setApprovalForAll}\\n     */\\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\\n\\n    /**\\n      * @dev Safely transfers `tokenId` token from `from` to `to`.\\n      *\\n      * Requirements:\\n      *\\n      * - `from` cannot be the zero address.\\n      * - `to` cannot be the zero address.\\n      * - `tokenId` token must exist and be owned by `from`.\\n      * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\\n      * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\\n      *\\n      * Emits a {Transfer} event.\\n      */\\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\\n}\\n\",\"keccak256\":\"0x2d99a0deb6648c34fbc66d6ac4a2d64798d7a5321b45624f6736fadc63da1962\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional enumeration extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Enumerable is IERC721 {\\n\\n    /**\\n     * @dev Returns the total amount of tokens stored by the contract.\\n     */\\n    function totalSupply() external view returns (uint256);\\n\\n    /**\\n     * @dev Returns a token ID owned by `owner` at a given `index` of its token list.\\n     * Use along with {balanceOf} to enumerate all of ``owner``'s tokens.\\n     */\\n    function tokenOfOwnerByIndex(address owner, uint256 index) external view returns (uint256 tokenId);\\n\\n    /**\\n     * @dev Returns a token ID at a given `index` of all the tokens stored by the contract.\\n     * Use along with {totalSupply} to enumerate all tokens.\\n     */\\n    function tokenByIndex(uint256 index) external view returns (uint256);\\n}\\n\",\"keccak256\":\"0xe6bd1b1218338b6f9fe17776f48623b4ac3d8a40405f74a44bc23c00abe2ca13\",\"license\":\"MIT\"},\"@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\nimport \\\"./IERC721.sol\\\";\\n\\n/**\\n * @title ERC-721 Non-Fungible Token Standard, optional metadata extension\\n * @dev See https://eips.ethereum.org/EIPS/eip-721\\n */\\ninterface IERC721Metadata is IERC721 {\\n\\n    /**\\n     * @dev Returns the token collection name.\\n     */\\n    function name() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the token collection symbol.\\n     */\\n    function symbol() external view returns (string memory);\\n\\n    /**\\n     * @dev Returns the Uniform Resource Identifier (URI) for `tokenId` token.\\n     */\\n    function tokenURI(uint256 tokenId) external view returns (string memory);\\n}\\n\",\"keccak256\":\"0xccb917776f826ac6b68bd5a15a5f711e3967848a52ba11e6104d9a4f593314a7\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Address.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.2 <0.8.0;\\n\\n/**\\n * @dev Collection of functions related to the address type\\n */\\nlibrary Address {\\n    /**\\n     * @dev Returns true if `account` is a contract.\\n     *\\n     * [IMPORTANT]\\n     * ====\\n     * It is unsafe to assume that an address for which this function returns\\n     * false is an externally-owned account (EOA) and not a contract.\\n     *\\n     * Among others, `isContract` will return false for the following\\n     * types of addresses:\\n     *\\n     *  - an externally-owned account\\n     *  - a contract in construction\\n     *  - an address where a contract will be created\\n     *  - an address where a contract lived, but was destroyed\\n     * ====\\n     */\\n    function isContract(address account) internal view returns (bool) {\\n        // This method relies on extcodesize, which returns 0 for contracts in\\n        // construction, since the code is only stored at the end of the\\n        // constructor execution.\\n\\n        uint256 size;\\n        // solhint-disable-next-line no-inline-assembly\\n        assembly { size := extcodesize(account) }\\n        return size > 0;\\n    }\\n\\n    /**\\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\\n     * `recipient`, forwarding all available gas and reverting on errors.\\n     *\\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\\n     * imposed by `transfer`, making them unable to receive funds via\\n     * `transfer`. {sendValue} removes this limitation.\\n     *\\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\\n     *\\n     * IMPORTANT: because control is transferred to `recipient`, care must be\\n     * taken to not create reentrancy vulnerabilities. Consider using\\n     * {ReentrancyGuard} or the\\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\\n     */\\n    function sendValue(address payable recipient, uint256 amount) internal {\\n        require(address(this).balance >= amount, \\\"Address: insufficient balance\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\\n        (bool success, ) = recipient.call{ value: amount }(\\\"\\\");\\n        require(success, \\\"Address: unable to send value, recipient may have reverted\\\");\\n    }\\n\\n    /**\\n     * @dev Performs a Solidity function call using a low level `call`. A\\n     * plain`call` is an unsafe replacement for a function call: use this\\n     * function instead.\\n     *\\n     * If `target` reverts with a revert reason, it is bubbled up by this\\n     * function (like regular Solidity function calls).\\n     *\\n     * Returns the raw returned data. To convert to the expected return value,\\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\\n     *\\n     * Requirements:\\n     *\\n     * - `target` must be a contract.\\n     * - calling `target` with `data` must not revert.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\\n      return functionCall(target, data, \\\"Address: low-level call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\\n     * `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, 0, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but also transferring `value` wei to `target`.\\n     *\\n     * Requirements:\\n     *\\n     * - the calling contract must have an ETH balance of at least `value`.\\n     * - the called Solidity function must be `payable`.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\\n        return functionCallWithValue(target, data, value, \\\"Address: low-level call with value failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\\n     *\\n     * _Available since v3.1._\\n     */\\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\\n        require(address(this).balance >= value, \\\"Address: insufficient balance for call\\\");\\n        require(isContract(target), \\\"Address: call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\\n        return functionStaticCall(target, data, \\\"Address: low-level static call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a static call.\\n     *\\n     * _Available since v3.3._\\n     */\\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\\n        require(isContract(target), \\\"Address: static call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.staticcall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\\n        return functionDelegateCall(target, data, \\\"Address: low-level delegate call failed\\\");\\n    }\\n\\n    /**\\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\\n     * but performing a delegate call.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function functionDelegateCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\\n        require(isContract(target), \\\"Address: delegate call to non-contract\\\");\\n\\n        // solhint-disable-next-line avoid-low-level-calls\\n        (bool success, bytes memory returndata) = target.delegatecall(data);\\n        return _verifyCallResult(success, returndata, errorMessage);\\n    }\\n\\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\\n        if (success) {\\n            return returndata;\\n        } else {\\n            // Look for revert reason and bubble it up if present\\n            if (returndata.length > 0) {\\n                // The easiest way to bubble the revert reason is using memory via assembly\\n\\n                // solhint-disable-next-line no-inline-assembly\\n                assembly {\\n                    let returndata_size := mload(returndata)\\n                    revert(add(32, returndata), returndata_size)\\n                }\\n            } else {\\n                revert(errorMessage);\\n            }\\n        }\\n    }\\n}\\n\",\"keccak256\":\"0x28911e614500ae7c607a432a709d35da25f3bc5ddc8bd12b278b66358070c0ea\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/*\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with GSN meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address payable) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes memory) {\\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0x8d3cb350f04ff49cfb10aef08d87f19dcbaecc8027b0bed12f3275cd12f38cf0\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Contract module that helps prevent reentrant calls to a function.\\n *\\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\\n * available, which can be applied to functions to make sure there are no nested\\n * (reentrant) calls to them.\\n *\\n * Note that because there is a single `nonReentrant` guard, functions marked as\\n * `nonReentrant` may not call one another. This can be worked around by making\\n * those functions `private`, and then adding `external` `nonReentrant` entry\\n * points to them.\\n *\\n * TIP: If you would like to learn more about reentrancy and alternative ways\\n * to protect against it, check out our blog post\\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\\n */\\nabstract contract ReentrancyGuard {\\n    // Booleans are more expensive than uint256 or any type that takes up a full\\n    // word because each write operation emits an extra SLOAD to first read the\\n    // slot's contents, replace the bits taken up by the boolean, and then write\\n    // back. This is the compiler's defense against contract upgrades and\\n    // pointer aliasing, and it cannot be disabled.\\n\\n    // The values being non-zero value makes deployment a bit more expensive,\\n    // but in exchange the refund on every call to nonReentrant will be lower in\\n    // amount. Since refunds are capped to a percentage of the total\\n    // transaction's gas, it is best to keep them low in cases like this one, to\\n    // increase the likelihood of the full refund coming into effect.\\n    uint256 private constant _NOT_ENTERED = 1;\\n    uint256 private constant _ENTERED = 2;\\n\\n    uint256 private _status;\\n\\n    constructor () internal {\\n        _status = _NOT_ENTERED;\\n    }\\n\\n    /**\\n     * @dev Prevents a contract from calling itself, directly or indirectly.\\n     * Calling a `nonReentrant` function from another `nonReentrant`\\n     * function is not supported. It is possible to prevent this from happening\\n     * by making the `nonReentrant` function external, and make it call a\\n     * `private` function that does the actual work.\\n     */\\n    modifier nonReentrant() {\\n        // On the first call to nonReentrant, _notEntered will be true\\n        require(_status != _ENTERED, \\\"ReentrancyGuard: reentrant call\\\");\\n\\n        // Any calls to nonReentrant after this point will fail\\n        _status = _ENTERED;\\n\\n        _;\\n\\n        // By storing the original value once again, a refund is triggered (see\\n        // https://eips.ethereum.org/EIPS/eip-2200)\\n        _status = _NOT_ENTERED;\\n    }\\n}\\n\",\"keccak256\":\"0x8bbbc2f5c10065ee272592ae0a7a6ceb23de2fbd81564ee0bb015ecf404d5f61\",\"license\":\"MIT\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title The interface for the Uniswap V3 Factory\\n/// @notice The Uniswap V3 Factory facilitates creation of Uniswap V3 pools and control over the protocol fees\\ninterface IUniswapV3Factory {\\n    /// @notice Emitted when the owner of the factory is changed\\n    /// @param oldOwner The owner before the owner was changed\\n    /// @param newOwner The owner after the owner was changed\\n    event OwnerChanged(address indexed oldOwner, address indexed newOwner);\\n\\n    /// @notice Emitted when a pool is created\\n    /// @param token0 The first token of the pool by address sort order\\n    /// @param token1 The second token of the pool by address sort order\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks\\n    /// @param pool The address of the created pool\\n    event PoolCreated(\\n        address indexed token0,\\n        address indexed token1,\\n        uint24 indexed fee,\\n        int24 tickSpacing,\\n        address pool\\n    );\\n\\n    /// @notice Emitted when a new fee amount is enabled for pool creation via the factory\\n    /// @param fee The enabled fee, denominated in hundredths of a bip\\n    /// @param tickSpacing The minimum number of ticks between initialized ticks for pools created with the given fee\\n    event FeeAmountEnabled(uint24 indexed fee, int24 indexed tickSpacing);\\n\\n    /// @notice Returns the current owner of the factory\\n    /// @dev Can be changed by the current owner via setOwner\\n    /// @return The address of the factory owner\\n    function owner() external view returns (address);\\n\\n    /// @notice Returns the tick spacing for a given fee amount, if enabled, or 0 if not enabled\\n    /// @dev A fee amount can never be removed, so this value should be hard coded or cached in the calling context\\n    /// @param fee The enabled fee, denominated in hundredths of a bip. Returns 0 in case of unenabled fee\\n    /// @return The tick spacing\\n    function feeAmountTickSpacing(uint24 fee) external view returns (int24);\\n\\n    /// @notice Returns the pool address for a given pair of tokens and a fee, or address 0 if it does not exist\\n    /// @dev tokenA and tokenB may be passed in either token0/token1 or token1/token0 order\\n    /// @param tokenA The contract address of either token0 or token1\\n    /// @param tokenB The contract address of the other token\\n    /// @param fee The fee collected upon every swap in the pool, denominated in hundredths of a bip\\n    /// @return pool The pool address\\n    function getPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external view returns (address pool);\\n\\n    /// @notice Creates a pool for the given two tokens and fee\\n    /// @param tokenA One of the two tokens in the desired pool\\n    /// @param tokenB The other of the two tokens in the desired pool\\n    /// @param fee The desired fee for the pool\\n    /// @dev tokenA and tokenB may be passed in either order: token0/token1 or token1/token0. tickSpacing is retrieved\\n    /// from the fee. The call will revert if the pool already exists, the fee is invalid, or the token arguments\\n    /// are invalid.\\n    /// @return pool The address of the newly created pool\\n    function createPool(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) external returns (address pool);\\n\\n    /// @notice Updates the owner of the factory\\n    /// @dev Must be called by the current owner\\n    /// @param _owner The new owner of the factory\\n    function setOwner(address _owner) external;\\n\\n    /// @notice Enables a fee amount with the given tickSpacing\\n    /// @dev Fee amounts may never be removed once enabled\\n    /// @param fee The fee amount to enable, denominated in hundredths of a bip (i.e. 1e-6)\\n    /// @param tickSpacing The spacing between ticks to be enforced for all pools created with the given fee amount\\n    function enableFeeAmount(uint24 fee, int24 tickSpacing) external;\\n}\\n\",\"keccak256\":\"0xcc3d0c93fc9ac0febbe09f941b465b57f750bcf3b48432da0b97dc289cfdc489\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\nimport './pool/IUniswapV3PoolImmutables.sol';\\nimport './pool/IUniswapV3PoolState.sol';\\nimport './pool/IUniswapV3PoolDerivedState.sol';\\nimport './pool/IUniswapV3PoolActions.sol';\\nimport './pool/IUniswapV3PoolOwnerActions.sol';\\nimport './pool/IUniswapV3PoolEvents.sol';\\n\\n/// @title The interface for a Uniswap V3 Pool\\n/// @notice A Uniswap pool facilitates swapping and automated market making between any two assets that strictly conform\\n/// to the ERC20 specification\\n/// @dev The pool interface is broken up into many smaller pieces\\ninterface IUniswapV3Pool is\\n    IUniswapV3PoolImmutables,\\n    IUniswapV3PoolState,\\n    IUniswapV3PoolDerivedState,\\n    IUniswapV3PoolActions,\\n    IUniswapV3PoolOwnerActions,\\n    IUniswapV3PoolEvents\\n{\\n\\n}\\n\",\"keccak256\":\"0xfe6113d518466cd6652c85b111e01f33eb62157f49ae5ed7d5a3947a2044adb1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#mint\\n/// @notice Any contract that calls IUniswapV3PoolActions#mint must implement this interface\\ninterface IUniswapV3MintCallback {\\n    /// @notice Called to `msg.sender` after minting liquidity to a position from IUniswapV3Pool#mint.\\n    /// @dev In the implementation you must pay the pool tokens owed for the minted liquidity.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// @param amount0Owed The amount of token0 due to the pool for the minted liquidity\\n    /// @param amount1Owed The amount of token1 due to the pool for the minted liquidity\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#mint call\\n    function uniswapV3MintCallback(\\n        uint256 amount0Owed,\\n        uint256 amount1Owed,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x27a9725b8f831a92d16380860c3d348a0b926a7f01b34a54ea6eea78cbdbcd6a\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Callback for IUniswapV3PoolActions#swap\\n/// @notice Any contract that calls IUniswapV3PoolActions#swap must implement this interface\\ninterface IUniswapV3SwapCallback {\\n    /// @notice Called to `msg.sender` after executing a swap via IUniswapV3Pool#swap.\\n    /// @dev In the implementation you must pay the pool tokens owed for the swap.\\n    /// The caller of this method must be checked to be a UniswapV3Pool deployed by the canonical UniswapV3Factory.\\n    /// amount0Delta and amount1Delta can both be 0 if no tokens were swapped.\\n    /// @param amount0Delta The amount of token0 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token0 to the pool.\\n    /// @param amount1Delta The amount of token1 that was sent (negative) or must be received (positive) by the pool by\\n    /// the end of the swap. If positive, the callback must send that amount of token1 to the pool.\\n    /// @param data Any data passed through by the caller via the IUniswapV3PoolActions#swap call\\n    function uniswapV3SwapCallback(\\n        int256 amount0Delta,\\n        int256 amount1Delta,\\n        bytes calldata data\\n    ) external;\\n}\\n\",\"keccak256\":\"0x3f485fb1a44e8fbeadefb5da07d66edab3cfe809f0ac4074b1e54e3eb3c4cf69\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissionless pool actions\\n/// @notice Contains pool methods that can be called by anyone\\ninterface IUniswapV3PoolActions {\\n    /// @notice Sets the initial price for the pool\\n    /// @dev Price is represented as a sqrt(amountToken1/amountToken0) Q64.96 value\\n    /// @param sqrtPriceX96 the initial sqrt price of the pool as a Q64.96\\n    function initialize(uint160 sqrtPriceX96) external;\\n\\n    /// @notice Adds liquidity for the given recipient/tickLower/tickUpper position\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3MintCallback#uniswapV3MintCallback\\n    /// in which they must pay any token0 or token1 owed for the liquidity. The amount of token0/token1 due depends\\n    /// on tickLower, tickUpper, the amount of liquidity, and the current price.\\n    /// @param recipient The address for which the liquidity will be created\\n    /// @param tickLower The lower tick of the position in which to add liquidity\\n    /// @param tickUpper The upper tick of the position in which to add liquidity\\n    /// @param amount The amount of liquidity to mint\\n    /// @param data Any data that should be passed through to the callback\\n    /// @return amount0 The amount of token0 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    /// @return amount1 The amount of token1 that was paid to mint the given amount of liquidity. Matches the value in the callback\\n    function mint(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount,\\n        bytes calldata data\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Collects tokens owed to a position\\n    /// @dev Does not recompute fees earned, which must be done either via mint or burn of any amount of liquidity.\\n    /// Collect must be called by the position owner. To withdraw only token0 or only token1, amount0Requested or\\n    /// amount1Requested may be set to zero. To withdraw all tokens owed, caller may pass any value greater than the\\n    /// actual tokens owed, e.g. type(uint128).max. Tokens owed may be from accumulated swap fees or burned liquidity.\\n    /// @param recipient The address which should receive the fees collected\\n    /// @param tickLower The lower tick of the position for which to collect fees\\n    /// @param tickUpper The upper tick of the position for which to collect fees\\n    /// @param amount0Requested How much token0 should be withdrawn from the fees owed\\n    /// @param amount1Requested How much token1 should be withdrawn from the fees owed\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(\\n        address recipient,\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n\\n    /// @notice Burn liquidity from the sender and account tokens owed for the liquidity to the position\\n    /// @dev Can be used to trigger a recalculation of fees owed to a position by calling with an amount of 0\\n    /// @dev Fees must be collected separately via a call to #collect\\n    /// @param tickLower The lower tick of the position for which to burn liquidity\\n    /// @param tickUpper The upper tick of the position for which to burn liquidity\\n    /// @param amount How much liquidity to burn\\n    /// @return amount0 The amount of token0 sent to the recipient\\n    /// @return amount1 The amount of token1 sent to the recipient\\n    function burn(\\n        int24 tickLower,\\n        int24 tickUpper,\\n        uint128 amount\\n    ) external returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Swap token0 for token1, or token1 for token0\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3SwapCallback#uniswapV3SwapCallback\\n    /// @param recipient The address to receive the output of the swap\\n    /// @param zeroForOne The direction of the swap, true for token0 to token1, false for token1 to token0\\n    /// @param amountSpecified The amount of the swap, which implicitly configures the swap as exact input (positive), or exact output (negative)\\n    /// @param sqrtPriceLimitX96 The Q64.96 sqrt price limit. If zero for one, the price cannot be less than this\\n    /// value after the swap. If one for zero, the price cannot be greater than this value after the swap\\n    /// @param data Any data to be passed through to the callback\\n    /// @return amount0 The delta of the balance of token0 of the pool, exact when negative, minimum when positive\\n    /// @return amount1 The delta of the balance of token1 of the pool, exact when negative, minimum when positive\\n    function swap(\\n        address recipient,\\n        bool zeroForOne,\\n        int256 amountSpecified,\\n        uint160 sqrtPriceLimitX96,\\n        bytes calldata data\\n    ) external returns (int256 amount0, int256 amount1);\\n\\n    /// @notice Receive token0 and/or token1 and pay it back, plus a fee, in the callback\\n    /// @dev The caller of this method receives a callback in the form of IUniswapV3FlashCallback#uniswapV3FlashCallback\\n    /// @dev Can be used to donate underlying tokens pro-rata to currently in-range liquidity providers by calling\\n    /// with 0 amount{0,1} and sending the donation amount(s) from the callback\\n    /// @param recipient The address which will receive the token0 and token1 amounts\\n    /// @param amount0 The amount of token0 to send\\n    /// @param amount1 The amount of token1 to send\\n    /// @param data Any data to be passed through to the callback\\n    function flash(\\n        address recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        bytes calldata data\\n    ) external;\\n\\n    /// @notice Increase the maximum number of price and liquidity observations that this pool will store\\n    /// @dev This method is no-op if the pool already has an observationCardinalityNext greater than or equal to\\n    /// the input observationCardinalityNext.\\n    /// @param observationCardinalityNext The desired minimum number of observations for the pool to store\\n    function increaseObservationCardinalityNext(uint16 observationCardinalityNext) external;\\n}\\n\",\"keccak256\":\"0x9453dd0e7442188667d01d9b65de3f1e14e9511ff3e303179a15f6fc267f7634\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolDerivedState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that is not stored\\n/// @notice Contains view functions to provide information about the pool that is computed rather than stored on the\\n/// blockchain. The functions here may have variable gas costs.\\ninterface IUniswapV3PoolDerivedState {\\n    /// @notice Returns the cumulative tick and liquidity as of each timestamp `secondsAgo` from the current block timestamp\\n    /// @dev To get a time weighted average tick or liquidity-in-range, you must call this with two values, one representing\\n    /// the beginning of the period and another for the end of the period. E.g., to get the last hour time-weighted average tick,\\n    /// you must call it with secondsAgos = [3600, 0].\\n    /// @dev The time weighted average tick represents the geometric time weighted average price of the pool, in\\n    /// log base sqrt(1.0001) of token1 / token0. The TickMath library can be used to go from a tick value to a ratio.\\n    /// @param secondsAgos From how long ago each cumulative tick and liquidity value should be returned\\n    /// @return tickCumulatives Cumulative tick values as of each `secondsAgos` from the current block timestamp\\n    /// @return secondsPerLiquidityCumulativeX128s Cumulative seconds per liquidity-in-range value as of each `secondsAgos` from the current block\\n    /// timestamp\\n    function observe(uint32[] calldata secondsAgos)\\n        external\\n        view\\n        returns (int56[] memory tickCumulatives, uint160[] memory secondsPerLiquidityCumulativeX128s);\\n\\n    /// @notice Returns a snapshot of the tick cumulative, seconds per liquidity and seconds inside a tick range\\n    /// @dev Snapshots must only be compared to other snapshots, taken over a period for which a position existed.\\n    /// I.e., snapshots cannot be compared if a position is not held for the entire period between when the first\\n    /// snapshot is taken and the second snapshot is taken.\\n    /// @param tickLower The lower tick of the range\\n    /// @param tickUpper The upper tick of the range\\n    /// @return tickCumulativeInside The snapshot of the tick accumulator for the range\\n    /// @return secondsPerLiquidityInsideX128 The snapshot of seconds per liquidity for the range\\n    /// @return secondsInside The snapshot of seconds per liquidity for the range\\n    function snapshotCumulativesInside(int24 tickLower, int24 tickUpper)\\n        external\\n        view\\n        returns (\\n            int56 tickCumulativeInside,\\n            uint160 secondsPerLiquidityInsideX128,\\n            uint32 secondsInside\\n        );\\n}\\n\",\"keccak256\":\"0xe603ac5b17ecdee73ba2b27efdf386c257a19c14206e87eee77e2017b742d9e5\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolEvents.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Events emitted by a pool\\n/// @notice Contains all events emitted by the pool\\ninterface IUniswapV3PoolEvents {\\n    /// @notice Emitted exactly once by a pool when #initialize is first called on the pool\\n    /// @dev Mint/Burn/Swap cannot be emitted by the pool before Initialize\\n    /// @param sqrtPriceX96 The initial sqrt price of the pool, as a Q64.96\\n    /// @param tick The initial tick of the pool, i.e. log base 1.0001 of the starting price of the pool\\n    event Initialize(uint160 sqrtPriceX96, int24 tick);\\n\\n    /// @notice Emitted when liquidity is minted for a given position\\n    /// @param sender The address that minted the liquidity\\n    /// @param owner The owner of the position and recipient of any minted liquidity\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity minted to the position range\\n    /// @param amount0 How much token0 was required for the minted liquidity\\n    /// @param amount1 How much token1 was required for the minted liquidity\\n    event Mint(\\n        address sender,\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted when fees are collected by the owner of a position\\n    /// @dev Collect events may be emitted with zero amount0 and amount1 when the caller chooses not to collect fees\\n    /// @param owner The owner of the position for which fees are collected\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount0 The amount of token0 fees collected\\n    /// @param amount1 The amount of token1 fees collected\\n    event Collect(\\n        address indexed owner,\\n        address recipient,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount0,\\n        uint128 amount1\\n    );\\n\\n    /// @notice Emitted when a position's liquidity is removed\\n    /// @dev Does not withdraw any fees earned by the liquidity position, which must be withdrawn via #collect\\n    /// @param owner The owner of the position for which liquidity is removed\\n    /// @param tickLower The lower tick of the position\\n    /// @param tickUpper The upper tick of the position\\n    /// @param amount The amount of liquidity to remove\\n    /// @param amount0 The amount of token0 withdrawn\\n    /// @param amount1 The amount of token1 withdrawn\\n    event Burn(\\n        address indexed owner,\\n        int24 indexed tickLower,\\n        int24 indexed tickUpper,\\n        uint128 amount,\\n        uint256 amount0,\\n        uint256 amount1\\n    );\\n\\n    /// @notice Emitted by the pool for any swaps between token0 and token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the output of the swap\\n    /// @param amount0 The delta of the token0 balance of the pool\\n    /// @param amount1 The delta of the token1 balance of the pool\\n    /// @param sqrtPriceX96 The sqrt(price) of the pool after the swap, as a Q64.96\\n    /// @param liquidity The liquidity of the pool after the swap\\n    /// @param tick The log base 1.0001 of price of the pool after the swap\\n    event Swap(\\n        address indexed sender,\\n        address indexed recipient,\\n        int256 amount0,\\n        int256 amount1,\\n        uint160 sqrtPriceX96,\\n        uint128 liquidity,\\n        int24 tick\\n    );\\n\\n    /// @notice Emitted by the pool for any flashes of token0/token1\\n    /// @param sender The address that initiated the swap call, and that received the callback\\n    /// @param recipient The address that received the tokens from flash\\n    /// @param amount0 The amount of token0 that was flashed\\n    /// @param amount1 The amount of token1 that was flashed\\n    /// @param paid0 The amount of token0 paid for the flash, which can exceed the amount0 plus the fee\\n    /// @param paid1 The amount of token1 paid for the flash, which can exceed the amount1 plus the fee\\n    event Flash(\\n        address indexed sender,\\n        address indexed recipient,\\n        uint256 amount0,\\n        uint256 amount1,\\n        uint256 paid0,\\n        uint256 paid1\\n    );\\n\\n    /// @notice Emitted by the pool for increases to the number of observations that can be stored\\n    /// @dev observationCardinalityNext is not the observation cardinality until an observation is written at the index\\n    /// just before a mint/swap/burn.\\n    /// @param observationCardinalityNextOld The previous value of the next observation cardinality\\n    /// @param observationCardinalityNextNew The updated value of the next observation cardinality\\n    event IncreaseObservationCardinalityNext(\\n        uint16 observationCardinalityNextOld,\\n        uint16 observationCardinalityNextNew\\n    );\\n\\n    /// @notice Emitted when the protocol fee is changed by the pool\\n    /// @param feeProtocol0Old The previous value of the token0 protocol fee\\n    /// @param feeProtocol1Old The previous value of the token1 protocol fee\\n    /// @param feeProtocol0New The updated value of the token0 protocol fee\\n    /// @param feeProtocol1New The updated value of the token1 protocol fee\\n    event SetFeeProtocol(uint8 feeProtocol0Old, uint8 feeProtocol1Old, uint8 feeProtocol0New, uint8 feeProtocol1New);\\n\\n    /// @notice Emitted when the collected protocol fees are withdrawn by the factory owner\\n    /// @param sender The address that collects the protocol fees\\n    /// @param recipient The address that receives the collected protocol fees\\n    /// @param amount0 The amount of token0 protocol fees that is withdrawn\\n    /// @param amount0 The amount of token1 protocol fees that is withdrawn\\n    event CollectProtocol(address indexed sender, address indexed recipient, uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x8071514d0fe5d17d6fbd31c191cdfb703031c24e0ece3621d88ab10e871375cd\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolImmutables.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that never changes\\n/// @notice These parameters are fixed for a pool forever, i.e., the methods will always return the same values\\ninterface IUniswapV3PoolImmutables {\\n    /// @notice The contract that deployed the pool, which must adhere to the IUniswapV3Factory interface\\n    /// @return The contract address\\n    function factory() external view returns (address);\\n\\n    /// @notice The first of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token0() external view returns (address);\\n\\n    /// @notice The second of the two tokens of the pool, sorted by address\\n    /// @return The token contract address\\n    function token1() external view returns (address);\\n\\n    /// @notice The pool's fee in hundredths of a bip, i.e. 1e-6\\n    /// @return The fee\\n    function fee() external view returns (uint24);\\n\\n    /// @notice The pool tick spacing\\n    /// @dev Ticks can only be used at multiples of this value, minimum of 1 and always positive\\n    /// e.g.: a tickSpacing of 3 means ticks can be initialized every 3rd tick, i.e., ..., -6, -3, 0, 3, 6, ...\\n    /// This value is an int24 to avoid casting even though it is always positive.\\n    /// @return The tick spacing\\n    function tickSpacing() external view returns (int24);\\n\\n    /// @notice The maximum amount of position liquidity that can use any tick in the range\\n    /// @dev This parameter is enforced per tick to prevent liquidity from overflowing a uint128 at any point, and\\n    /// also prevents out-of-range liquidity from being used to prevent adding in-range liquidity to a pool\\n    /// @return The max amount of liquidity per tick\\n    function maxLiquidityPerTick() external view returns (uint128);\\n}\\n\",\"keccak256\":\"0xf6e5d2cd1139c4c276bdbc8e1d2b256e456c866a91f1b868da265c6d2685c3f7\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolOwnerActions.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Permissioned pool actions\\n/// @notice Contains pool methods that may only be called by the factory owner\\ninterface IUniswapV3PoolOwnerActions {\\n    /// @notice Set the denominator of the protocol's % share of the fees\\n    /// @param feeProtocol0 new protocol fee for token0 of the pool\\n    /// @param feeProtocol1 new protocol fee for token1 of the pool\\n    function setFeeProtocol(uint8 feeProtocol0, uint8 feeProtocol1) external;\\n\\n    /// @notice Collect the protocol fee accrued to the pool\\n    /// @param recipient The address to which collected protocol fees should be sent\\n    /// @param amount0Requested The maximum amount of token0 to send, can be 0 to collect fees in only token1\\n    /// @param amount1Requested The maximum amount of token1 to send, can be 0 to collect fees in only token0\\n    /// @return amount0 The protocol fee collected in token0\\n    /// @return amount1 The protocol fee collected in token1\\n    function collectProtocol(\\n        address recipient,\\n        uint128 amount0Requested,\\n        uint128 amount1Requested\\n    ) external returns (uint128 amount0, uint128 amount1);\\n}\\n\",\"keccak256\":\"0x759b78a2918af9e99e246dc3af084f654e48ef32bb4e4cb8a966aa3dcaece235\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/interfaces/pool/IUniswapV3PoolState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Pool state that can change\\n/// @notice These methods compose the pool's state, and can change with any frequency including multiple times\\n/// per transaction\\ninterface IUniswapV3PoolState {\\n    /// @notice The 0th storage slot in the pool stores many values, and is exposed as a single method to save gas\\n    /// when accessed externally.\\n    /// @return sqrtPriceX96 The current price of the pool as a sqrt(token1/token0) Q64.96 value\\n    /// tick The current tick of the pool, i.e. according to the last tick transition that was run.\\n    /// This value may not always be equal to SqrtTickMath.getTickAtSqrtRatio(sqrtPriceX96) if the price is on a tick\\n    /// boundary.\\n    /// observationIndex The index of the last oracle observation that was written,\\n    /// observationCardinality The current maximum number of observations stored in the pool,\\n    /// observationCardinalityNext The next maximum number of observations, to be updated when the observation.\\n    /// feeProtocol The protocol fee for both tokens of the pool.\\n    /// Encoded as two 4 bit values, where the protocol fee of token1 is shifted 4 bits and the protocol fee of token0\\n    /// is the lower 4 bits. Used as the denominator of a fraction of the swap fee, e.g. 4 means 1/4th of the swap fee.\\n    /// unlocked Whether the pool is currently locked to reentrancy\\n    function slot0()\\n        external\\n        view\\n        returns (\\n            uint160 sqrtPriceX96,\\n            int24 tick,\\n            uint16 observationIndex,\\n            uint16 observationCardinality,\\n            uint16 observationCardinalityNext,\\n            uint8 feeProtocol,\\n            bool unlocked\\n        );\\n\\n    /// @notice The fee growth as a Q128.128 fees of token0 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal0X128() external view returns (uint256);\\n\\n    /// @notice The fee growth as a Q128.128 fees of token1 collected per unit of liquidity for the entire life of the pool\\n    /// @dev This value can overflow the uint256\\n    function feeGrowthGlobal1X128() external view returns (uint256);\\n\\n    /// @notice The amounts of token0 and token1 that are owed to the protocol\\n    /// @dev Protocol fees will never exceed uint128 max in either token\\n    function protocolFees() external view returns (uint128 token0, uint128 token1);\\n\\n    /// @notice The currently in range liquidity available to the pool\\n    /// @dev This value has no relationship to the total liquidity across all ticks\\n    function liquidity() external view returns (uint128);\\n\\n    /// @notice Look up information about a specific tick in the pool\\n    /// @param tick The tick to look up\\n    /// @return liquidityGross the total amount of position liquidity that uses the pool either as tick lower or\\n    /// tick upper,\\n    /// liquidityNet how much liquidity changes when the pool price crosses the tick,\\n    /// feeGrowthOutside0X128 the fee growth on the other side of the tick from the current tick in token0,\\n    /// feeGrowthOutside1X128 the fee growth on the other side of the tick from the current tick in token1,\\n    /// tickCumulativeOutside the cumulative tick value on the other side of the tick from the current tick\\n    /// secondsPerLiquidityOutsideX128 the seconds spent per liquidity on the other side of the tick from the current tick,\\n    /// secondsOutside the seconds spent on the other side of the tick from the current tick,\\n    /// initialized Set to true if the tick is initialized, i.e. liquidityGross is greater than 0, otherwise equal to false.\\n    /// Outside values can only be used if the tick is initialized, i.e. if liquidityGross is greater than 0.\\n    /// In addition, these values are only relative and must be used only in comparison to previous snapshots for\\n    /// a specific position.\\n    function ticks(int24 tick)\\n        external\\n        view\\n        returns (\\n            uint128 liquidityGross,\\n            int128 liquidityNet,\\n            uint256 feeGrowthOutside0X128,\\n            uint256 feeGrowthOutside1X128,\\n            int56 tickCumulativeOutside,\\n            uint160 secondsPerLiquidityOutsideX128,\\n            uint32 secondsOutside,\\n            bool initialized\\n        );\\n\\n    /// @notice Returns 256 packed tick initialized boolean values. See TickBitmap for more information\\n    function tickBitmap(int16 wordPosition) external view returns (uint256);\\n\\n    /// @notice Returns the information about a position by the position's key\\n    /// @param key The position's key is a hash of a preimage composed by the owner, tickLower and tickUpper\\n    /// @return _liquidity The amount of liquidity in the position,\\n    /// Returns feeGrowthInside0LastX128 fee growth of token0 inside the tick range as of the last mint/burn/poke,\\n    /// Returns feeGrowthInside1LastX128 fee growth of token1 inside the tick range as of the last mint/burn/poke,\\n    /// Returns tokensOwed0 the computed amount of token0 owed to the position as of the last mint/burn/poke,\\n    /// Returns tokensOwed1 the computed amount of token1 owed to the position as of the last mint/burn/poke\\n    function positions(bytes32 key)\\n        external\\n        view\\n        returns (\\n            uint128 _liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    /// @notice Returns data about a specific observation index\\n    /// @param index The element of the observations array to fetch\\n    /// @dev You most likely want to use #observe() instead of this method to get an observation as of some amount of time\\n    /// ago, rather than at a specific index in the array.\\n    /// @return blockTimestamp The timestamp of the observation,\\n    /// Returns tickCumulative the tick multiplied by seconds elapsed for the life of the pool as of the observation timestamp,\\n    /// Returns secondsPerLiquidityCumulativeX128 the seconds per in range liquidity for the life of the pool as of the observation timestamp,\\n    /// Returns initialized whether the observation has been initialized and the values are safe to use\\n    function observations(uint256 index)\\n        external\\n        view\\n        returns (\\n            uint32 blockTimestamp,\\n            int56 tickCumulative,\\n            uint160 secondsPerLiquidityCumulativeX128,\\n            bool initialized\\n        );\\n}\\n\",\"keccak256\":\"0x852dc1f5df7dcf7f11e7bb3eed79f0cea72ad4b25f6a9d2c35aafb48925fd49f\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-core/contracts/libraries/TickMath.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Math library for computing sqrt prices from ticks and vice versa\\n/// @notice Computes sqrt price for ticks of size 1.0001, i.e. sqrt(1.0001^tick) as fixed point Q64.96 numbers. Supports\\n/// prices between 2**-128 and 2**128\\nlibrary TickMath {\\n    /// @dev The minimum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**-128\\n    int24 internal constant MIN_TICK = -887272;\\n    /// @dev The maximum tick that may be passed to #getSqrtRatioAtTick computed from log base 1.0001 of 2**128\\n    int24 internal constant MAX_TICK = -MIN_TICK;\\n\\n    /// @dev The minimum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MIN_TICK)\\n    uint160 internal constant MIN_SQRT_RATIO = 4295128739;\\n    /// @dev The maximum value that can be returned from #getSqrtRatioAtTick. Equivalent to getSqrtRatioAtTick(MAX_TICK)\\n    uint160 internal constant MAX_SQRT_RATIO = 1461446703485210103287273052203988822378723970342;\\n\\n    /// @notice Calculates sqrt(1.0001^tick) * 2^96\\n    /// @dev Throws if |tick| > max tick\\n    /// @param tick The input tick for the above formula\\n    /// @return sqrtPriceX96 A Fixed point Q64.96 number representing the sqrt of the ratio of the two assets (token1/token0)\\n    /// at the given tick\\n    function getSqrtRatioAtTick(int24 tick) internal pure returns (uint160 sqrtPriceX96) {\\n        uint256 absTick = tick < 0 ? uint256(-int256(tick)) : uint256(int256(tick));\\n        require(absTick <= uint256(MAX_TICK), 'T');\\n\\n        uint256 ratio = absTick & 0x1 != 0 ? 0xfffcb933bd6fad37aa2d162d1a594001 : 0x100000000000000000000000000000000;\\n        if (absTick & 0x2 != 0) ratio = (ratio * 0xfff97272373d413259a46990580e213a) >> 128;\\n        if (absTick & 0x4 != 0) ratio = (ratio * 0xfff2e50f5f656932ef12357cf3c7fdcc) >> 128;\\n        if (absTick & 0x8 != 0) ratio = (ratio * 0xffe5caca7e10e4e61c3624eaa0941cd0) >> 128;\\n        if (absTick & 0x10 != 0) ratio = (ratio * 0xffcb9843d60f6159c9db58835c926644) >> 128;\\n        if (absTick & 0x20 != 0) ratio = (ratio * 0xff973b41fa98c081472e6896dfb254c0) >> 128;\\n        if (absTick & 0x40 != 0) ratio = (ratio * 0xff2ea16466c96a3843ec78b326b52861) >> 128;\\n        if (absTick & 0x80 != 0) ratio = (ratio * 0xfe5dee046a99a2a811c461f1969c3053) >> 128;\\n        if (absTick & 0x100 != 0) ratio = (ratio * 0xfcbe86c7900a88aedcffc83b479aa3a4) >> 128;\\n        if (absTick & 0x200 != 0) ratio = (ratio * 0xf987a7253ac413176f2b074cf7815e54) >> 128;\\n        if (absTick & 0x400 != 0) ratio = (ratio * 0xf3392b0822b70005940c7a398e4b70f3) >> 128;\\n        if (absTick & 0x800 != 0) ratio = (ratio * 0xe7159475a2c29b7443b29c7fa6e889d9) >> 128;\\n        if (absTick & 0x1000 != 0) ratio = (ratio * 0xd097f3bdfd2022b8845ad8f792aa5825) >> 128;\\n        if (absTick & 0x2000 != 0) ratio = (ratio * 0xa9f746462d870fdf8a65dc1f90e061e5) >> 128;\\n        if (absTick & 0x4000 != 0) ratio = (ratio * 0x70d869a156d2a1b890bb3df62baf32f7) >> 128;\\n        if (absTick & 0x8000 != 0) ratio = (ratio * 0x31be135f97d08fd981231505542fcfa6) >> 128;\\n        if (absTick & 0x10000 != 0) ratio = (ratio * 0x9aa508b5b7a84e1c677de54f3e99bc9) >> 128;\\n        if (absTick & 0x20000 != 0) ratio = (ratio * 0x5d6af8dedb81196699c329225ee604) >> 128;\\n        if (absTick & 0x40000 != 0) ratio = (ratio * 0x2216e584f5fa1ea926041bedfe98) >> 128;\\n        if (absTick & 0x80000 != 0) ratio = (ratio * 0x48a170391f7dc42444e8fa2) >> 128;\\n\\n        if (tick > 0) ratio = type(uint256).max / ratio;\\n\\n        // this divides by 1<<32 rounding up to go from a Q128.128 to a Q128.96.\\n        // we then downcast because we know the result always fits within 160 bits due to our tick input constraint\\n        // we round up in the division so getTickAtSqrtRatio of the output price is always consistent\\n        sqrtPriceX96 = uint160((ratio >> 32) + (ratio % (1 << 32) == 0 ? 0 : 1));\\n    }\\n\\n    /// @notice Calculates the greatest tick value such that getRatioAtTick(tick) <= ratio\\n    /// @dev Throws in case sqrtPriceX96 < MIN_SQRT_RATIO, as MIN_SQRT_RATIO is the lowest value getRatioAtTick may\\n    /// ever return.\\n    /// @param sqrtPriceX96 The sqrt ratio for which to compute the tick as a Q64.96\\n    /// @return tick The greatest tick for which the ratio is less than or equal to the input ratio\\n    function getTickAtSqrtRatio(uint160 sqrtPriceX96) internal pure returns (int24 tick) {\\n        // second inequality must be < because the price can never reach the price at the max tick\\n        require(sqrtPriceX96 >= MIN_SQRT_RATIO && sqrtPriceX96 < MAX_SQRT_RATIO, 'R');\\n        uint256 ratio = uint256(sqrtPriceX96) << 32;\\n\\n        uint256 r = ratio;\\n        uint256 msb = 0;\\n\\n        assembly {\\n            let f := shl(7, gt(r, 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(6, gt(r, 0xFFFFFFFFFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(5, gt(r, 0xFFFFFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(4, gt(r, 0xFFFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(3, gt(r, 0xFF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(2, gt(r, 0xF))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := shl(1, gt(r, 0x3))\\n            msb := or(msb, f)\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            let f := gt(r, 0x1)\\n            msb := or(msb, f)\\n        }\\n\\n        if (msb >= 128) r = ratio >> (msb - 127);\\n        else r = ratio << (127 - msb);\\n\\n        int256 log_2 = (int256(msb) - 128) << 64;\\n\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(63, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(62, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(61, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(60, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(59, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(58, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(57, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(56, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(55, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(54, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(53, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(52, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(51, f))\\n            r := shr(f, r)\\n        }\\n        assembly {\\n            r := shr(127, mul(r, r))\\n            let f := shr(128, r)\\n            log_2 := or(log_2, shl(50, f))\\n        }\\n\\n        int256 log_sqrt10001 = log_2 * 255738958999603826347141; // 128.128 number\\n\\n        int24 tickLow = int24((log_sqrt10001 - 3402992956809132418596140100660247210) >> 128);\\n        int24 tickHi = int24((log_sqrt10001 + 291339464771989622907027621153398088495) >> 128);\\n\\n        tick = tickLow == tickHi ? tickLow : getSqrtRatioAtTick(tickHi) <= sqrtPriceX96 ? tickHi : tickLow;\\n    }\\n}\\n\",\"keccak256\":\"0x1f864a2bf61ba05f3173eaf2e3f94c5e1da4bec0554757527b6d1ef1fe439e4e\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IERC721Permit.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721.sol';\\n\\n/// @title ERC721 with permit\\n/// @notice Extension to ERC721 that includes a permit function for signature based approvals\\ninterface IERC721Permit is IERC721 {\\n    /// @notice The permit typehash used in the permit signature\\n    /// @return The typehash for the permit\\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\\n\\n    /// @notice The domain separator used in the permit signature\\n    /// @return The domain seperator used in encoding of permit signature\\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\\n\\n    /// @notice Approve of a specific token ID for spending by spender via signature\\n    /// @param spender The account that is being approved\\n    /// @param tokenId The ID of the token that is being approved for spending\\n    /// @param deadline The deadline timestamp by which the call must be mined for the approve to work\\n    /// @param v Must produce valid secp256k1 signature from the holder along with `r` and `s`\\n    /// @param r Must produce valid secp256k1 signature from the holder along with `v` and `s`\\n    /// @param s Must produce valid secp256k1 signature from the holder along with `r` and `v`\\n    function permit(\\n        address spender,\\n        uint256 tokenId,\\n        uint256 deadline,\\n        uint8 v,\\n        bytes32 r,\\n        bytes32 s\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0x9e3c2a4ee65ddf95b2dfcb0815784eea3a295707e6f8b83e4c4f0f8fe2e3a1d4\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@openzeppelin/contracts/token/ERC721/IERC721Metadata.sol';\\nimport '@openzeppelin/contracts/token/ERC721/IERC721Enumerable.sol';\\n\\nimport './IPoolInitializer.sol';\\nimport './IERC721Permit.sol';\\nimport './IPeripheryPayments.sol';\\nimport './IPeripheryImmutableState.sol';\\nimport '../libraries/PoolAddress.sol';\\n\\n/// @title Non-fungible token for positions\\n/// @notice Wraps Uniswap V3 positions in a non-fungible token interface which allows for them to be transferred\\n/// and authorized.\\ninterface INonfungiblePositionManager is\\n    IPoolInitializer,\\n    IPeripheryPayments,\\n    IPeripheryImmutableState,\\n    IERC721Metadata,\\n    IERC721Enumerable,\\n    IERC721Permit\\n{\\n    /// @notice Emitted when liquidity is increased for a position NFT\\n    /// @dev Also emitted when a token is minted\\n    /// @param tokenId The ID of the token for which liquidity was increased\\n    /// @param liquidity The amount by which liquidity for the NFT position was increased\\n    /// @param amount0 The amount of token0 that was paid for the increase in liquidity\\n    /// @param amount1 The amount of token1 that was paid for the increase in liquidity\\n    event IncreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\\n    /// @notice Emitted when liquidity is decreased for a position NFT\\n    /// @param tokenId The ID of the token for which liquidity was decreased\\n    /// @param liquidity The amount by which liquidity for the NFT position was decreased\\n    /// @param amount0 The amount of token0 that was accounted for the decrease in liquidity\\n    /// @param amount1 The amount of token1 that was accounted for the decrease in liquidity\\n    event DecreaseLiquidity(uint256 indexed tokenId, uint128 liquidity, uint256 amount0, uint256 amount1);\\n    /// @notice Emitted when tokens are collected for a position NFT\\n    /// @dev The amounts reported may not be exactly equivalent to the amounts transferred, due to rounding behavior\\n    /// @param tokenId The ID of the token for which underlying tokens were collected\\n    /// @param recipient The address of the account that received the collected tokens\\n    /// @param amount0 The amount of token0 owed to the position that was collected\\n    /// @param amount1 The amount of token1 owed to the position that was collected\\n    event Collect(uint256 indexed tokenId, address recipient, uint256 amount0, uint256 amount1);\\n\\n    /// @notice Returns the position information associated with a given token ID.\\n    /// @dev Throws if the token ID is not valid.\\n    /// @param tokenId The ID of the token that represents the position\\n    /// @return nonce The nonce for permits\\n    /// @return operator The address that is approved for spending\\n    /// @return token0 The address of the token0 for a specific pool\\n    /// @return token1 The address of the token1 for a specific pool\\n    /// @return fee The fee associated with the pool\\n    /// @return tickLower The lower end of the tick range for the position\\n    /// @return tickUpper The higher end of the tick range for the position\\n    /// @return liquidity The liquidity of the position\\n    /// @return feeGrowthInside0LastX128 The fee growth of token0 as of the last action on the individual position\\n    /// @return feeGrowthInside1LastX128 The fee growth of token1 as of the last action on the individual position\\n    /// @return tokensOwed0 The uncollected amount of token0 owed to the position as of the last computation\\n    /// @return tokensOwed1 The uncollected amount of token1 owed to the position as of the last computation\\n    function positions(uint256 tokenId)\\n        external\\n        view\\n        returns (\\n            uint96 nonce,\\n            address operator,\\n            address token0,\\n            address token1,\\n            uint24 fee,\\n            int24 tickLower,\\n            int24 tickUpper,\\n            uint128 liquidity,\\n            uint256 feeGrowthInside0LastX128,\\n            uint256 feeGrowthInside1LastX128,\\n            uint128 tokensOwed0,\\n            uint128 tokensOwed1\\n        );\\n\\n    struct MintParams {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n        int24 tickLower;\\n        int24 tickUpper;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        address recipient;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Creates a new position wrapped in a NFT\\n    /// @dev Call this when the pool does exist and is initialized. Note that if the pool is created but not initialized\\n    /// a method does not exist, i.e. the pool is assumed to be initialized.\\n    /// @param params The params necessary to mint a position, encoded as `MintParams` in calldata\\n    /// @return tokenId The ID of the token that represents the minted position\\n    /// @return liquidity The amount of liquidity for this position\\n    /// @return amount0 The amount of token0\\n    /// @return amount1 The amount of token1\\n    function mint(MintParams calldata params)\\n        external\\n        payable\\n        returns (\\n            uint256 tokenId,\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct IncreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint256 amount0Desired;\\n        uint256 amount1Desired;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Increases the amount of liquidity in a position, with tokens paid by the `msg.sender`\\n    /// @param params tokenId The ID of the token for which liquidity is being increased,\\n    /// amount0Desired The desired amount of token0 to be spent,\\n    /// amount1Desired The desired amount of token1 to be spent,\\n    /// amount0Min The minimum amount of token0 to spend, which serves as a slippage check,\\n    /// amount1Min The minimum amount of token1 to spend, which serves as a slippage check,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return liquidity The new liquidity amount as a result of the increase\\n    /// @return amount0 The amount of token0 to acheive resulting liquidity\\n    /// @return amount1 The amount of token1 to acheive resulting liquidity\\n    function increaseLiquidity(IncreaseLiquidityParams calldata params)\\n        external\\n        payable\\n        returns (\\n            uint128 liquidity,\\n            uint256 amount0,\\n            uint256 amount1\\n        );\\n\\n    struct DecreaseLiquidityParams {\\n        uint256 tokenId;\\n        uint128 liquidity;\\n        uint256 amount0Min;\\n        uint256 amount1Min;\\n        uint256 deadline;\\n    }\\n\\n    /// @notice Decreases the amount of liquidity in a position and accounts it to the position\\n    /// @param params tokenId The ID of the token for which liquidity is being decreased,\\n    /// amount The amount by which liquidity will be decreased,\\n    /// amount0Min The minimum amount of token0 that should be accounted for the burned liquidity,\\n    /// amount1Min The minimum amount of token1 that should be accounted for the burned liquidity,\\n    /// deadline The time by which the transaction must be included to effect the change\\n    /// @return amount0 The amount of token0 accounted to the position's tokens owed\\n    /// @return amount1 The amount of token1 accounted to the position's tokens owed\\n    function decreaseLiquidity(DecreaseLiquidityParams calldata params)\\n        external\\n        payable\\n        returns (uint256 amount0, uint256 amount1);\\n\\n    struct CollectParams {\\n        uint256 tokenId;\\n        address recipient;\\n        uint128 amount0Max;\\n        uint128 amount1Max;\\n    }\\n\\n    /// @notice Collects up to a maximum amount of fees owed to a specific position to the recipient\\n    /// @param params tokenId The ID of the NFT for which tokens are being collected,\\n    /// recipient The account that should receive the tokens,\\n    /// amount0Max The maximum amount of token0 to collect,\\n    /// amount1Max The maximum amount of token1 to collect\\n    /// @return amount0 The amount of fees collected in token0\\n    /// @return amount1 The amount of fees collected in token1\\n    function collect(CollectParams calldata params) external payable returns (uint256 amount0, uint256 amount1);\\n\\n    /// @notice Burns a token ID, which deletes it from the NFT contract. The token must have 0 liquidity and all tokens\\n    /// must be collected first.\\n    /// @param tokenId The ID of the token that is being burned\\n    function burn(uint256 tokenId) external payable;\\n}\\n\",\"keccak256\":\"0xe1dadc73e60bf05d0b4e0f05bd2847c5783e833cc10352c14763360b13495ee1\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryImmutableState.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Immutable state\\n/// @notice Functions that return immutable state of the router\\ninterface IPeripheryImmutableState {\\n    /// @return Returns the address of the Uniswap V3 factory\\n    function factory() external view returns (address);\\n\\n    /// @return Returns the address of WETH9\\n    function WETH9() external view returns (address);\\n}\\n\",\"keccak256\":\"0x7affcfeb5127c0925a71d6a65345e117c33537523aeca7bc98085ead8452519d\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\n\\n/// @title Periphery Payments\\n/// @notice Functions to ease deposits and withdrawals of ETH\\ninterface IPeripheryPayments {\\n    /// @notice Unwraps the contract's WETH9 balance and sends it to recipient as ETH.\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing WETH9 from users.\\n    /// @param amountMinimum The minimum amount of WETH9 to unwrap\\n    /// @param recipient The address receiving ETH\\n    function unwrapWETH9(uint256 amountMinimum, address recipient) external payable;\\n\\n    /// @notice Refunds any ETH balance held by this contract to the `msg.sender`\\n    /// @dev Useful for bundling with mint or increase liquidity that uses ether, or exact output swaps\\n    /// that use ether for the input amount\\n    function refundETH() external payable;\\n\\n    /// @notice Transfers the full amount of a token held by this contract to recipient\\n    /// @dev The amountMinimum parameter prevents malicious contracts from stealing the token from users\\n    /// @param token The contract address of the token which will be transferred to `recipient`\\n    /// @param amountMinimum The minimum amount of token required for a transfer\\n    /// @param recipient The destination address of the token\\n    function sweepToken(\\n        address token,\\n        uint256 amountMinimum,\\n        address recipient\\n    ) external payable;\\n}\\n\",\"keccak256\":\"0xb547e10f1e69bed03621a62b73a503e260643066c6b4054867a4d1fef47eb274\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/IPoolInitializer.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\n/// @title Creates and initializes V3 Pools\\n/// @notice Provides a method for creating and initializing a pool, if necessary, for bundling with other methods that\\n/// require the pool to exist.\\ninterface IPoolInitializer {\\n    /// @notice Creates a new pool if it does not exist, then initializes if not initialized\\n    /// @dev This method can be bundled with others via IMulticall for the first action (e.g. mint) performed against a pool\\n    /// @param token0 The contract address of token0 of the pool\\n    /// @param token1 The contract address of token1 of the pool\\n    /// @param fee The fee amount of the v3 pool for the specified token pair\\n    /// @param sqrtPriceX96 The initial square root price of the pool as a Q64.96 value\\n    /// @return pool Returns the pool address based on the pair of tokens and fee, will return the newly created pool address if necessary\\n    function createAndInitializePoolIfNecessary(\\n        address token0,\\n        address token1,\\n        uint24 fee,\\n        uint160 sqrtPriceX96\\n    ) external payable returns (address pool);\\n}\\n\",\"keccak256\":\"0x9d7695e8d94c22cc5fcced602017aabb988de89981ea7bee29ea629d5328a862\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.7.5;\\npragma abicoder v2;\\n\\nimport '@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3SwapCallback.sol';\\n\\n/// @title Router token swapping functionality\\n/// @notice Functions for swapping tokens via Uniswap V3\\ninterface ISwapRouter is IUniswapV3SwapCallback {\\n    struct ExactInputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactInputSingleParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInputSingle(ExactInputSingleParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactInputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountIn;\\n        uint256 amountOutMinimum;\\n    }\\n\\n    /// @notice Swaps `amountIn` of one token for as much as possible of another along the specified path\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactInputParams` in calldata\\n    /// @return amountOut The amount of the received token\\n    function exactInput(ExactInputParams calldata params) external payable returns (uint256 amountOut);\\n\\n    struct ExactOutputSingleParams {\\n        address tokenIn;\\n        address tokenOut;\\n        uint24 fee;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n        uint160 sqrtPriceLimitX96;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another token\\n    /// @param params The parameters necessary for the swap, encoded as `ExactOutputSingleParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutputSingle(ExactOutputSingleParams calldata params) external payable returns (uint256 amountIn);\\n\\n    struct ExactOutputParams {\\n        bytes path;\\n        address recipient;\\n        uint256 deadline;\\n        uint256 amountOut;\\n        uint256 amountInMaximum;\\n    }\\n\\n    /// @notice Swaps as little as possible of one token for `amountOut` of another along the specified path (reversed)\\n    /// @param params The parameters necessary for the multi-hop swap, encoded as `ExactOutputParams` in calldata\\n    /// @return amountIn The amount of the input token\\n    function exactOutput(ExactOutputParams calldata params) external payable returns (uint256 amountIn);\\n}\\n\",\"keccak256\":\"0x9bfaf1feb32814623e627ab70f2409760b15d95f1f9b058e2b3399a8bb732975\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity =0.7.6;\\n\\nimport '@openzeppelin/contracts/token/ERC20/IERC20.sol';\\n\\n/// @title Interface for WETH9\\ninterface IWETH9 is IERC20 {\\n    /// @notice Deposit ether to get wrapped ether\\n    function deposit() external payable;\\n\\n    /// @notice Withdraw wrapped ether to get ether\\n    function withdraw(uint256) external;\\n}\\n\",\"keccak256\":\"0x6d7a8eb484e84bceb1d84c7be431c5b8120d519b0c2a7b4c7064c814635dea4c\",\"license\":\"GPL-2.0-or-later\"},\"@uniswap/v3-periphery/contracts/libraries/PoolAddress.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-2.0-or-later\\npragma solidity >=0.5.0;\\n\\n/// @title Provides functions for deriving a pool address from the factory, tokens, and the fee\\nlibrary PoolAddress {\\n    bytes32 internal constant POOL_INIT_CODE_HASH = 0xe34f199b19b2b4f47f68442619d555527d244f78a3297ea89325f843f87b8b54;\\n\\n    /// @notice The identifying key of the pool\\n    struct PoolKey {\\n        address token0;\\n        address token1;\\n        uint24 fee;\\n    }\\n\\n    /// @notice Returns PoolKey: the ordered tokens with the matched fee levels\\n    /// @param tokenA The first token of a pool, unsorted\\n    /// @param tokenB The second token of a pool, unsorted\\n    /// @param fee The fee level of the pool\\n    /// @return Poolkey The pool details with ordered token0 and token1 assignments\\n    function getPoolKey(\\n        address tokenA,\\n        address tokenB,\\n        uint24 fee\\n    ) internal pure returns (PoolKey memory) {\\n        if (tokenA > tokenB) (tokenA, tokenB) = (tokenB, tokenA);\\n        return PoolKey({token0: tokenA, token1: tokenB, fee: fee});\\n    }\\n\\n    /// @notice Deterministically computes the pool address given the factory and PoolKey\\n    /// @param factory The Uniswap V3 factory contract address\\n    /// @param key The PoolKey\\n    /// @return pool The contract address of the V3 pool\\n    function computeAddress(address factory, PoolKey memory key) internal pure returns (address pool) {\\n        require(key.token0 < key.token1);\\n        pool = address(\\n            uint256(\\n                keccak256(\\n                    abi.encodePacked(\\n                        hex'ff',\\n                        factory,\\n                        keccak256(abi.encode(key.token0, key.token1, key.fee)),\\n                        POOL_INIT_CODE_HASH\\n                    )\\n                )\\n            )\\n        );\\n    }\\n}\\n\",\"keccak256\":\"0x5edd84eb8ba7c12fd8cb6cffe52e1e9f3f6464514ee5f539c2283826209035a2\",\"license\":\"GPL-2.0-or-later\"},\"contracts/PredictiveLiquidityManagerFinal.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.7.6;\\r\\npragma abicoder v2; // \\u0627\\u0636\\u0627\\u0641\\u0647 \\u06a9\\u0631\\u062f\\u0646 \\u0627\\u06cc\\u0646 \\u062e\\u0637 \\u0628\\u0631\\u0627\\u06cc \\u067e\\u0634\\u062a\\u06cc\\u0628\\u0627\\u0646\\u06cc \\u0627\\u0632 struct \\u0647\\u0627 \\u062f\\u0631 \\u067e\\u0627\\u0631\\u0627\\u0645\\u062a\\u0631\\u0647\\u0627\\r\\n\\r\\n// OpenZeppelin ~3.4.0 Imports --- Updated Paths ---\\r\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/IERC20.sol\\\";\\r\\n// import \\\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\\\"; // Not available in OZ 3.4, decimals usually called directly on IERC20\\r\\nimport \\\"@openzeppelin/contracts/token/ERC20/SafeERC20.sol\\\"; // Path updated\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\"; // --- Added SafeMath ---\\r\\nimport \\\"@openzeppelin/contracts/utils/ReentrancyGuard.sol\\\"; // Path updated\\r\\n\\r\\n// Local Math Library (copied from OZ 4.x, made 0.7.6 compatible)\\r\\nimport \\\"./libraries/SqrtMath.sol\\\"; // --- Added Local Math Import ---\\r\\n\\r\\n// Uniswap V3 Core (\\u0646\\u0633\\u062e\\u0647 1.0.0)\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Pool.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/IUniswapV3Factory.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/interfaces/callback/IUniswapV3MintCallback.sol\\\";\\r\\nimport \\\"@uniswap/v3-core/contracts/libraries/TickMath.sol\\\";\\r\\n\\r\\n// Uniswap V3 Periphery (\\u0646\\u0633\\u062e\\u0647 1.4.3)\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/INonfungiblePositionManager.sol\\\";\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/ISwapRouter.sol\\\";\\r\\nimport \\\"@uniswap/v3-periphery/contracts/interfaces/external/IWETH9.sol\\\";\\r\\n// import \\\"@uniswap/v3-periphery/contracts/interfaces/IPeripheryPayments.sol\\\"; // --- Removed Import ---\\r\\n\\r\\n// \\u0627\\u0636\\u0627\\u0641\\u0647 \\u06a9\\u0631\\u062f\\u0646 \\u0627\\u06cc\\u0646 \\u0627\\u06cc\\u0646\\u062a\\u0631\\u0641\\u06cc\\u0633 \\u0642\\u0628\\u0644 \\u0627\\u0632 \\u062a\\u0639\\u0631\\u06cc\\u0641 \\u0642\\u0631\\u0627\\u0631\\u062f\\u0627\\u062f \\u0627\\u0635\\u0644\\u06cc\\r\\ninterface IERC20Decimals {\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\\r\\n// --- Contract Definition ---\\r\\ncontract PredictiveLiquidityManagerFinal is\\r\\n    Ownable,\\r\\n    ReentrancyGuard,\\r\\n    IUniswapV3MintCallback\\r\\n    // IPeripheryPayments  -- Removed inheritance\\r\\n{\\r\\n    using SafeERC20 for IERC20;\\r\\n    using SafeMath for uint256; // --- Using SafeMath for uint256 ---\\r\\n    // using Math for uint256; // Use local Math library directly where needed\\r\\n\\r\\n    // --- State Variables ---\\r\\n    IUniswapV3Factory public immutable factory;\\r\\n    INonfungiblePositionManager public immutable positionManager;\\r\\n    ISwapRouter public immutable swapRouter;\\r\\n    address public immutable token0;\\r\\n    address public immutable token1;\\r\\n    uint8 public immutable token0Decimals;\\r\\n    uint8 public immutable token1Decimals;\\r\\n    uint24 public immutable fee;\\r\\n    int24 public immutable tickSpacing;\\r\\n    address public immutable WETH9;\\r\\n\\r\\n    struct Position {\\r\\n        uint256 tokenId;\\r\\n        uint128 liquidity;\\r\\n        int24 tickLower;\\r\\n        int24 tickUpper;\\r\\n        bool active;\\r\\n    }\\r\\n    Position public currentPosition;\\r\\n\\r\\n    // Strategy Parameters\\r\\n    uint24 public rangeWidthMultiplier = 4;\\r\\n\\r\\n    // Swap Parameters Struct\\r\\n    struct SwapParams {\\r\\n        address tokenIn;\\r\\n        address tokenOut;\\r\\n        uint24 poolFee;\\r\\n        uint256 amountIn;\\r\\n        uint256 amountOutMinimum;\\r\\n        uint160 sqrtPriceLimitX96;\\r\\n    }\\r\\n\\r\\n    // \\u0627\\u06cc\\u0648\\u0646\\u062a\\u200c\\u0647\\u0627\\u06cc \\u0627\\u0635\\u0644\\u06cc\\r\\n    event OperationReported(\\r\\n        uint256 actualPrice,\\r\\n        uint256 predictedPrice,\\r\\n        int24 currentTick,\\r\\n        int24 predictedTick,\\r\\n        bool adjusted,\\r\\n        uint256 gasUsed\\r\\n    );\\r\\n\\r\\n    event LiquidityAdjusted(\\r\\n        uint256 tokenId,\\r\\n        int24 tickLower,\\r\\n        int24 tickUpper,\\r\\n        uint128 liquidity\\r\\n    );\\r\\n\\r\\n    event LiquidityRemoved(\\r\\n        uint256 indexed tokenId,\\r\\n        uint256 amount0,\\r\\n        uint256 amount1\\r\\n    );\\r\\n\\r\\n    event Swapped(\\r\\n        address indexed tokenIn,\\r\\n        address indexed tokenOut,\\r\\n        uint256 amountIn,\\r\\n        uint256 amountOut\\r\\n    );\\r\\n\\r\\n    event Deposited(\\r\\n        address indexed token,\\r\\n        address indexed sender,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    event Withdrawn(\\r\\n        address indexed token,\\r\\n        address indexed recipient,\\r\\n        uint256 amount\\r\\n    );\\r\\n\\r\\n    event LiquidityMintFailed(\\r\\n        uint256 amount0Desired,\\r\\n        uint256 amount1Desired,\\r\\n        string reason\\r\\n    );\\r\\n\\r\\n    event LiquidityRemoveFailed(uint256 indexed tokenId, string reason);\\r\\n\\r\\n    event StrategyParamUpdated(string paramName, uint256 newValue);\\r\\n\\r\\n    // \\u0627\\u06cc\\u0648\\u0646\\u062a \\u062c\\u062f\\u06cc\\u062f \\u0628\\u0631\\u0627\\u06cc \\u062c\\u0645\\u0639\\u200c\\u0622\\u0648\\u0631\\u06cc \\u062f\\u0627\\u062f\\u0647\\u200c\\u0647\\u0627\\r\\n    event LiquidityManagementMetrics(\\r\\n        uint256 timestamp, // \\u0632\\u0645\\u0627\\u0646 \\u0639\\u0645\\u0644\\u06cc\\u0627\\u062a\\r\\n        uint256 actualPrice, // \\u0642\\u06cc\\u0645\\u062a \\u0648\\u0627\\u0642\\u0639\\u06cc\\r\\n        uint256 predictedPrice, // \\u0642\\u06cc\\u0645\\u062a \\u067e\\u06cc\\u0634\\u200c\\u0628\\u06cc\\u0646\\u06cc \\u0634\\u062f\\u0647 LSTM\\r\\n        int24 currentTick, // \\u062a\\u06cc\\u06a9 \\u0641\\u0639\\u0644\\u06cc\\r\\n        int24 predictedTick, // \\u062a\\u06cc\\u06a9 \\u067e\\u06cc\\u0634\\u200c\\u0628\\u06cc\\u0646\\u06cc \\u0634\\u062f\\u0647\\r\\n        int24 tickLower, // \\u062a\\u06cc\\u06a9 \\u067e\\u0627\\u06cc\\u06cc\\u0646 \\u0645\\u062d\\u062f\\u0648\\u062f\\u0647 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        int24 tickUpper, // \\u062a\\u06cc\\u06a9 \\u0628\\u0627\\u0644\\u0627\\u06cc \\u0645\\u062d\\u062f\\u0648\\u062f\\u0647 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        uint128 liquidity, // \\u0645\\u0642\\u062f\\u0627\\u0631 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        uint256 amount0, // \\u0645\\u0642\\u062f\\u0627\\u0631 \\u062a\\u0648\\u06a9\\u0646 0\\r\\n        uint256 amount1 // \\u0645\\u0642\\u062f\\u0627\\u0631 \\u062a\\u0648\\u06a9\\u0646 1\\r\\n    );\\r\\n\\r\\n    // --- Constructor ---\\r\\n    constructor(\\r\\n        address _factory,\\r\\n        address _positionManager,\\r\\n        address _swapRouter,\\r\\n        address _token0,\\r\\n        address _token1,\\r\\n        uint24 _fee,\\r\\n        address _weth9,\\r\\n        address _initialOwner\\r\\n    ) {\\r\\n        // \\u0630\\u062e\\u06cc\\u0631\\u0647 \\u0645\\u0642\\u0627\\u062f\\u06cc\\u0631 \\u062f\\u0631 \\u0645\\u062a\\u063a\\u06cc\\u0631\\u0647\\u0627\\u06cc immutable\\r\\n        factory = IUniswapV3Factory(_factory);\\r\\n        positionManager = INonfungiblePositionManager(_positionManager);\\r\\n        swapRouter = ISwapRouter(_swapRouter);\\r\\n        token0 = _token0;\\r\\n        token1 = _token1;\\r\\n        fee = _fee;\\r\\n        WETH9 = _weth9;\\r\\n\\r\\n        // \\u0628\\u0631\\u0631\\u0633\\u06cc decimals \\u0628\\u0627 \\u0627\\u0633\\u062a\\u0641\\u0627\\u062f\\u0647 \\u0627\\u0632 try-catch\\r\\n        try IERC20Decimals(_token0).decimals() returns (uint8 _decimals) {\\r\\n            token0Decimals = _decimals;\\r\\n        } catch {\\r\\n            revert(\\\"Token0 does not support decimals()\\\");\\r\\n        }\\r\\n\\r\\n        try IERC20Decimals(_token1).decimals() returns (uint8 _decimals) {\\r\\n            token1Decimals = _decimals;\\r\\n        } catch {\\r\\n            revert(\\\"Token1 does not support decimals()\\\");\\r\\n        }\\r\\n\\r\\n        // \\u0630\\u062e\\u06cc\\u0631\\u0647 tickSpacing \\u062f\\u0631 \\u06cc\\u06a9 \\u0645\\u062a\\u063a\\u06cc\\u0631 \\u0645\\u0648\\u0642\\u062a\\r\\n        address poolAddress = IUniswapV3Factory(_factory).getPool(\\r\\n            _token0,\\r\\n            _token1,\\r\\n            _fee\\r\\n        );\\r\\n        require(poolAddress != address(0), \\\"Pool does not exist\\\");\\r\\n        tickSpacing = IUniswapV3Pool(poolAddress).tickSpacing();\\r\\n\\r\\n        // \\u062a\\u0646\\u0638\\u06cc\\u0645 \\u0645\\u062c\\u0648\\u0632\\u0647\\u0627 \\u0628\\u0627 \\u0627\\u0633\\u062a\\u0641\\u0627\\u062f\\u0647 \\u0627\\u0632 \\u0622\\u062f\\u0631\\u0633\\u200c\\u0647\\u0627\\u06cc \\u0648\\u0631\\u0648\\u062f\\u06cc \\u0628\\u0647 \\u062c\\u0627\\u06cc \\u0645\\u062a\\u063a\\u06cc\\u0631\\u0647\\u0627\\u06cc immutable\\r\\n        IERC20(_token0).safeApprove(\\r\\n            address(_positionManager),\\r\\n            type(uint256).max\\r\\n        );\\r\\n        IERC20(_token1).safeApprove(\\r\\n            address(_positionManager),\\r\\n            type(uint256).max\\r\\n        );\\r\\n        IERC20(_token0).safeApprove(address(_swapRouter), type(uint256).max);\\r\\n        IERC20(_token1).safeApprove(address(_swapRouter), type(uint256).max);\\r\\n\\r\\n        if (_weth9 != address(0)) {\\r\\n            IERC20(_weth9).safeApprove(\\r\\n                address(_positionManager),\\r\\n                type(uint256).max\\r\\n            );\\r\\n            IERC20(_weth9).safeApprove(address(_swapRouter), type(uint256).max);\\r\\n        }\\r\\n\\r\\n        if (_initialOwner != address(0)) {\\r\\n            transferOwnership(_initialOwner);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Automated Liquidity Management (Owner Only) ---\\r\\n    function updatePredictionAndAdjust(\\r\\n        uint256 predictedPriceDecimal\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        uint256 gasStart = gasleft();\\r\\n        bool adjusted = false;\\r\\n\\r\\n        // \\u062f\\u0631\\u06cc\\u0627\\u0641\\u062a \\u0627\\u0637\\u0644\\u0627\\u0639\\u0627\\u062a \\u0642\\u06cc\\u0645\\u062a \\u0648 \\u062a\\u06cc\\u06a9 \\u0641\\u0639\\u0644\\u06cc\\r\\n        (\\r\\n            uint160 sqrtPriceX96,\\r\\n            int24 currentTick\\r\\n        ) = _getCurrentSqrtPriceAndTick();\\r\\n        uint256 currentPriceDecimal = _sqrtPriceX96ToPrice(sqrtPriceX96);\\r\\n        int24 predictedTick = _priceToTick(predictedPriceDecimal);\\r\\n\\r\\n        // \\u0645\\u062d\\u0627\\u0633\\u0628\\u0647 \\u0645\\u0648\\u0642\\u0639\\u06cc\\u062a \\u062c\\u062f\\u06cc\\u062f\\r\\n        (int24 targetTickLower, int24 targetTickUpper) = _calculateTicks(\\r\\n            predictedTick\\r\\n        );\\r\\n\\r\\n        // \\u0628\\u0631\\u0648\\u0632\\u0631\\u0633\\u0627\\u0646\\u06cc \\u0645\\u0648\\u0642\\u0639\\u06cc\\u062a \\u062f\\u0631 \\u0635\\u0648\\u0631\\u062a \\u0646\\u06cc\\u0627\\u0632\\r\\n        if (\\r\\n            !currentPosition.active ||\\r\\n            targetTickLower != currentPosition.tickLower ||\\r\\n            targetTickUpper != currentPosition.tickUpper\\r\\n        ) {\\r\\n            _adjustLiquidity(targetTickLower, targetTickUpper);\\r\\n            adjusted = true;\\r\\n        }\\r\\n\\r\\n        // \\u0627\\u0631\\u0633\\u0627\\u0644 \\u062f\\u0627\\u062f\\u0647\\u200c\\u0647\\u0627 \\u0628\\u0631\\u0627\\u06cc \\u06af\\u0632\\u0627\\u0631\\u0634 \\u0639\\u0645\\u0644\\u06cc\\u0627\\u062a\\u06cc\\r\\n        emit OperationReported(\\r\\n            currentPriceDecimal,\\r\\n            predictedPriceDecimal,\\r\\n            currentTick,\\r\\n            predictedTick,\\r\\n            adjusted,\\r\\n            gasStart - gasleft()\\r\\n        );\\r\\n\\r\\n        // \\u0627\\u0631\\u0633\\u0627\\u0644 \\u062f\\u0627\\u062f\\u0647\\u200c\\u0647\\u0627 \\u0628\\u0631\\u0627\\u06cc \\u062a\\u062d\\u0644\\u06cc\\u0644\\r\\n        emit LiquidityManagementMetrics(\\r\\n            block.timestamp,\\r\\n            currentPriceDecimal,\\r\\n            predictedPriceDecimal,\\r\\n            currentTick,\\r\\n            predictedTick,\\r\\n            currentPosition.tickLower,\\r\\n            currentPosition.tickUpper,\\r\\n            currentPosition.liquidity,\\r\\n            IERC20(token0).balanceOf(address(this)),\\r\\n            IERC20(token1).balanceOf(address(this))\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function swap(\\r\\n        SwapParams calldata params\\r\\n    ) external nonReentrant onlyOwner returns (uint256 amountOut) {\\r\\n        require(\\r\\n            params.tokenIn == token0 || params.tokenIn == token1,\\r\\n            \\\"Invalid tokenIn\\\"\\r\\n        );\\r\\n        require(\\r\\n            params.tokenOut == token0 || params.tokenOut == token1,\\r\\n            \\\"Invalid tokenOut\\\"\\r\\n        );\\r\\n\\r\\n        // \\u0627\\u0646\\u062a\\u0642\\u0627\\u0644 \\u062a\\u0648\\u06a9\\u0646\\u200c\\u0647\\u0627\\r\\n        IERC20(params.tokenIn).safeTransferFrom(\\r\\n            msg.sender,\\r\\n            address(this),\\r\\n            params.amountIn\\r\\n        );\\r\\n        IERC20(params.tokenIn).safeApprove(\\r\\n            address(swapRouter),\\r\\n            params.amountIn\\r\\n        );\\r\\n\\r\\n        // \\u0627\\u0646\\u062c\\u0627\\u0645 \\u0633\\u0648\\u0627\\u067e\\r\\n        ISwapRouter.ExactInputSingleParams memory swapParams = ISwapRouter\\r\\n            .ExactInputSingleParams({\\r\\n                tokenIn: params.tokenIn,\\r\\n                tokenOut: params.tokenOut,\\r\\n                fee: params.poolFee,\\r\\n                recipient: address(this),\\r\\n                deadline: block.timestamp,\\r\\n                amountIn: params.amountIn,\\r\\n                amountOutMinimum: params.amountOutMinimum,\\r\\n                sqrtPriceLimitX96: params.sqrtPriceLimitX96\\r\\n            });\\r\\n\\r\\n        amountOut = swapRouter.exactInputSingle(swapParams);\\r\\n        emit Swapped(\\r\\n            params.tokenIn,\\r\\n            params.tokenOut,\\r\\n            params.amountIn,\\r\\n            amountOut\\r\\n        );\\r\\n\\r\\n        // \\u0631\\u06cc\\u0633\\u062a \\u062a\\u0623\\u06cc\\u06cc\\u062f\\u06cc\\u0647\\r\\n        IERC20(params.tokenIn).safeApprove(address(swapRouter), 0);\\r\\n\\r\\n        return amountOut;\\r\\n    }\\r\\n\\r\\n    // --- Internal Liquidity Management Helpers ---\\r\\n    function _adjustLiquidity(int24 tickLower, int24 tickUpper) internal {\\r\\n        if (currentPosition.active) {\\r\\n            _removeLiquidity();\\r\\n        }\\r\\n        uint256 balance0 = IERC20(token0).balanceOf(address(this));\\r\\n        uint256 balance1 = IERC20(token1).balanceOf(address(this));\\r\\n        if (balance0 > 0 || balance1 > 0) {\\r\\n            _mintLiquidity(tickLower, tickUpper, balance0, balance1);\\r\\n        } else {\\r\\n            currentPosition.active = false;\\r\\n            currentPosition.tokenId = 0;\\r\\n            currentPosition.liquidity = 0;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    function _removeLiquidity() internal {\\r\\n        require(\\r\\n            currentPosition.active && currentPosition.tokenId != 0,\\r\\n            \\\"No active position\\\"\\r\\n        );\\r\\n        uint256 currentTokenId = currentPosition.tokenId;\\r\\n        uint128 currentLiquidity = currentPosition.liquidity;\\r\\n\\r\\n        // \\u067e\\u0627\\u06a9 \\u06a9\\u0631\\u062f\\u0646 \\u0648\\u0636\\u0639\\u06cc\\u062a \\u0642\\u0628\\u0644 \\u0627\\u0632 \\u0641\\u0631\\u0627\\u062e\\u0648\\u0627\\u0646\\u06cc \\u062e\\u0627\\u0631\\u062c\\u06cc\\r\\n        currentPosition.active = false;\\r\\n        uint256 _tokenId = currentPosition.tokenId;\\r\\n        currentPosition.tokenId = 0;\\r\\n        currentPosition.liquidity = 0;\\r\\n        currentPosition.tickLower = 0;\\r\\n        currentPosition.tickUpper = 0;\\r\\n\\r\\n        bool decreased = false;\\r\\n        bool collected = false;\\r\\n        string memory errorMsg = \\\"\\\";\\r\\n\\r\\n        // \\u06a9\\u0627\\u0647\\u0634 \\u0646\\u0642\\u062f\\u06cc\\u0646\\u06af\\u06cc\\r\\n        if (currentLiquidity > 0) {\\r\\n            try\\r\\n                positionManager.decreaseLiquidity(\\r\\n                    INonfungiblePositionManager.DecreaseLiquidityParams({\\r\\n                        tokenId: _tokenId,\\r\\n                        liquidity: currentLiquidity,\\r\\n                        amount0Min: 0,\\r\\n                        amount1Min: 0,\\r\\n                        deadline: block.timestamp\\r\\n                    })\\r\\n                )\\r\\n            {\\r\\n                decreased = true;\\r\\n            } catch Error(string memory reason) {\\r\\n                errorMsg = reason;\\r\\n            } catch {\\r\\n                errorMsg = \\\"Decrease failed\\\";\\r\\n            }\\r\\n        } else {\\r\\n            decreased = true;\\r\\n        }\\r\\n\\r\\n        // \\u062c\\u0645\\u0639\\u200c\\u0622\\u0648\\u0631\\u06cc \\u062a\\u0648\\u06a9\\u0646\\u200c\\u0647\\u0627\\r\\n        (uint256 amount0, uint256 amount1) = (0, 0);\\r\\n        try\\r\\n            positionManager.collect(\\r\\n                INonfungiblePositionManager.CollectParams({\\r\\n                    tokenId: _tokenId,\\r\\n                    recipient: address(this),\\r\\n                    amount0Max: type(uint128).max,\\r\\n                    amount1Max: type(uint128).max\\r\\n                })\\r\\n            )\\r\\n        returns (uint256 a0, uint256 a1) {\\r\\n            (amount0, amount1) = (a0, a1);\\r\\n            collected = true;\\r\\n        } catch Error(string memory reason) {\\r\\n            if (bytes(errorMsg).length == 0) errorMsg = reason;\\r\\n        } catch {\\r\\n            if (bytes(errorMsg).length == 0) errorMsg = \\\"Collect failed\\\";\\r\\n        }\\r\\n\\r\\n        // \\u0633\\u0648\\u0632\\u0627\\u0646\\u062f\\u0646 NFT\\r\\n        if (decreased) {\\r\\n            try positionManager.burn(_tokenId) {} catch {}\\r\\n        }\\r\\n\\r\\n        if (!decreased || !collected) {\\r\\n            emit LiquidityRemoveFailed(_tokenId, errorMsg);\\r\\n        }\\r\\n\\r\\n        emit LiquidityRemoved(_tokenId, amount0, amount1);\\r\\n    }\\r\\n\\r\\n    function _mintLiquidity(\\r\\n        int24 tickLower,\\r\\n        int24 tickUpper,\\r\\n        uint256 amount0Desired,\\r\\n        uint256 amount1Desired\\r\\n    ) internal {\\r\\n        require(!currentPosition.active, \\\"Position already active\\\");\\r\\n\\r\\n        INonfungiblePositionManager.MintParams\\r\\n            memory params = INonfungiblePositionManager.MintParams({\\r\\n                token0: token0,\\r\\n                token1: token1,\\r\\n                fee: fee,\\r\\n                tickLower: tickLower,\\r\\n                tickUpper: tickUpper,\\r\\n                amount0Desired: amount0Desired,\\r\\n                amount1Desired: amount1Desired,\\r\\n                amount0Min: 0,\\r\\n                amount1Min: 0,\\r\\n                recipient: address(this),\\r\\n                deadline: block.timestamp\\r\\n            });\\r\\n\\r\\n        uint256 tokenId;\\r\\n        uint128 liquidity;\\r\\n        uint256 amount0Actual;\\r\\n        uint256 amount1Actual;\\r\\n\\r\\n        try positionManager.mint(params) returns (\\r\\n            uint256 _tokenId,\\r\\n            uint128 _liquidity,\\r\\n            uint256 _amount0,\\r\\n            uint256 _amount1\\r\\n        ) {\\r\\n            tokenId = _tokenId;\\r\\n            liquidity = _liquidity;\\r\\n            amount0Actual = _amount0;\\r\\n            amount1Actual = _amount1;\\r\\n\\r\\n            if (liquidity > 0) {\\r\\n                currentPosition = Position(\\r\\n                    tokenId,\\r\\n                    liquidity,\\r\\n                    tickLower,\\r\\n                    tickUpper,\\r\\n                    true\\r\\n                );\\r\\n                emit LiquidityAdjusted(\\r\\n                    tokenId,\\r\\n                    tickLower,\\r\\n                    tickUpper,\\r\\n                    liquidity\\r\\n                );\\r\\n            } else {\\r\\n                try positionManager.burn(tokenId) {} catch {}\\r\\n                emit LiquidityMintFailed(\\r\\n                    amount0Desired,\\r\\n                    amount1Desired,\\r\\n                    \\\"Zero liquidity minted\\\"\\r\\n                );\\r\\n            }\\r\\n        } catch Error(string memory reason) {\\r\\n            emit LiquidityMintFailed(amount0Desired, amount1Desired, reason);\\r\\n        } catch {\\r\\n            emit LiquidityMintFailed(\\r\\n                amount0Desired,\\r\\n                amount1Desired,\\r\\n                \\\"Unknown mint error\\\"\\r\\n            );\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Internal Calculation Helpers ---\\r\\n    function _calculateTicks(\\r\\n        int24 targetCenterTick\\r\\n    ) internal view returns (int24 tickLower, int24 tickUpper) {\\r\\n        int24 halfWidth = tickSpacing * int24(rangeWidthMultiplier);\\r\\n\\r\\n        tickLower = (targetCenterTick / tickSpacing) * tickSpacing - halfWidth;\\r\\n        tickUpper = (targetCenterTick / tickSpacing) * tickSpacing + halfWidth;\\r\\n\\r\\n        if (tickLower < TickMath.MIN_TICK) tickLower = TickMath.MIN_TICK;\\r\\n        if (tickUpper > TickMath.MAX_TICK) tickUpper = TickMath.MAX_TICK;\\r\\n    }\\r\\n\\r\\n    function _getCurrentSqrtPriceAndTick()\\r\\n        internal\\r\\n        view\\r\\n        returns (uint160 sqrtPriceX96, int24 tick)\\r\\n    {\\r\\n        address poolAddress = factory.getPool(token0, token1, fee);\\r\\n        require(poolAddress != address(0), \\\"Pool doesn't exist\\\");\\r\\n        (sqrtPriceX96, tick, , , , , ) = IUniswapV3Pool(poolAddress).slot0();\\r\\n    }\\r\\n\\r\\n    function _priceToTick(uint256 priceDecimal) internal view returns (int24) {\\r\\n        uint256 priceForSqrt;\\r\\n        if (token1Decimals >= token0Decimals) {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token1Decimals).sub(uint256(token0Decimals)));\\r\\n            priceForSqrt = priceDecimal.div(factor);\\r\\n        } else {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token0Decimals).sub(uint256(token1Decimals)));\\r\\n            priceForSqrt = priceDecimal.mul(factor);\\r\\n        }\\r\\n\\r\\n        uint160 sqrtPriceX96 = uint160(\\r\\n            SqrtMath.sqrt(priceForSqrt).mul(2 ** 96)\\r\\n        );\\r\\n        return TickMath.getTickAtSqrtRatio(sqrtPriceX96);\\r\\n    }\\r\\n\\r\\n    function _sqrtPriceX96ToPrice(\\r\\n        uint160 sqrtPriceX96\\r\\n    ) internal view returns (uint256 priceDecimal) {\\r\\n        uint256 ratioX192 = uint256(sqrtPriceX96).mul(uint256(sqrtPriceX96));\\r\\n        uint256 priceUnadjusted = ratioX192 >> 192;\\r\\n\\r\\n        if (token1Decimals >= token0Decimals) {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token1Decimals).sub(uint256(token0Decimals)));\\r\\n            priceDecimal = priceUnadjusted.mul(factor);\\r\\n        } else {\\r\\n            uint256 factor = 10 **\\r\\n                (uint256(token0Decimals).sub(uint256(token1Decimals)));\\r\\n            priceDecimal = priceUnadjusted.div(factor);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Emit Event ---\\r\\n    function _emitOperationReported(\\r\\n        uint256 _actualPrice,\\r\\n        uint256 _predictedPrice,\\r\\n        int24 _currentTick,\\r\\n        int24 _predictedTick,\\r\\n        bool _adjusted,\\r\\n        uint256 _gasUsed\\r\\n    ) internal {\\r\\n        emit OperationReported(\\r\\n            _actualPrice,\\r\\n            _predictedPrice,\\r\\n            _currentTick,\\r\\n            _predictedTick,\\r\\n            _adjusted,\\r\\n            _gasUsed\\r\\n        );\\r\\n    }\\r\\n\\r\\n    // --- Uniswap V3 Mint Callback ---\\r\\n    function uniswapV3MintCallback(\\r\\n        uint256 amount0Owed,\\r\\n        uint256 amount1Owed,\\r\\n        bytes calldata /* data */\\r\\n    ) external override {\\r\\n        require(\\r\\n            msg.sender == address(positionManager),\\r\\n            \\\"Callback sender mismatch\\\"\\r\\n        );\\r\\n\\r\\n        if (amount0Owed > 0) {\\r\\n            IERC20(token0).safeTransfer(msg.sender, amount0Owed);\\r\\n        }\\r\\n        if (amount1Owed > 0) {\\r\\n            IERC20(token1).safeTransfer(msg.sender, amount1Owed);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Payments Functions ---\\r\\n    receive() external payable {} // Keep payable receive\\r\\n\\r\\n    function refundETH() external payable {\\r\\n        require(address(this).balance > 0, \\\"No ETH to refund\\\");\\r\\n        payable(msg.sender).transfer(address(this).balance);\\r\\n    }\\r\\n\\r\\n    function sweepToken(\\r\\n        address token,\\r\\n        uint256 amountMinimum,\\r\\n        address recipient\\r\\n    ) external payable onlyOwner {\\r\\n        require(recipient != address(0), \\\"Invalid recipient\\\");\\r\\n        uint256 balance = IERC20(token).balanceOf(address(this));\\r\\n        require(balance >= amountMinimum, \\\"Insufficient balance\\\");\\r\\n        IERC20(token).safeTransfer(recipient, balance);\\r\\n    }\\r\\n\\r\\n    function unwrapWETH9(\\r\\n        uint256 amountMinimum,\\r\\n        address recipient\\r\\n    ) external payable {\\r\\n        require(WETH9 != address(0), \\\"WETH9 not set\\\");\\r\\n        require(recipient != address(0), \\\"Invalid recipient\\\");\\r\\n        uint256 balance = IWETH9(WETH9).balanceOf(address(this));\\r\\n        require(balance >= amountMinimum, \\\"Insufficient WETH\\\");\\r\\n        IWETH9(WETH9).withdraw(balance);\\r\\n        payable(recipient).transfer(balance);\\r\\n    }\\r\\n\\r\\n    // --- Token Handling (Owner Only) ---\\r\\n    function depositToken(\\r\\n        address _token,\\r\\n        uint256 _amount\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        require(\\r\\n            _token == token0 ||\\r\\n                _token == token1 ||\\r\\n                (_token == WETH9 && WETH9 != address(0)), // Allow WETH9 deposit only if set\\r\\n            \\\"Invalid deposit token\\\"\\r\\n        );\\r\\n        require(_amount > 0, \\\"Deposit amount zero\\\");\\r\\n        IERC20(_token).safeTransferFrom(msg.sender, address(this), _amount);\\r\\n        emit Deposited(_token, msg.sender, _amount);\\r\\n    }\\r\\n\\r\\n    function depositETH() external payable nonReentrant onlyOwner {\\r\\n        require(WETH9 != address(0), \\\"WETH9 address not set\\\");\\r\\n        require(msg.value > 0, \\\"Deposit ETH value zero\\\");\\r\\n        // Wrap received ETH into WETH9\\r\\n        IWETH9(WETH9).deposit{value: msg.value}();\\r\\n        emit Deposited(WETH9, msg.sender, msg.value); // Emit WETH9 address\\r\\n    }\\r\\n\\r\\n    function withdrawToken(\\r\\n        address _token,\\r\\n        uint256 _amount,\\r\\n        address _recipient\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        require(_recipient != address(0), \\\"Invalid recipient address\\\");\\r\\n        require(_amount > 0, \\\"Withdraw amount zero\\\");\\r\\n        // Check sufficient balance before transfer\\r\\n        require(\\r\\n            IERC20(_token).balanceOf(address(this)) >= _amount,\\r\\n            \\\"Insufficient balance\\\"\\r\\n        );\\r\\n        IERC20(_token).safeTransfer(_recipient, _amount);\\r\\n        emit Withdrawn(_token, _recipient, _amount);\\r\\n    }\\r\\n\\r\\n    function withdrawETH(\\r\\n        uint256 _amount,\\r\\n        address payable _recipient // Use address payable directly\\r\\n    ) external nonReentrant onlyOwner {\\r\\n        require(WETH9 != address(0), \\\"WETH9 address not set\\\");\\r\\n        require(_recipient != address(0), \\\"Invalid recipient address\\\");\\r\\n        require(_amount > 0, \\\"Withdraw amount zero\\\");\\r\\n        // Check sufficient WETH balance before unwrapping\\r\\n        require(\\r\\n            IWETH9(WETH9).balanceOf(address(this)) >= _amount,\\r\\n            \\\"Insufficient WETH balance\\\"\\r\\n        );\\r\\n\\r\\n        // Unwrap WETH9 to ETH\\r\\n        IWETH9(WETH9).withdraw(_amount);\\r\\n        // Transfer ETH to recipient\\r\\n        _recipient.transfer(_amount); // Use transfer or low-level call\\r\\n        emit Withdrawn(WETH9, _recipient, _amount); // Emit WETH9 address\\r\\n    }\\r\\n\\r\\n    // --- Strategy Parameter Adjustment ---\\r\\n    function setRangeWidthMultiplier(uint24 _multiplier) external onlyOwner {\\r\\n        require(_multiplier > 0 && _multiplier <= 100, \\\"Invalid multiplier\\\");\\r\\n        rangeWidthMultiplier = _multiplier;\\r\\n        emit StrategyParamUpdated(\\\"rangeWidthMultiplier\\\", _multiplier);\\r\\n    }\\r\\n\\r\\n    // --- View Functions (Remain mostly the same) ---\\r\\n    function getActivePositionDetails()\\r\\n        external\\r\\n        view\\r\\n        returns (\\r\\n            uint256 tokenId,\\r\\n            uint128 liquidity,\\r\\n            int24 tickLower,\\r\\n            int24 tickUpper,\\r\\n            bool active\\r\\n        )\\r\\n    {\\r\\n        return (\\r\\n            currentPosition.tokenId,\\r\\n            currentPosition.liquidity,\\r\\n            currentPosition.tickLower,\\r\\n            currentPosition.tickUpper,\\r\\n            currentPosition.active\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function getContractBalances()\\r\\n        external\\r\\n        view\\r\\n        returns (uint256 balance0, uint256 balance1, uint256 balanceWETH)\\r\\n    {\\r\\n        balance0 = IERC20(token0).balanceOf(address(this));\\r\\n        balance1 = IERC20(token1).balanceOf(address(this));\\r\\n        balanceWETH = WETH9 != address(0)\\r\\n            ? IERC20(WETH9).balanceOf(address(this))\\r\\n            : 0;\\r\\n    }\\r\\n\\r\\n    function getPoolAddress() external view returns (address) {\\r\\n        return factory.getPool(token0, token1, fee);\\r\\n    }\\r\\n\\r\\n    // Helper to check absolute value for decimals difference\\r\\n    function abs(int256 x) private pure returns (uint256) {\\r\\n        return uint256(x >= 0 ? x : -x);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x6094682bb8f926cba7a522eac0cab11fe28b627fe8265c31c2f9605611a21371\",\"license\":\"MIT\"},\"contracts/libraries/SqrtMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.7.6;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\"; // Import OZ 3.4 SafeMath\\r\\n\\r\\n/**\\r\\n * @title Safe Square Root Math Library for Solidity 0.7.x\\r\\n * @author Adapted from OpenZeppelin Contracts & other sources\\r\\n * @notice Provides square root functionality using SafeMath for uint256.\\r\\n */\\r\\nlibrary SqrtMath {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    // Optional: Include Rounding enum if your main contract needs the rounding variant\\r\\n    enum Rounding {\\r\\n        Floor,\\r\\n        Ceil\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer square root of a number rounded down (floor).\\r\\n     * Uses Babylonian method with SafeMath. 6 iterations are sufficient for uint256.\\r\\n     */\\r\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\r\\n        if (a == 0) return 0;\\r\\n\\r\\n        // Initial estimate - can start with a simple estimate like a/2 or use log2 based estimate\\r\\n        // Using roughly x = 2**(log2(a)/2) based estimate (safer)\\r\\n        uint256 estimate = 1 << (log2(a) >> 1);\\r\\n        if (estimate == 0) estimate = 1; // Ensure estimate is not zero if a > 0\\r\\n\\r\\n        // Babylonian method iterations using SafeMath\\r\\n        // result = (estimate + a / estimate) / 2;\\r\\n        uint256 result = estimate.add(a.div(estimate)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n\\r\\n        // Final check for floor rounding (integer truncation might overshoot)\\r\\n        // Check if result * result > a\\r\\n        // Avoid direct multiplication if result can be large, use division check: result > a / result\\r\\n        if (result > a.div(result)) {\\r\\n            // If result > a/result, it means result*result > a (potential overflow avoided)\\r\\n            // So, the floor value is result - 1\\r\\n            return result.sub(1);\\r\\n        } else {\\r\\n            // Otherwise, result*result <= a, so result is the floor value\\r\\n            return result;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates sqrt(a), following the selected rounding direction.\\r\\n     */\\r\\n    function sqrt(\\r\\n        uint256 a,\\r\\n        Rounding rounding\\r\\n    ) internal pure returns (uint256) {\\r\\n        uint256 resultFloor = sqrt(a); // Calculate floor value first\\r\\n        if (rounding == Rounding.Floor) {\\r\\n            return resultFloor;\\r\\n        } else {\\r\\n            // rounding == Rounding.Ceil\\r\\n            // Check if ceil is needed (i.e., if a is not a perfect square)\\r\\n            // If resultFloor * resultFloor < a, then we need to round up\\r\\n            if (resultFloor.mul(resultFloor) < a) {\\r\\n                // Use SafeMath for the check\\r\\n                return resultFloor.add(1);\\r\\n            } else {\\r\\n                return resultFloor; // a was a perfect square, floor == ceil\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Internal helper: log2 needed for initial estimate ---\\r\\n    /**\\r\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\r\\n     * Returns 0 if given 0. Adapted from OZ 4.x for 0.7.6 compatibility using assembly.\\r\\n     */\\r\\n    function log2(uint256 x) internal pure returns (uint256 r) {\\r\\n        assembly {\\r\\n            let v := x\\r\\n            if iszero(v) {\\r\\n                r := 0\\r\\n            }\\r\\n            if gt(v, 0xffffffffffffffffffffffffffffffff) {\\r\\n                r := add(r, 128)\\r\\n                v := shr(128, v)\\r\\n            }\\r\\n            if gt(v, 0xffffffffffffffff) {\\r\\n                r := add(r, 64)\\r\\n                v := shr(64, v)\\r\\n            }\\r\\n            if gt(v, 0xffffffff) {\\r\\n                r := add(r, 32)\\r\\n                v := shr(32, v)\\r\\n            }\\r\\n            if gt(v, 0xffff) {\\r\\n                r := add(r, 16)\\r\\n                v := shr(16, v)\\r\\n            }\\r\\n            if gt(v, 0xff) {\\r\\n                r := add(r, 8)\\r\\n                v := shr(8, v)\\r\\n            }\\r\\n            if gt(v, 0xf) {\\r\\n                r := add(r, 4)\\r\\n                v := shr(4, v)\\r\\n            }\\r\\n            if gt(v, 0x3) {\\r\\n                r := add(r, 2)\\r\\n                v := shr(2, v)\\r\\n            }\\r\\n            if gt(v, 0x1) {\\r\\n                r := add(r, 1)\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7b28ea41070f2aa2bc2a07bb69c8c78511d7e7067cfb8c8c857be435811bed38\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[{"astId":7,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"_owner","offset":0,"slot":"0","type":"t_address"},{"astId":1271,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"_status","offset":0,"slot":"1","type":"t_uint256"},{"astId":2951,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"currentPosition","offset":0,"slot":"2","type":"t_struct(Position)2949_storage"},{"astId":2954,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"rangeWidthMultiplier","offset":0,"slot":"4","type":"t_uint24"}],"types":{"t_address":{"encoding":"inplace","label":"address","numberOfBytes":"20"},"t_bool":{"encoding":"inplace","label":"bool","numberOfBytes":"1"},"t_int24":{"encoding":"inplace","label":"int24","numberOfBytes":"3"},"t_struct(Position)2949_storage":{"encoding":"inplace","label":"struct PredictiveLiquidityManagerFinal.Position","members":[{"astId":2940,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"tokenId","offset":0,"slot":"0","type":"t_uint256"},{"astId":2942,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"liquidity","offset":0,"slot":"1","type":"t_uint128"},{"astId":2944,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"tickLower","offset":16,"slot":"1","type":"t_int24"},{"astId":2946,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"tickUpper","offset":19,"slot":"1","type":"t_int24"},{"astId":2948,"contract":"contracts/PredictiveLiquidityManagerFinal.sol:PredictiveLiquidityManagerFinal","label":"active","offset":22,"slot":"1","type":"t_bool"}],"numberOfBytes":"64"},"t_uint128":{"encoding":"inplace","label":"uint128","numberOfBytes":"16"},"t_uint24":{"encoding":"inplace","label":"uint24","numberOfBytes":"3"},"t_uint256":{"encoding":"inplace","label":"uint256","numberOfBytes":"32"}}},"userdoc":{"kind":"user","methods":{},"version":1}}},"contracts/libraries/SqrtMath.sol":{"SqrtMath":{"abi":[],"devdoc":{"author":"Adapted from OpenZeppelin Contracts & other sources","kind":"dev","methods":{},"title":"Safe Square Root Math Library for Solidity 0.7.x","version":1},"evm":{"bytecode":{"generatedSources":[],"linkReferences":{},"object":"60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220401943d630b25c8686c7893c95c7b0fcb85cfa4b1952323f7af49d3f39edcff464736f6c63430007060033","opcodes":"PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH NOT NUMBER 0xD6 ADDRESS 0xB2 0x5C DUP7 DUP7 0xC7 DUP10 EXTCODECOPY SWAP6 0xC7 0xB0 0xFC 0xB8 0x5C STATICCALL 0x4B NOT MSTORE ORIGIN EXTCODEHASH PUSH27 0xF49D3F39EDCFF464736F6C63430007060033000000000000000000 ","sourceMap":"350:3994:31:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220401943d630b25c8686c7893c95c7b0fcb85cfa4b1952323f7af49d3f39edcff464736f6c63430007060033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BLOCKHASH NOT NUMBER 0xD6 ADDRESS 0xB2 0x5C DUP7 DUP7 0xC7 DUP10 EXTCODECOPY SWAP6 0xC7 0xB0 0xFC 0xB8 0x5C STATICCALL 0x4B NOT MSTORE ORIGIN EXTCODEHASH PUSH27 0xF49D3F39EDCFF464736F6C63430007060033000000000000000000 ","sourceMap":"350:3994:31:-:0;;;;;;;;"},"gasEstimates":{"creation":{"codeDepositCost":"17200","executionCost":"97","totalCost":"17297"},"internal":{"log2(uint256)":"infinite","sqrt(uint256)":"infinite","sqrt(uint256,enum SqrtMath.Rounding)":"infinite"}},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.7.6+commit.7338295f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Adapted from OpenZeppelin Contracts & other sources\",\"kind\":\"dev\",\"methods\":{},\"title\":\"Safe Square Root Math Library for Solidity 0.7.x\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Provides square root functionality using SafeMath for uint256.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SqrtMath.sol\":\"SqrtMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/math/SafeMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\npragma solidity >=0.6.0 <0.8.0;\\n\\n/**\\n * @dev Wrappers over Solidity's arithmetic operations with added overflow\\n * checks.\\n *\\n * Arithmetic operations in Solidity wrap on overflow. This can easily result\\n * in bugs, because programmers usually assume that an overflow raises an\\n * error, which is the standard behavior in high level programming languages.\\n * `SafeMath` restores this intuition by reverting the transaction when an\\n * operation overflows.\\n *\\n * Using this library instead of the unchecked operations eliminates an entire\\n * class of bugs, so it's recommended to use it always.\\n */\\nlibrary SafeMath {\\n    /**\\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        uint256 c = a + b;\\n        if (c < a) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the substraction of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b > a) return (false, 0);\\n        return (true, a - b);\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) return (true, 0);\\n        uint256 c = a * b;\\n        if (c / a != b) return (false, 0);\\n        return (true, c);\\n    }\\n\\n    /**\\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a / b);\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\\n     *\\n     * _Available since v3.4._\\n     */\\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\\n        if (b == 0) return (false, 0);\\n        return (true, a % b);\\n    }\\n\\n    /**\\n     * @dev Returns the addition of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `+` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Addition cannot overflow.\\n     */\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting on\\n     * overflow (when the result is negative).\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b <= a, \\\"SafeMath: subtraction overflow\\\");\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the multiplication of two unsigned integers, reverting on\\n     * overflow.\\n     *\\n     * Counterpart to Solidity's `*` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Multiplication cannot overflow.\\n     */\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        if (a == 0) return 0;\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n        return c;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: division by zero\\\");\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting when dividing by zero.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        require(b > 0, \\\"SafeMath: modulo by zero\\\");\\n        return a % b;\\n    }\\n\\n    /**\\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\\n     * overflow (when the result is negative).\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {trySub}.\\n     *\\n     * Counterpart to Solidity's `-` operator.\\n     *\\n     * Requirements:\\n     *\\n     * - Subtraction cannot overflow.\\n     */\\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        return a - b;\\n    }\\n\\n    /**\\n     * @dev Returns the integer division of two unsigned integers, reverting with custom message on\\n     * division by zero. The result is rounded towards zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryDiv}.\\n     *\\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\\n     * uses an invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a / b;\\n    }\\n\\n    /**\\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\\n     * reverting with custom message when dividing by zero.\\n     *\\n     * CAUTION: This function is deprecated because it requires allocating memory for the error\\n     * message unnecessarily. For custom revert reasons use {tryMod}.\\n     *\\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\\n     * invalid opcode to revert (consuming all remaining gas).\\n     *\\n     * Requirements:\\n     *\\n     * - The divisor cannot be zero.\\n     */\\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        return a % b;\\n    }\\n}\\n\",\"keccak256\":\"0xcc78a17dd88fa5a2edc60c8489e2f405c0913b377216a5b26b35656b2d0dab52\",\"license\":\"MIT\"},\"contracts/libraries/SqrtMath.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.7.6;\\r\\n\\r\\nimport \\\"@openzeppelin/contracts/math/SafeMath.sol\\\"; // Import OZ 3.4 SafeMath\\r\\n\\r\\n/**\\r\\n * @title Safe Square Root Math Library for Solidity 0.7.x\\r\\n * @author Adapted from OpenZeppelin Contracts & other sources\\r\\n * @notice Provides square root functionality using SafeMath for uint256.\\r\\n */\\r\\nlibrary SqrtMath {\\r\\n    using SafeMath for uint256;\\r\\n\\r\\n    // Optional: Include Rounding enum if your main contract needs the rounding variant\\r\\n    enum Rounding {\\r\\n        Floor,\\r\\n        Ceil\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the integer square root of a number rounded down (floor).\\r\\n     * Uses Babylonian method with SafeMath. 6 iterations are sufficient for uint256.\\r\\n     */\\r\\n    function sqrt(uint256 a) internal pure returns (uint256) {\\r\\n        if (a == 0) return 0;\\r\\n\\r\\n        // Initial estimate - can start with a simple estimate like a/2 or use log2 based estimate\\r\\n        // Using roughly x = 2**(log2(a)/2) based estimate (safer)\\r\\n        uint256 estimate = 1 << (log2(a) >> 1);\\r\\n        if (estimate == 0) estimate = 1; // Ensure estimate is not zero if a > 0\\r\\n\\r\\n        // Babylonian method iterations using SafeMath\\r\\n        // result = (estimate + a / estimate) / 2;\\r\\n        uint256 result = estimate.add(a.div(estimate)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n        result = result.add(a.div(result)).div(2);\\r\\n\\r\\n        // Final check for floor rounding (integer truncation might overshoot)\\r\\n        // Check if result * result > a\\r\\n        // Avoid direct multiplication if result can be large, use division check: result > a / result\\r\\n        if (result > a.div(result)) {\\r\\n            // If result > a/result, it means result*result > a (potential overflow avoided)\\r\\n            // So, the floor value is result - 1\\r\\n            return result.sub(1);\\r\\n        } else {\\r\\n            // Otherwise, result*result <= a, so result is the floor value\\r\\n            return result;\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Calculates sqrt(a), following the selected rounding direction.\\r\\n     */\\r\\n    function sqrt(\\r\\n        uint256 a,\\r\\n        Rounding rounding\\r\\n    ) internal pure returns (uint256) {\\r\\n        uint256 resultFloor = sqrt(a); // Calculate floor value first\\r\\n        if (rounding == Rounding.Floor) {\\r\\n            return resultFloor;\\r\\n        } else {\\r\\n            // rounding == Rounding.Ceil\\r\\n            // Check if ceil is needed (i.e., if a is not a perfect square)\\r\\n            // If resultFloor * resultFloor < a, then we need to round up\\r\\n            if (resultFloor.mul(resultFloor) < a) {\\r\\n                // Use SafeMath for the check\\r\\n                return resultFloor.add(1);\\r\\n            } else {\\r\\n                return resultFloor; // a was a perfect square, floor == ceil\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // --- Internal helper: log2 needed for initial estimate ---\\r\\n    /**\\r\\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\\r\\n     * Returns 0 if given 0. Adapted from OZ 4.x for 0.7.6 compatibility using assembly.\\r\\n     */\\r\\n    function log2(uint256 x) internal pure returns (uint256 r) {\\r\\n        assembly {\\r\\n            let v := x\\r\\n            if iszero(v) {\\r\\n                r := 0\\r\\n            }\\r\\n            if gt(v, 0xffffffffffffffffffffffffffffffff) {\\r\\n                r := add(r, 128)\\r\\n                v := shr(128, v)\\r\\n            }\\r\\n            if gt(v, 0xffffffffffffffff) {\\r\\n                r := add(r, 64)\\r\\n                v := shr(64, v)\\r\\n            }\\r\\n            if gt(v, 0xffffffff) {\\r\\n                r := add(r, 32)\\r\\n                v := shr(32, v)\\r\\n            }\\r\\n            if gt(v, 0xffff) {\\r\\n                r := add(r, 16)\\r\\n                v := shr(16, v)\\r\\n            }\\r\\n            if gt(v, 0xff) {\\r\\n                r := add(r, 8)\\r\\n                v := shr(8, v)\\r\\n            }\\r\\n            if gt(v, 0xf) {\\r\\n                r := add(r, 4)\\r\\n                v := shr(4, v)\\r\\n            }\\r\\n            if gt(v, 0x3) {\\r\\n                r := add(r, 2)\\r\\n                v := shr(2, v)\\r\\n            }\\r\\n            if gt(v, 0x1) {\\r\\n                r := add(r, 1)\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x7b28ea41070f2aa2bc2a07bb69c8c78511d7e7067cfb8c8c857be435811bed38\",\"license\":\"MIT\"}},\"version\":1}","storageLayout":{"storage":[],"types":null},"userdoc":{"kind":"user","methods":{},"notice":"Provides square root functionality using SafeMath for uint256.","version":1}}}}}}